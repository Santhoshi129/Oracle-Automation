[
  {
    "question": "First, you decide the radius of each circle in the logo. Then using the same radius you draw 5 circles of the same size. All these circles will have properties like radius and color. All circles share behaviors to calculate circumference and area. Can you identify which of the following is an object?",
    "correct_options": [
      "circle\n                                                                \n                                                        \n                                                         (*)"
    ]
  },
  {
    "question": "First, you decide the radius of each circle in the logo. Then using the same radius you draw 5 circles of the same size. All these circles will have properties like radius and color. All circles share behaviors to calculate circumference and area. Can you identify which of the following is an object?",
    "correct_options": ["circle"]
  },
  {
    "question": "Once you have learned how to write programs and build systems, you no longer need any input or involvement from any users as you are perfectly capable of delivering the systems that businesses need and want.",
    "correct_options": [
      "False. Business requirements can and will change. For instance, new legal requirements may arise."
    ]
  },
  {
    "question": "The purpose of adding comments is to increase the ability to understand the logic easily.",
    "correct_options": ["True"]
  },
  {
    "question": "Which two statements are true about the break statement?",
    "correct_options": [
      "The execution of the program will stop at the statement following the loop-statement.",
      "When a break statement is executed inside a loop, the loop-statement is terminated immediately."
    ]
  },
  {
    "question": "A continue statement is used to skip the remaining statements in the body of a loop and continue with the next iteration of the loop.",
    "correct_options": ["True"]
  },
  {
    "question": "When is an update expression in a for loop executed?",
    "correct_options": ["After each iteration through the loop."]
  },
  {
    "question": "Looping continues as long as the boolean expression in the for loop is false.",
    "correct_options": ["False"]
  },
  {
    "question": "In the given syntax of the for loop, which part represents the header section?  for (initialization; condition; update) {  // Code statement(s) }",
    "correct_options": ["for (initialization; condition; update) { }"]
  },
  {
    "question": "What is the result? public static void main(String[] args) { for (;;) { System.out.println(\"Welcome to Java\"); } }",
    "correct_options": [
      "Program prints \"Welcome to Java\" an infinite number of times."
    ]
  },
  {
    "question": "Given: for(int i = 0; i > 10; i++){ } What type of variable is i?",
    "correct_options": ["Local"]
  },
  {
    "question": "Which two are valid syntax to create a for loop?",
    "correct_options": [
      "for(int i = 10; i >= 0; i++ ) { System.out.println(\"i=\"+i); }",
      "for(int i = 10; i >= 0; ) { System.out.println(\"i=\"+i); }"
    ]
  },
  {
    "question": "Which loop type is considered to be a post-test loop?",
    "correct_options": ["do-while"]
  },
  {
    "question": "A pre-test loop evaluates the condition prior to the execution of the loop.",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the two are pre-test loops?",
    "correct_options": ["while", "do-while"]
  },
  {
    "question": "A while loop is often used with Scanner input as you don't know many times you'll need to re-prompt the user if they type bad data.",
    "correct_options": ["True"]
  },
  {
    "question": "Which statement is NOT true about do-while loops?",
    "correct_options": [
      "Statements in the loop are executed once initially, and then the condition is evaluated."
    ]
  },
  {
    "question": "The while loop continually executes a block of statements while a particular condition is false.",
    "correct_options": ["True"]
  },
  {
    "question": "The following creates a reference in memory named q that can refer to eight different doubles via an index. True or false? double[] q = new double[8];",
    "correct_options": ["True"]
  },
  {
    "question": "What will be the content of the array variable table after executing the following code?",
    "correct_options": ["1 0 01 1 01 1 1"]
  },
  {
    "question": "What is the output of the following segment of code? int num[]={9,8,7,6,5,4,3,2,1}; for(int i=0;i<9;i=i+3) System.out.print(num[i]);",
    "correct_options": ["97531"]
  },
  {
    "question": "A computer company has one million dollars to give as a bonus to the employees, and they wish to distribute it evenly amongst them. The company writes a program to calculate the amount each employee receives, given the number of employees. Unfortunately, the employees all went on strike before they heard about the bonus. This means that the company has zero employees. What will happen to the program if the company enters 0 into the employment number?",
    "correct_options": [
      "An exception will occur because it is not possible to divide by zero."
    ]
  },
  {
    "question": "What does it mean to override a method?",
    "correct_options": [
      "It is a way of redefining methods of a parent class inside the child class, with the same name, parameters, and return type."
    ]
  },
  {
    "question": "Which of the following would be most beneficial for this scenario? Joe is a college student who has a tendency to lose his books. Replacing them is getting costly. In an attempt to get organized, Joe wants to create a program that will store his textbooks in one group of books, but he wants to make each book type the subject of the book (i.e. MathBook is a book). How could he store these different subject books into a single array?",
    "correct_options": [
      "By ignoring the subject type and initializing all the book as objects of type Book."
    ]
  },
  {
    "question": "Which of the following creates a method that returns a boolean value?",
    "correct_options": ["None of the above."]
  },
  {
    "question": "The following statement compiles and executes. What can you say for sure? submarine.dive(depth);",
    "correct_options": [
      "The variable depth must be an int.",
      "submarine must be a method.",
      "dive must be a method."
    ]
  },
  {
    "question": "Which of the following demonstrates the correct way to create an applet Battlefield?",
    "correct_options": ["public class Battlefield extends Applet{...}"]
  },
  {
    "question": "Static classes can exist as stand-alone classes. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "Which of the following calls the method calculate correctly?",
    "correct_options": ["ThisClass t=new ThisClass(); int x=t.calculate(3,4);"]
  },
  {
    "question": "If the return type from a method is boolean then 2.5 is a valid return value. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "In Java, each case segment of a switch statement requires the keyword break to avoid \"falling through\".",
    "correct_options": ["True"]
  },
  {
    "question": "Determine whether this boolean expression evaluates to true or false: !(3 < 4 && 5 > 6 || 6 <= 6 && 7 - 1 == 6)",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following expressions will evaluate to true when x and y are boolean variables with opposite values? I. (x || y) && !(x && y) II. (x && !y) || (!x && y) III. (x || y) && (!x ||!y)",
    "correct_options": ["II and III"]
  },
  {
    "question": "Which of the following best describes a while loop?",
    "correct_options": [
      "A loop that is executed repeatedly until the conditional statement is false."
    ]
  },
  {
    "question": "Which of the following creates a String reference named str and instantiates it?",
    "correct_options": ["String str=\"str\";"]
  },
  {
    "question": "Which of the following declares and initializes a two-dimensional array with 3 rows and 2 columns?",
    "correct_options": ["int[][] a={{1,1},{1,1},{1,1}};"]
  },
  {
    "question": "A final static variable can change at runtime. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "If Oak extends Tree, it is possible to declare an object such that Tree grandfatherT = new Oak(); True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Static methods can change instance variables at runtime. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "A workspace cannot have more than one stored projects. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "The following creates a reference in memory named q that can refer to eight different doubles via an index. True or false? double[] q = new double[8];",
    "correct_options": ["True"]
  },
  {
    "question": "If Sandal extends Shoe, it is possible to declare an object such that Sandal s = new Shoe();",
    "correct_options": ["False"]
  },
  {
    "question": "What does it mean to override a method?",
    "correct_options": [
      "It is a way of redefining methods of a parent class inside the child class, with the same name, parameters, and return type."
    ]
  },
  {
    "question": "Which of the following would be most beneficial for this scenario? Joe is a college student who has a tendency to lose his books. Replacing them is getting costly. In an attempt to get organized, Joe wants to create a program that will store his textbooks in one group of books, but he wants to make each book type the subject of the book (i.e. MathBook is a book). How could he store these different subject books into a single array?",
    "correct_options": [
      "By ignoring the subject type and initializing all the book as objects of type Book."
    ]
  },
  {
    "question": "Which of the following creates a method that returns a boolean value?",
    "correct_options": ["None of the above."]
  },
  {
    "question": "The following statement compiles and executes. What can you say for sure? submarine.dive(depth);",
    "correct_options": [
      "The variable depth must be an int.",
      "submarine must be a method.",
      "dive must be a method."
    ]
  },
  {
    "question": "Which of the following demonstrates the correct way to create an applet Battlefield?",
    "correct_options": ["public class Battlefield extends Applet{...}"]
  },
  {
    "question": "Static classes can exist as stand-alone classes. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "Which of the following calls the method calculate correctly?",
    "correct_options": ["ThisClass t=new ThisClass(); int x=t.calculate(3,4);"]
  },
  {
    "question": "If the return type from a method is boolean then 2.5 is a valid return value. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "In Java, each case segment of a switch statement requires the keyword break to avoid \"falling through\".",
    "correct_options": ["True"]
  },
  {
    "question": "Determine whether this boolean expression evaluates to true or false: !(3 < 4 && 5 > 6 || 6 <= 6 && 7 - 1 == 6)",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following expressions will evaluate to true when x and y are boolean variables with opposite values? I. (x || y) && !(x && y) II. (x && !y) || (!x && y) III. (x || y) && (!x ||!y)",
    "correct_options": ["II and III"]
  },
  {
    "question": "Which of the following best describes a while loop?",
    "correct_options": [
      "A loop that is executed repeatedly until the conditional statement is false."
    ]
  },
  {
    "question": "A workspace cannot have more than one stored projects. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "Which of the following instantiates a String named name to Oracle?",
    "correct_options": ["String name=\"Oracle\";"]
  },
  {
    "question": "Consider the following code snippet. What is printed?",
    "correct_options": ["87668"]
  },
  {
    "question": "Determine whether this boolean expression evaluates to true or false: !(3 < 4 && 5 > 6 || 6 <= 6 && 7 - 1 == 6)",
    "correct_options": ["True"]
  },
  {
    "question": "double array[] = new double[8]; After execution of this statement, which of the following are true?",
    "correct_options": ["array.length is 8"]
  },
  {
    "question": "What is a hierarchy?",
    "correct_options": [
      "A structure that categorizes and organizes relationships among ideas and concepts of things with the most general at the top and the most specific at the bottom."
    ]
  },
  {
    "question": "What is wrong with the following class declaration? class Account{ private int number; private String name; public Account; }",
    "correct_options": ["The constructor method has no definition."]
  },
  {
    "question": "The basic unit of encapsulation in Java is the primitive data type. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "You can create static class methods inside any Java class. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "There is only one copy a static class variable in the JVM. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Static methods can change instance variables at runtime. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "Identify the correct way to declare an abstract class.",
    "correct_options": ["public abstract class ClassName{...}"]
  },
  {
    "question": "What is the Java keyword final used for in a program?",
    "correct_options": [
      "It restricts a class from being extendable and restricts methods from being overridden."
    ]
  },
  {
    "question": "Which of the following are access modifiers?",
    "correct_options": ["public", "private", "protected"]
  },
  {
    "question": "When a String object is created it must be assigned a value. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "Consider the following: You are writing a class and are using a global variable. Inside a method, you declare a local variable with the same name as the global variable. This programming style is poor because inside the method, the global variable will have precedence over the local variable with the same name. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Consider: public class MyClass{ public MyClass(){/*code*/} // more code...} To instantiate MyClass, what would you write?",
    "correct_options": ["MyClass m = new MyClass();"]
  },
  {
    "question": "A class always has a constructor. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "Which of the following creates an instance of the class below?",
    "correct_options": ["ThisClass t=new ThisClass();"]
  },
  {
    "question": "Which of the following would be most beneficial for this scenario? Joe is a college student who has a tendency to lose his books. Replacing them is getting costly. In an attempt to get organized, Joe wants to create a program that will store his textbooks in one group of books, but he wants to make each book type the subject of the book (i.e. MathBook is a book). How could he store these different subject books into a single array?",
    "correct_options": [
      "By ignoring the subject type and initializing all the book as objects of type Book."
    ]
  },
  {
    "question": "What is Polymorphism?",
    "correct_options": [
      "The concept that a variable or reference can hold multiple types of objects."
    ]
  },
  {
    "question": "An access modifier is a keyword that allows subclasses to access methods, data, and constructors from their parent class. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "Which of the following correctly defines a subclass (or child class)?",
    "correct_options": [
      "A class that inherits methods and fields from a more general class."
    ]
  },
  {
    "question": "Declaring and instantiating a String is much like any other type of variable. However, once instantiated, they are final and cannot be changed. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "The following creates a reference in memory named q that can refer to six different integers via an index. True or false? int[] q = new int[8];",
    "correct_options": ["False"]
  },
  {
    "question": "If Oak extends Tree, it is possible to declare an object such that Tree grandfatherT = new Oak(); True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following creates an object from the Animal class listed below:",
    "correct_options": ["Animal cat=new Animal();"]
  },
  {
    "question": "The following code creates an object of type Animal: Animal a;",
    "correct_options": ["False"]
  },
  {
    "question": "Which of the following can be used as a parameter?",
    "correct_options": [
      "Arrays",
      "Constructors",
      "Objects",
      "Strings",
      "Integers"
    ]
  },
  {
    "question": "Which of the following correctly defines overloading?",
    "correct_options": [
      "Having more than one constructor with the same name but different arguments."
    ]
  },
  {
    "question": "Which of the following could be a reason to need to pass an object into a method?",
    "correct_options": ["All of the above."]
  },
  {
    "question": "Which of the following specifies accessibility to variables, methods, and classes?",
    "correct_options": ["Access modifiers"]
  },
  {
    "question": "Static classes can have different access specifiers than the parent class. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "Non-final static class variables should be private to prevent changes from other classes. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "What is the output of the following lines of code? int j=7,k=5,m=8,result; result=j/m*k; System.out.println(result);",
    "correct_options": ["4.375"]
  },
  {
    "question": "The following code is an example of instantiating a String object: String str = String( \"Hello\" ); True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "Given the code below, which of the following calls are valid? String s = new String(\"abc\");",
    "correct_options": [
      "s.trim()",
      "s.replace('a', 'A')",
      "s.toUpperCase()",
      "s.substring(2)"
    ]
  },
  {
    "question": "Methods are generally declared as public so other classes may use them. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following can be declared final?",
    "correct_options": [
      "Classes",
      "Methods",
      "Local variables",
      "Method parameters",
      "All of the above"
    ]
  },
  {
    "question": "Static classes can exist as standalone classes. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "What value will return for j when the setValue method is called?",
    "correct_options": ["11"]
  },
  {
    "question": "Which of the following may be part of a class definition?",
    "correct_options": [
      "instance variables",
      "instance methods",
      "constructors",
      "comments",
      "all of the above"
    ]
  },
  {
    "question": "The following statement compiles and executes. What can you say for sure? submarine.dive(depth);",
    "correct_options": ["The variable depth must be an int."]
  },
  {
    "question": "What is the output of the following code segment: int n = 13; System.out.print(doNothing(n)); System.out.print(\" \", n); where the code from the method doNothing is: public double doNothing(int n) { n = n + 8; return (double) 12/n; }",
    "correct_options": ["0.571, 13"]
  },
  {
    "question": "What will the following code segment output? String s=\"n\"nn\"\"; System.out.println(s);",
    "correct_options": ["\"\"\n\"\"\n\n\"\""]
  },
  {
    "question": "A Java IDE does not provide views to help you navigate a hierarchy of information. True or False?",
    "correct_options": ["False"]
  },
  {
    "question": "The following creates a reference in memory named q that can refer to eight different doubles via an index. True or false? double[] q = new double[8];",
    "correct_options": ["True"]
  },
  {
    "question": "If a class is immutable then it must be abstract. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "If Sandal extends Shoe, it is possible to declare an object such that Sandal s = new Shoe();",
    "correct_options": ["False"]
  },
  {
    "question": "Static variables can't use which of the following modifiers?",
    "correct_options": ["friendly"]
  },
  {
    "question": "Static classes can't return instances of the parent class when the parent class uses a private constructor. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following could be a reason to return an object?",
    "correct_options": [
      "The method makes changes to the object and you wish to continue to use the updated object outside of the method."
    ]
  },
  {
    "question": "You are assigned to write a method that compares two objects of type Career. One requirement of your assignment is to have your method compare the \"greatestPossibleSalary\" instance data of Career objects. The \"greatestPossibleSalary\" field is data type int. What would be the best return type from your compare method?",
    "correct_options": ["Integer, because it is the easiest to code with."]
  },
  {
    "question": "How is it possible for overloading to work?",
    "correct_options": [
      "Java Virtual Machine searches until it finds a constructor name and argument type match."
    ]
  },
  {
    "question": "Which of the following is a goal of the object model?",
    "correct_options": [
      "Providing modular code that can be reused by other programs or classes."
    ]
  },
  {
    "question": "If Sandal extends Shoe, it is possible to declare an object such that Sandal s = new Shoe();",
    "correct_options": ["False"]
  },
  {
    "question": "It is possible to override methods such as equals() and toString() in a subclass of Object to fit the needs of the objects of the subclass. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following is true?",
    "correct_options": [
      "A class always has a constructor (possibly automatically supplied by the java compiler)."
    ]
  },
  {
    "question": "What operator do you use to call an object's constructor method and create a new object?",
    "correct_options": ["new"]
  },
  {
    "question": "A class can have multiple constructors. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Updating the input of a loop allows you to implement the code with the next element rather than repeating the code always with the same element. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In the code fragment below, the syntax for the for loop's initialization is correct. True or false?public class ForLoop { public static void main (String args[]) { for ((int 1=10) (i<20) (i++)) { System.out.println (\"i: \" + i); } } }",
    "correct_options": ["False"]
  },
  {
    "question": "Which of the following correctly initializes a for loop that executes 5 times?",
    "correct_options": ["for(int i = 0; i < 5; i++)"]
  },
  {
    "question": "A counter used in a for loop cannot be initialized within the For loop header. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "The six relational operators in Java are:",
    "correct_options": [">, <, ==, !=, <=, >="]
  },
  {
    "question": "The three logic operators in Java are:",
    "correct_options": ["&&, ||, !"]
  },
  {
    "question": "Which of the following expressions will evaluate to true when x and y are boolean variables with opposite values? I. (x || y) && !(x && y) II. (x && !y) || (!x && y) III. (x || y) && (!x ||!y)",
    "correct_options": ["I only"]
  },
  {
    "question": "Which of the following correctly initializes an instance of Scanner, called \"in\", that reads input from the console screen?",
    "correct_options": ["Scanner in = new Scanner(System.in);"]
  },
  {
    "question": "The following prints Yes on the screen. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "Given the following declaration: int z=5,m=6; Which line of Java code properly casts one type into another without data loss?",
    "correct_options": ["double x=(double)z/m;"]
  },
  {
    "question": "What is the output of the following lines of code? int j=6,k=8,m=2,result;result=j-k%3*m; System.out.println(result);",
    "correct_options": ["2"]
  },
  {
    "question": "Which of the following statements correctly assigns \"3 times 10 to the 4th power\" to the variable number?",
    "correct_options": ["double number=3*10e4;"]
  },
  {
    "question": "A _______________ is used to organize Java related files.",
    "correct_options": ["Package"]
  },
  {
    "question": "When you open more than one file in a Java IDE the system will __________________.",
    "correct_options": ["Use tabs to display all files open."]
  },
  {
    "question": "The == operator tests if two String references are pointing to the same String object. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "The following code prints 5 \"a\"'s to the screen:",
    "correct_options": ["False"]
  },
  {
    "question": "Which of the following creates an Object from the Animal class listed below?",
    "correct_options": ["Animal dog=new Animal(50);"]
  },
  {
    "question": "The constructor method must always have at least one parameter. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "Which of the following are true about abstract methods?",
    "correct_options": [
      "They must be declared in an abstract class.",
      "They must be overridden in a non-abstract subclass.",
      "They cannot have a method body."
    ]
  },
  {
    "question": "It is possible to inherit from an abstract class. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following correctly defines a superclass (or parent class)?",
    "correct_options": [
      "A class that passes down its methods to more specialized classes."
    ]
  },
  {
    "question": "What is a UML?",
    "correct_options": [
      "Unified Modeling Language, a standardized language for modeling systems and structures in programming."
    ]
  },
  {
    "question": "Static methods can return any object type. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Static classes can extend any class in their class path. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "Which of the following statements about static methods is true?",
    "correct_options": [
      "They exist once per class.",
      "They can access any instance variable."
    ]
  },
  {
    "question": "A team is working on a coding project. They desire that all portions of their code should have access to the classes that they write. What access modifier should be used for each class?",
    "correct_options": ["public"]
  },
  {
    "question": "Cameron wishes to write a method that takes in two objects and returns the one with the greatest value. Is this possible?",
    "correct_options": [
      "Yes, methods can take objects in as parameters and can also return objects all within the same method."
    ]
  },
  {
    "question": "Which of the following are relational operators in Java?",
    "correct_options": ["<", "<=", "==", "!=", "All of the above."]
  },
  {
    "question": "This keyword is used to instruct specific code when the input for a switch statement that does not match any of the cases.",
    "correct_options": ["default"]
  },
  {
    "question": "Determine whether this boolean expression evaluates to true or false: !(3 < 4 && 6 > 6 || 6 <= 6 && 7 - 2 == 6)",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following correctly matches the switch statement keyword to its function?",
    "correct_options": [
      "default: signals what code to execute if the input does not match any of the cases"
    ]
  },
  {
    "question": "Determine whether this boolean expression evaluates to true or false: !(3 < 4 && 5 > 6 || 6 <= 6 && 7 - 1 == 6)",
    "correct_options": ["True"]
  },
  {
    "question": "In a for loop, the counter is automatically incremented after each loop iteration. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "What is one significant difference between a while loop and a do-while loop?",
    "correct_options": [
      "A DO-WHILE loop will always execute the code at least once, even if the conditional statement for the WHILE is never true. A WHILE loop is only executed if the conditional statement is true."
    ]
  },
  {
    "question": "How many times will the following loop be executed? What is the value of x after the loop has finished? What is the value of count after the loop has finished? int count = 17; int x = 1; while(count > x){ x*=3; count-=3; }",
    "correct_options": ["3; 9; 11"]
  },
  {
    "question": "All of the following are essential to initializing a for loop, except which one?",
    "correct_options": ["Having an if statement."]
  },
  {
    "question": "In a for loop the counter is not automatically incremented after each loop iteration. Code must be written to increment the counter. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "How would you use the ternary operator to rewrite this if statement?if (balance < 500) fee = 10;else fee = 0;",
    "correct_options": ["fee = ( balance < 500) ? 0 : 10;"]
  },
  {
    "question": "Which of the two diagrams below illustrate the correct syntax for variables used in an if-else statement?",
    "correct_options": ["Example A"]
  },
  {
    "question": "In an if-else construct, the condition to be evaluated must be contained within parentheses. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "In an if-else construct the condition to be evaluated must end with a semi-colon. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "The following code fragment properly implements the switch statement. True or false? default(input) switch '+': answer+=num; break; case '-': answer-=num; break; !default System.out.println(\"Invalid input\");",
    "correct_options": ["False"]
  },
  {
    "question": "How would you use the ternary operator to rewrite this if statement?if (skillLevel > 5) numberOfEnemies = 10;else numberOfEnemies = 5;",
    "correct_options": ["numberOfEnemies = ( skillLevel > 5) ? 10 : 5;"]
  },
  {
    "question": "What will print if the following Java code is executed?",
    "correct_options": ["4"]
  },
  {
    "question": "switch statements work on all input types including, but not limited to, int, char, and String. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Identify which situation could be an example of a while loop.",
    "correct_options": [
      "Taking coins out of a pile one at a time and adding their value to the total until there are no more coins in the pile to add."
    ]
  },
  {
    "question": "Which of the following is true about a do-while loop?",
    "correct_options": [
      "It is a modified while loop that allows the program to run through the loop once before testing the boolean condition."
    ]
  },
  {
    "question": "What should replace the comment \"//your answer here\" in the code below if the code is meant to take no action when i % 2 is 0 (in other words when i is even)? for(int i = 0; i < 10; i++){ if(i%2 == 0) //your answer here else k+=3; }",
    "correct_options": ["continue;"]
  },
  {
    "question": "The syntax below represents a valid initialization of a for loop counter. True or False?public class ForLoop { public static void main (String args[]) {  for (int i=10; i <20; i++)  {System.out.println(\"i: \"+i); } }}",
    "correct_options": ["True"]
  },
  {
    "question": "When the for loop condition statement is met the construct is exited. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "What is a loop?",
    "correct_options": [
      "A set of logic that is repeatedly executed until a certain condition is met."
    ]
  },
  {
    "question": "For both the if-else construct and the for loop, it is true to say that when the condition statement is met, the construct is exited. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "For every opening curly brace { there does not need to be a closing curly brace} for the program to compile without error. True or False?",
    "correct_options": ["False"]
  },
  {
    "question": "When converting gallons to liters its best to put the calculation result into a variable with a _______________ data type.",
    "correct_options": ["double"]
  },
  {
    "question": "In a Java IDE, when you run a Java Application, where may the results display?",
    "correct_options": ["Console View"]
  },
  {
    "question": "Which of the following is not a legal name for a variable?",
    "correct_options": ["4geeks"]
  },
  {
    "question": "What is the output of the following lines of code? int j=7,k=5,m=8,result;  result=j-k%3*m;  System.out.println(result);",
    "correct_options": ["2"]
  },
  {
    "question": "What two values can a boolean variable have?",
    "correct_options": ["True and false"]
  },
  {
    "question": "Which line of Java code assigns the value of 5 raised to the power of 8 to a?",
    "correct_options": ["double a=Math.pow(5,8);"]
  },
  {
    "question": "Which of the following is a legal identifier?",
    "correct_options": ["dgo2sleep"]
  },
  {
    "question": "The == operator can be used to compare two String objects. The result is always true if the two strings are identical. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following creates a String named string?",
    "correct_options": ["String string;"]
  },
  {
    "question": "Given the code: String s = new String(\"abc\"); Which of the following statements will change the length of s to the largest length?",
    "correct_options": ["s.trim()"]
  },
  {
    "question": "The following defines a package keyword:",
    "correct_options": [
      "Defines where this class lives relative to other classes, and provides a level of access control."
    ]
  },
  {
    "question": "The following defines an import keyword:",
    "correct_options": [
      "Provides the compiler information that identifies outside classes used within the current class."
    ]
  },
  {
    "question": "Which of the two diagrams below illustrate the general form of a Java program?",
    "correct_options": ["Example A"]
  },
  {
    "question": "Which of the following defines a driver class?",
    "correct_options": ["Contains a main method and other static methods."]
  },
  {
    "question": "Which of the following statements declares a String object called name?",
    "correct_options": ["String name;"]
  },
  {
    "question": "The == operator can be used to compare two String objects. The result is always true if the two strings are have the exact same characters in each position of the String. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Consider the following code snippet. What is printed? String river = new String(\"Hudson\"); System.out.println(river.length());",
    "correct_options": ["6"]
  },
  {
    "question": "When importing another package into a class you must import the entire package as well as the package classes that will be called. True or False?",
    "correct_options": ["False"]
  },
  {
    "question": "A workspace is:",
    "correct_options": [
      "The location where all projects are developed and modified."
    ]
  },
  {
    "question": "In a Java IDE, when you run a Java Application, the results are displayed in a new window. True or False?",
    "correct_options": ["False"]
  },
  {
    "question": "A Java IDE provides an edit area to help you navigate a hierarchy of information. True or False?",
    "correct_options": ["False"]
  },
  {
    "question": "What does the following program output?",
    "correct_options": ["total cost: 40"]
  },
  {
    "question": "Which of the following declarations are correct?",
    "correct_options": ["float loan;"]
  },
  {
    "question": "Select the statement that declares a number of type double and initializes it to 6 times 10 to the 5th power.",
    "correct_options": ["double number=6*10e5;"]
  },
  {
    "question": "A local variable has precedence over a global variable in a Java method. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Where should the constructor for a superclass be called?",
    "correct_options": ["The first line of the constructor in the subclass."]
  },
  {
    "question": "Which of the following is the proper way to set the public variable length of the super class equal to 5 from inside the subclass?",
    "correct_options": ["super.length = 5"]
  },
  {
    "question": "Which of the following correctly describes an \"is-a\" relationship?",
    "correct_options": [
      "A helpful term used to conceptualize the relationships among nodes or leaves in an inheritance hierarchy."
    ]
  },
  {
    "question": "You can create static classes as independent classes. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "A variable is a named location inside the computer's memory; once there, the information can be retrieved and changed. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In Alice, there is no way of seeing the code as Java code. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following does not describe variables?",
    "correct_options": ["Has a type associated with it."]
  },
  {
    "question": "Expressions with relational operators produce true and false values. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Each parameter is listed with its name first, then its data type. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "If you want one message to display if a user is below the age of 18 and a different message to display if the user is 18 or older, what type of construct would you use?",
    "correct_options": ["if"]
  },
  {
    "question": "Identify an example of an Alice expression.",
    "correct_options": ["None of the above"]
  },
  {
    "question": "In Alice, which of the following programming statements moves the cat backward, half the distance to the bird?",
    "correct_options": [
      "this.Cat move backward {this.Bird getDistanceTo this.Cat / 2}"
    ]
  },
  {
    "question": "When you edit an object's properties in the Scene editor, the changes do not take effect until the Run button is clicked. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In Alice, where does an instance's axes intersect?",
    "correct_options": ["At the instance's center point."]
  },
  {
    "question": "Which of the following actions would require a control statement to control animation timing?",
    "correct_options": ["A rock object turning."]
  },
  {
    "question": "In Alice, which procedure is used to assign one object as the vehicle of another?",
    "correct_options": ["setObjectVehicle"]
  },
  {
    "question": "When something is broken or doesn't work as intended in a software program, it is referred to as a _________?",
    "correct_options": ["Bug"]
  },
  {
    "question": "In Alice, when using the getDistanceTo function what menu option would you use to subtract a set value from the distance?",
    "correct_options": ["Whole to decimal number"]
  },
  {
    "question": "In Alice, what function would you use to get a whole number from the user?",
    "correct_options": ["getIntegerFromUser"]
  },
  {
    "question": "An animation gives the scenario a purpose. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Procedural abstraction may need to be implemented if an object in Alice needs to perform an action, but there isn't an inherited procedure that accomplishes that action. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Before you can begin to develop the animation storyboard, what must be defined?",
    "correct_options": ["The scenario"]
  },
  {
    "question": "From your Alice lessons, which control statement executes instructions simultaneously?",
    "correct_options": ["Do together"]
  },
  {
    "question": "Which Alice execution task corresponds with the following storyboard statement? <br><br>Cat turns to face mouse.",
    "correct_options": ["this.cat turnToFace this.mouse"]
  },
  {
    "question": "After each execution of your Alice animation, what element or elements could be adjusted in your code?",
    "correct_options": ["All of the above"]
  },
  {
    "question": "In an Alice program, which code is executed when the Run button is clicked?",
    "correct_options": ["The one-shot procedures selected in the Scene editor."]
  },
  {
    "question": "The Alice move procedure contains which arguments?",
    "correct_options": ["Object"]
  },
  {
    "question": "In Alice, Do In Order and Do Together:",
    "correct_options": ["Are control statements"]
  },
  {
    "question": "In Alice, when two objects are synchronized and move together, this means that one object is:",
    "correct_options": ["An instance of another"]
  },
  {
    "question": "In Alice, there is a limit of 10 objects per scene. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "Which of the following would a clown fish object in Alice inherit from its class?",
    "correct_options": ["All of the above"]
  },
  {
    "question": "In Alice, declaring a new procedure to shorten code and make it easier to read is a procedural abstraction technique. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "A scenario gives the Alice animation a purpose. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "In Alice, control statements are dragged into the Code editor. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "A complete Alice instruction includes which of the following components?",
    "correct_options": ["Procedure"]
  },
  {
    "question": "The delay procedure in Alice halts an object's motion before the next motion begins. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "To access the Alice Code editor from the Scene editor, which button do you click?",
    "correct_options": ["Code Editor"]
  },
  {
    "question": "What is the first step to entering comments in an Alice program?",
    "correct_options": [
      "Type comments that describe the sequence of actions in the code segment."
    ]
  },
  {
    "question": "From your Alice lessons, built-in functions provide precise property details for the following areas:",
    "correct_options": ["Proximity, size, spatial relation, and point of view."]
  },
  {
    "question": "In Alice, which function is used to move an object directly to the center point of another object?",
    "correct_options": ["getObject"]
  },
  {
    "question": "How do you view the results of procedures entered in the Alice code editor?",
    "correct_options": ["Select the Run button."]
  },
  {
    "question": "From your Alice lessons, which programming instruction represents the following movement: A person moves forward the distance to the table, minus the depth of the person.",
    "correct_options": [
      "this.Person move Forward this.Person getDistanceTo this.Table - this.Person getDepth"
    ]
  },
  {
    "question": "In Alice, where you would you get access to the specific joints of an object that are not available through the object drop down menu?",
    "correct_options": ["code editor"]
  },
  {
    "question": "In Alice, which of the following arguments could be replaced with a random number?",
    "correct_options": ["Distance"]
  },
  {
    "question": "In Alice, the computer specifies the low and high range values for the range of numbers from which to pull a randomized number. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "In Alice, a computer program requires functions to tell it how to perform the procedure. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "The comments you enter in Alice should describe the sequence of actions that take place in the code segment. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Programming comments do not affect the functionality of your Alice animation. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following ways can you modify the code in the code editor window?",
    "correct_options": ["Copy & paste"]
  },
  {
    "question": "Saved Alice projects can be opened and edited. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In Alice, how is a one-shot procedure different from procedures in the Code editor?",
    "correct_options": [
      "A one-shot procedure executes only one time to re-position the object, while procedures in the Code editor execute every time the Run button is clicked."
    ]
  },
  {
    "question": "From your Alice lessons, a flowchart could be created in a software program, or documented in a journal. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Breaking down a problem or process into smaller parts makes it easier to manage. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In Alice, when a new procedure is declared, all subclasses of the superclass will inherit the procedure. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "Copying programming instructions saves time when programming your Alice project. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "From your Alice lessons, which programming instruction represents the following movement: A turtle moves forward half the distance to the flower.",
    "correct_options": [
      "this.Turtle move Forward this.Turtle getDistanceTo this.Flower / 2.0"
    ]
  },
  {
    "question": "In Alice, procedural abstraction is the concept of making code easier to understand and reuse. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In Alice, you examine code where a bird moves its wings forward and backward while moving forward simultaneously across the scene. You notice that this set of procedures are repeated in the Code editor ten times to achieve this motion. How could procedural abstraction be used to make the code simpler and easier to read?",
    "correct_options": [
      "Declare a separate \"fly\" procedure for the body moving forward and wings moving up and down."
    ]
  },
  {
    "question": "Which Alice tool is used to demonstrate the process flow of an animation?",
    "correct_options": ["Flowchart"]
  },
  {
    "question": "Which of the following is the default control statement in myFirstMethod?",
    "correct_options": ["Do In Order"]
  },
  {
    "question": "In Alice, the setVehicle procedure will associate one object to another. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In Alice, different programming is not required for different objects, because all objects move the same way. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "What do moving objects provide to your scene?",
    "correct_options": ["The action"]
  },
  {
    "question": "One type of object property is an object's position in the scene. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In Alice, you can use a function to get the current color of the object. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Functions answer questions about an object, such as its height, width, depth and even distance to another object. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In Alice, objects inherit the characteristics of their:",
    "correct_options": ["Class"]
  },
  {
    "question": "A textual storyboard helps the reader understand the actions that will take place during the animation. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In Alice, where are objects added and positioned in the scene?",
    "correct_options": ["The Scene editor"]
  },
  {
    "question": "What is the first step to programming an object to turn left in Alice?",
    "correct_options": ["Select the duration for the object to turn."]
  },
  {
    "question": "The say procedure in Alice plays an audio file. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which Alice execution task corresponds with the following storyboard statement? <br>Cat rolls to the left.",
    "correct_options": ["Cat roll Left 1"]
  },
  {
    "question": "In Alice, functions ask questions about an object. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In Alice, where can you view the list of functions available for an object?",
    "correct_options": ["Functions tab in the methods panel."]
  },
  {
    "question": "From your Alice lessons, which of the following are types of storyboards?",
    "correct_options": ["Textual"]
  },
  {
    "question": "From your Alice lessons, what is the purpose of nesting?",
    "correct_options": ["To add visual structure to your program."]
  },
  {
    "question": "From your Alice lessons, random numbers are numbers generated by the user with a pattern in their sequence. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "How do you create a programming instruction in Alice?",
    "correct_options": [
      "Click and drag the desired programming instruction into the Procedures tab."
    ]
  },
  {
    "question": "All objects in Alice have three dimensional coordinates on which axes?",
    "correct_options": ["All of the above"]
  },
  {
    "question": "From your Alice lessons, where on an object do an object's axes intersect?",
    "correct_options": ["At the object's center point"]
  },
  {
    "question": "The Procedures tab and the Functions tab are the two tabs available in the Alice methods panel. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In Alice, each class has a set of pre-defined procedures and functions. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which two statements are true about the break statement?",
    "correct_options": [
      "When a break statement is executed inside a loop, the loop-statement is terminated immediately and comes out of the program.",
      "The execution of the program will stop at the statement following the loop-statement."
    ]
  },
  {
    "question": "The purpose of adding comments is to increase the ability to understand the logic easily.",
    "correct_options": ["True"]
  },
  {
    "question": "What is the result?  \npublic static void main(String[] args) {   \n for (int var1 = 0; var1 < 2; var1++) {    \n  for (int var2 = 0; var2 < 2; var2++) {     \n   if (var2 == 2) {      \n    continue;     \n   }    \n  System.out.println(\"var1:\" + var1 + \", var2:\" + var2);    \n  }   \n } \n}",
    "correct_options": [
      "var1: 0, var2: 0 var1: 0, var2: 1 var1: 0, var2: 2 var1: 1, var2: 0 var1: 1, var2: 1 var1: 1, var2: 2 var1: 2, var2: 0 var1: 2, var2: 1 var1: 2, var2: 2"
    ]
  },
  {
    "question": "After the loop is terminated, the statement immediately following the loop body is executed.",
    "correct_options": ["True"]
  },
  {
    "question": "A while loop is often used with Scanner input as you don't know many times you'll need to re-prompt the user if they type bad data.",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the two are pre-test loops?",
    "correct_options": ["while"]
  },
  {
    "question": "Which statement is NOT true about do-while loops?",
    "correct_options": [
      "Statements in the loop are executed once until the condition becomes false."
    ]
  },
  {
    "question": "The while loop continually executes a block of statements while a particular condition is false.",
    "correct_options": ["True"]
  },
  {
    "question": "A pre-test loop evaluates the condition prior to execution of the loop.",
    "correct_options": ["True"]
  },
  {
    "question": "Which two are valid syntax to create a for loop?",
    "correct_options": [
      "for(int i = 10; i >= 0; i++ ) {      System.out.println(\"i=\"+i); }",
      "for(int i = 10, i >= 0, i++ ) {      System.out.println(\"i=\"+i); }"
    ]
  },
  {
    "question": "The for loop provides a complicated way to iterate over a range of values.",
    "correct_options": ["True"]
  },
  {
    "question": "Given: for(int i = 0; i > 10; i++){ } What type of variable is i?",
    "correct_options": ["Local"]
  },
  {
    "question": "What is the result? \npublic static void main(String[] args) {      for (;;) {       System.out.println(\"Welcome to Java\");     }  }",
    "correct_options": [
      "Program prints \"Welcome to Java\" an infinite number of times."
    ]
  },
  {
    "question": "You need to calculate the squares of numbers from 1 to 5. Which of the items should be present in your looping statement?",
    "correct_options": ["Initialization Expression , Update Expression"]
  },
  {
    "question": "Which is not a looping statement in Java?",
    "correct_options": ["switch"]
  },
  {
    "question": "The only way to exit a loop is for the loop condition to evaluate to false.",
    "correct_options": ["True"]
  },
  {
    "question": "A continue statement is used to skip the remaining statements in the body of a loop and continue with the next iteration of the loop.",
    "correct_options": ["True"]
  },
  {
    "question": "Which two statements are true about the while loop.",
    "correct_options": [
      "The statements of a while loop will execute one or more times.",
      "If the condition of a pre-test loop is false, the statements in the loop are never executed."
    ]
  },
  {
    "question": "In the given syntax of for loop, which part represents the header section?  \nfor (initialization; condition; update) {  \n  // Code statement(s) \n}",
    "correct_options": ["for (initialization; condition; update)"]
  },
  {
    "question": "Each expression in the header section of a for loop is optional.",
    "correct_options": ["False"]
  },
  {
    "question": "Looping continues as long as the boolean expression in the for loop is false.",
    "correct_options": ["True"]
  },
  {
    "question": "A do-while will always execute statements contained in the loop at least once.",
    "correct_options": ["True"]
  },
  {
    "question": "Which loop type is considered to be a post-test loop?",
    "correct_options": ["do-while"]
  },
  {
    "question": "Which statement is true?",
    "correct_options": [
      "The boolean expression that determines the number of loop iterations is within the parentheses of a while loop."
    ]
  },
  {
    "question": "You want to compute the sum of all the marks of a given subject. Which approach will you choose?",
    "correct_options": ["Looping"]
  },
  {
    "question": "What is the result? \npublic static void main(String[] args) { \n for (;;) { \n  System.out.println(\"Welcome to Java\"); \n } \n}",
    "correct_options": [
      "Program prints \"Welcome to Java\" an infinite number of times."
    ]
  },
  {
    "question": "When is an update expression in a for loop executed?",
    "correct_options": ["After each iteration through the loop."]
  },
  {
    "question": "A for loop is also called a definite loop",
    "correct_options": ["True"]
  },
  {
    "question": "Loops are used in programs for repeated execution of one or more statements until a terminating condition is reached.",
    "correct_options": ["True"]
  },
  {
    "question": "Which statement will produce the output: 2, 4, 6, 8, 10?",
    "correct_options": [
      "for (int i = 2; i <= 10; i += 2) { System.out.print(i + \" \"); }"
    ]
  },
  {
    "question": "The initialization expression initializes the loop and it is executed only once, as the loop begins.",
    "correct_options": ["True"]
  },
  {
    "question": "What is the output? \npublic static void main(String[] args) { \n  int num = 1; \n  while (num >= 200){ \n    System.out.print(num + \" \"); \n    num = num * 5; \n  }\n}",
    "correct_options": ["No output."]
  },
  {
    "question": "Which is used to terminate a loop?",
    "correct_options": ["break"]
  },
  {
    "question": "Which statement is false about an infinite loop?",
    "correct_options": [
      "The body of a while loop eventually must make the condition false to avoid an infinite loop."
    ]
  },
  {
    "question": "A pre-test loop evaluates the condition prior to the execution of the loop.",
    "correct_options": ["True"]
  },
  {
    "question": "A do-while loop will always execute statements contained in the loop at least once.",
    "correct_options": ["True"]
  },
  {
    "question": "A post-test loop evaluates its condition at the end of the loop instead of the beginning.",
    "correct_options": ["True"]
  },
  {
    "question": "During the Testing phase of software development, which of the following are the tasks undertaken by the programmer?",
    "correct_options": [
      "Finding the bugs.",
      "Fixing the bugs.",
      "Planning the order to implement features.",
      "Listing required features."
    ]
  },
  {
    "question": "What is the correct order of steps in the Spiral Model of Development?",
    "correct_options": [
      "Requirements, Design, Test, Develop",
      "Design, Requirements, Develop, Test"
    ]
  },
  {
    "question": "Which of the following are adequate definitions for components of the Spiral Model of Development?",
    "correct_options": [
      "Design: Plan the approach",
      "Develop: Collect all specified instructions",
      "Test: Run the code and verify results",
      "Requirements: Start the development"
    ]
  },
  {
    "question": "When the program runs normally (when not in debug mode), which statement is true about breakpoints?",
    "correct_options": [
      "Breakpoints will not have any effect on program execution."
    ]
  },
  {
    "question": "Which of the following 2 statements are true about whitespace?",
    "correct_options": [
      "Whitespace makes your code more readable.",
      "Whitespace helps to keep your code organized."
    ]
  },
  {
    "question": "You can set any number of breakpoints for your program.",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following language is called a procedural language?",
    "correct_options": ["C"]
  },
  {
    "question": "An object may interact with another object by invoking methods.",
    "correct_options": ["True"]
  },
  {
    "question": "In object-oriented programming, there is an emphasis on which of the following two:",
    "correct_options": [
      "Modeling objects.",
      "Object interaction without a prescribed order."
    ]
  },
  {
    "question": "Assuming x is an int, which of the following are ways to increment the value of x by 1?",
    "correct_options": ["x = x +1;", "x++;", "x += 1;"]
  },
  {
    "question": "What value is assigned to x? int x = 25 - 5 * 4 / 2 - 10 + 4;",
    "correct_options": ["7"]
  },
  {
    "question": "What is the output? public static void main(String args[]) {    int x = 100;   int y = x;   y++;   System.out.println(\"Value of x is \" + x);   System.out.println(\"Value of y is \" + y); }",
    "correct_options": ["Value of x is 100 Value of y is 101"]
  },
  {
    "question": "System.in readies Scanner to collect input from the console.",
    "correct_options": ["False"]
  },
  {
    "question": "These two code fragments perform the same task. // Fragment 1 String inputString = JOptionPane.showInputDialog(\"??\"); int input = Integer.parseInt(inputString); input++;  // Fragment 2 int input = Integer.parseInt(JOptionPane.showInputDialog(\"??\")) + 1;",
    "correct_options": ["True"]
  },
  {
    "question": "You write a statement that assigns a value to a String variable as shown below.String input = \"This is Java Program\";This way of assigning values to variables is known as hard-coding.",
    "correct_options": ["False"]
  },
  {
    "question": "Which two statements are true about String concatenation.",
    "correct_options": [
      "String concatenation can be done with String variables and String Literals.",
      "Strings can be combined using the '+' operator"
    ]
  },
  {
    "question": "In Java, char is a primitive data type, while String is an object data type.",
    "correct_options": ["True"]
  },
  {
    "question": "An Object cannot have String objects as properties.",
    "correct_options": ["False"]
  },
  {
    "question": "Which exception occurs because a String cannot be parsed as an int?",
    "correct_options": ["NumberFormatException"]
  },
  {
    "question": "Which two statements are true about type casting?",
    "correct_options": [
      "Type casting retains the size of the value or the original data type.",
      "Type casting changes the type of the value stored."
    ]
  },
  {
    "question": "The Java compiler automatically promotes byte, short, and chars data type values to int data type.",
    "correct_options": ["True"]
  },
  {
    "question": "What is the output?public class Hello {  public static void main(String args[]) {    String str = \"Hello\";    str = \"World\";   System.out.println(str);  }}",
    "correct_options": ["World"]
  },
  {
    "question": "Which is valid syntax to declare and initialize a String variable?",
    "correct_options": ["String x= \"Java\";"]
  },
  {
    "question": "Which of the following two statements are true about variables?",
    "correct_options": [
      "They make code more flexible.",
      "The value assigned to a variable may never change."
    ]
  },
  {
    "question": "Which is a risk of using fully qualified class names when importing?",
    "correct_options": ["Code readability is reduced."]
  },
  {
    "question": "Given the import statement: import java.awt.font.TextLayout; which is the package name?",
    "correct_options": ["java.awt.font"]
  },
  {
    "question": "Which of the following wild card character is used to import all the classes in a particular package?",
    "correct_options": ["*"]
  },
  {
    "question": "Which package is implicitly imported?",
    "correct_options": ["java.lang"]
  },
  {
    "question": "Object instantiation is done using what keyword?",
    "correct_options": ["new"]
  },
  {
    "question": "Which is a valid way of calling the testMethod in the TestClass? Assume a testInstance has been created. public void testMethod(int x, double y){    System.out.println(x/y); }",
    "correct_options": ["testInstance.testMethod(10, 3.5);"]
  },
  {
    "question": "Methods allow all instance of a class to share same behaviors.",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following are the arguments in the following method? Employee emp = new Employee(); emp.calculateSalary(100000, 3.2, 15);",
    "correct_options": ["100000, 3.2, 15"]
  },
  {
    "question": "Every method of the Math class returns a numerical result.",
    "correct_options": ["True"]
  },
  {
    "question": "What is the approximate value of PI?",
    "correct_options": ["The value varies."]
  },
  {
    "question": "Which method returns the length of a String?",
    "correct_options": ["length()"]
  },
  {
    "question": "A String is a sequence characters.",
    "correct_options": ["True"]
  },
  {
    "question": "What is the output of the following code? public static void main(String args[]) {    String firstString = \"Java\";    firstString = firstString.concat(\"World\");    System.out.println(firstString); }",
    "correct_options": ["JavaWorld"]
  },
  {
    "question": "The indexOf() method returns the index value of a character in the string.",
    "correct_options": ["False"]
  },
  {
    "question": "You need to generate random integer values between 0 and 80 (inclusive). Which statement should you use?",
    "correct_options": ["nextInt(81);"]
  },
  {
    "question": "Which values are returned by the method nextBoolean();",
    "correct_options": ["Either a true or false."]
  },
  {
    "question": "Which class is used to generate random numbers?",
    "correct_options": ["Random"]
  },
  {
    "question": "What is the output? public static void main(String[] args) {    String name = \"Java\";    String language = \"Programming\";    String fullName = name + language;    boolean test = fullName.equals(name + language);    System.out.println(test);  }",
    "correct_options": ["True"]
  },
  {
    "question": "What is the output? public static void main(String[] args) {    int age = 43;    if (age == 43){      System.out.print(\"Bob is 43 \");    }    if (age == 50){      System.out.print(\"Bob is 50 \");     } }",
    "correct_options": ["Bob is 43"]
  },
  {
    "question": "The equal sign (=) is used to make an assignment, whereas the == sign merely makes a comparison and returns a boolean.",
    "correct_options": ["True"]
  },
  {
    "question": "An if/else statement is used when you need to choose between two alternatives.",
    "correct_options": ["True"]
  },
  {
    "question": "What is the output?  public static void main(String args[]) {    char grade ='E';    if (grade == 'A') {       System.out.println(\"Excellent performer\");    }else if (grade == 'B') {       System.out.println(\"Good Performer\");    }else if (grade == 'C') {    System.out.println(\"Average Performer\");    }else {       System.out.println(\"Below Average Performer\");    } }",
    "correct_options": ["Below Average Performer"]
  },
  {
    "question": "The switch statement is a more efficient way to write code when dealing with a large range of unknown values.",
    "correct_options": ["False"]
  },
  {
    "question": "In the OR (||) test, if the first expression on the left hand side is true then there is no need to evaluate the second statement.",
    "correct_options": ["True"]
  },
  {
    "question": "An employee is eligible for a bonus based on certain criteria.Under what conditions does \"Eligible for a bonus\" print?int rating;int experience;if (rating > 1 && experience == 5) {   System.out.println (\"Eligible for a bonus\");}",
    "correct_options": ["5 experience and 1 rating"]
  },
  {
    "question": "Which two are not logical operators?",
    "correct_options": ["%", "+"]
  },
  {
    "question": "The Spiral Model reflects an iterative development process.",
    "correct_options": ["True"]
  },
  {
    "question": "You'd like to see a movie with a few friends. You write an email to confirm plans. Hi Friends, There's a new movie \"Attack of the Duke!\" premiering this Friday at Oracle Cinema at 4:30 PM. The cinema is at the corner of South Street and Walnut Ave. Subway would be the best way to get there. Would any of you be interested in going? Which of the following are requirements for this plan?",
    "correct_options": [
      "Travel via subway.",
      "Watch \"Attack of the Duke!\" on Friday at Oracle Cinema at 4:30 PM.",
      "Double check the location by verifying you're on South Street and Walnut Ave."
    ]
  },
  {
    "question": "During the Design phase of software development, the programmer implements features gathered during the Requirement phase.",
    "correct_options": ["False"]
  },
  {
    "question": "Which of the following three statements are true about breakpoints?",
    "correct_options": [
      "They help with debugging.",
      "They can be used to check the current state of the program",
      "They pause code execution."
    ]
  },
  {
    "question": "In object-oriented programming, an object comprises of properties and behaviors where properties represented as fields of the object and behavior is represented as method.",
    "correct_options": ["True"]
  },
  {
    "question": "Which two are mathematical operators?",
    "correct_options": ["+", "-"]
  },
  { "question": "How many bits are in a byte?", "correct_options": ["8"] },
  {
    "question": "Which data type is most commonly used to represent numeric data?",
    "correct_options": ["int"]
  },
  {
    "question": "char is the primitive textual data type in Java.",
    "correct_options": ["True"]
  },
  {
    "question": "Which two statements are true about the Scanner class?",
    "correct_options": [
      "A Scanner object opens a stream for collecting input.",
      "A Scanner's delimiter can be changed."
    ]
  },
  {
    "question": "It's best-practice to close the Scanner stream when finished",
    "correct_options": ["True"]
  },
  {
    "question": "Identify the names of two variables used in the given code. public class Variables {   public static void main(String args[]) {    String strVal = \"Hello\";   int intVal = 0;    System.out.println(\"Integer: \" +intVal)  } }",
    "correct_options": ["strVal", "intVal"]
  },
  {
    "question": "Which two statements will not compile?",
    "correct_options": ["int break=10;", "double double=10;"]
  },
  {
    "question": "Which two are valid?",
    "correct_options": [
      "double doubleVar1 = 3.1; double doubleVar2 = 3.1;",
      "double doubleVar1, doubleVar2 = 3.1;"
    ]
  },
  {
    "question": "What is parsing?",
    "correct_options": ["Converting text to numeric data"]
  },
  {
    "question": "Which two statements are correct about the usage of an underscore?",
    "correct_options": [
      "Underscores help make large numbers more readable.",
      "Underscores change the value of the number."
    ]
  },
  {
    "question": "When the result of an expression is assigned to a temporary memory location, what is the size of memory allocated?",
    "correct_options": [
      "The size of the smallest data type used in the expression."
    ]
  },
  {
    "question": "You need to generate random integer values in the range 2 through 10. This code fragment will produce the desired result. Random r = new Random(); r.nextInt(9) + 2;",
    "correct_options": ["True"]
  },
  {
    "question": "Using the Random class requires an import statement.",
    "correct_options": ["True"]
  },
  {
    "question": "What is the package name which contains Math class?",
    "correct_options": ["java.lang"]
  },
  {
    "question": "A constant field, like Math.PI is used to represent a fixed value.",
    "correct_options": ["True"]
  },
  {
    "question": "In Java, methods usually hold the properties of an object.",
    "correct_options": ["False"]
  },
  {
    "question": "What is the output? public static void main(String args[]) {    String alphaNumeric = \"Java World!\" + 8;    System.out.println(alphaNumeric); }",
    "correct_options": ["Java World!8"]
  },
  {
    "question": "The String class must be imported using java.lang.String;",
    "correct_options": ["False"]
  },
  {
    "question": "Import statements are placed above the class definition.",
    "correct_options": ["True"]
  },
  {
    "question": "The JFrame and JOptionPane classes are in the javax.swing package. Which two will import those classes?",
    "correct_options": [
      "import javax.swing.*;",
      "import javax.swing.JOptionPane; import javax.swing.JFrame;"
    ]
  },
  {
    "question": "In the AND (&&) test, if the first expression on the left hand side is false, then there is no need to evaluate the second statement.",
    "correct_options": ["True"]
  },
  {
    "question": "A customer is eligible for a discount based on certain criteria. Under what conditions does \"You qualify for a discount\" print? (Hint: There may be more than one correct answer)int purchase;int rewardPoints;if (purchase >= 2000 || rewardPoints >= 4000) {   System.out.println(\"You qualify for discount\");}",
    "correct_options": ["When purchase is 4000 and rewardPoints is 2000"]
  },
  {
    "question": "What are the possible values of a boolean data type in Java?",
    "correct_options": ["true/false"]
  },
  {
    "question": "Which are used in a boolean expression?",
    "correct_options": ["Operators", "Variables"]
  },
  {
    "question": "What is the output? char grade = 'A'; switch (grade) {    case 'A':       System.out.println(\"Congratulations!\");    case 'B':       System.out.println(\"Good work\");    case 'C':       System.out.println(\"Average\");    case 'D':       System.out.println(\"Barely passing\");    case 'F':       System.out.println(\"Failed\"); }",
    "correct_options": [
      "Congratulations!",
      "Good work",
      "Average",
      "Barely passing",
      "Failed"
    ]
  },
  {
    "question": "A breakpoint can be set by clicking a number in the left margin of the IDE. Clicking again removes the breakpoint.",
    "correct_options": ["True"]
  },
  {
    "question": "What is the purpose of adding comments in the code?",
    "correct_options": [
      "Provide an explanation about the code to the programmer."
    ]
  },
  {
    "question": "A software feature may allow the user to perform a specific task.",
    "correct_options": ["True"]
  },
  {
    "question": "If the requirement step of the Spiral Model of development is forgotten, which of the following could occur?",
    "correct_options": [
      "Required software features are missing from the program."
    ]
  },
  {
    "question": "You design a Circle class with various fields and methods. Which of the following could be fields in this class? Distinguish which of these are between the properties and behavior.",
    "correct_options": ["color", "radius"]
  },
  {
    "question": "You have a beautiful garden at home. On Sunday, you start budding your rose plant to make few more samples of rose plants to plant in the garden. Can you categorize how this scenario could be represented by classes and instances?",
    "correct_options": [
      "Rose plant is the class and the samples generated from the rose plant are instances of that class."
    ]
  },
  {
    "question": "What is the range of the byte data type?",
    "correct_options": ["-27 to 27-1"]
  },
  {
    "question": "Which two data types are appropriate for their variable?",
    "correct_options": [
      "double checkingAmount = 1500;",
      "String firstName = \"Alex\";"
    ]
  },
  {
    "question": "What is the output?\n```java\npublic class Welcome {\n  public static void main(String args[]) {\n    System.out.println(\"This is my first program\");\n    int a = 2;\n    System.out.println(\"a is \" + a);\n  }\n}\n```",
    "correct_options": ["This is my first program", "a is 2"]
  },
  {
    "question": "What is the correct way to cast a long to an int?",
    "correct_options": ["int longToInt = (int)20L;"]
  },
  {
    "question": "The Scanner class accepts input in which form?",
    "correct_options": ["Tokens"]
  },
  {
    "question": "A character preceded by backslash is called an escape sequence.",
    "correct_options": ["True"]
  },
  {
    "question": "Char data types cannot handle multiple characters.",
    "correct_options": ["False"]
  },
  {
    "question": "A String can be created by combining multiple String Literals.",
    "correct_options": ["True"]
  },
  {
    "question": "An argument is a value that's passed during a method call",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following two operations are appropriate for the main method?",
    "correct_options": [
      "Calling local variables declared within a class's method",
      "Assigning memory to the variables"
    ]
  },
  {
    "question": "Which is a valid way of calling the testMethod in the TestClass? Assume a testInstance has been created. public void testMethod(int x, double y){ System.out.println(x/y); }",
    "correct_options": ["testInstance.testMethod(10, 3.5);"]
  },
  {
    "question": "Which of the following statements are true?",
    "correct_options": [
      "Methods can be written with any number of parameters.",
      "Parameter values can be used within the method code block."
    ]
  },
  {
    "question": "The classes of the Java class library are organized into packages.",
    "correct_options": ["True"]
  },
  {
    "question": "Which statement is true about packages?",
    "correct_options": ["A package contains a group of related classes."]
  },
  {
    "question": "The import statement consists of two parts. import package.className; One is the package name and the other is the classname.",
    "correct_options": ["False"]
  },
  {
    "question": "Which two are valid import statements of the Scanner class?",
    "correct_options": ["import java.util.*;", "import java.util.Scanner;"]
  },
  {
    "question": "What is the output?\n```java\npublic static void main(String args[]) {\n  String greeting = \"Java World!\";\n  String w = greeting.substring(7, 11);\n  System.out.println(w);\n}\n```",
    "correct_options": ["orld!"]
  },
  {
    "question": "The String concat() method concatenates only String data types.",
    "correct_options": ["False"]
  },
  { "question": "String objects are immutable.", "correct_options": ["True"] },
  {
    "question": "Which two of the following data types can be used in a switch statement?",
    "correct_options": ["String", "int"]
  },
  {
    "question": "What is the output?\n```java\npublic static void main(String args[]) {\n  char grade ='E';\n  if (grade == 'A') {\n    System.out.println(\"Excellent performer\");\n  } else if (grade == 'B') {\n    System.out.println(\"Good Performer\");\n  } else if (grade == 'C') {\n    System.out.println(\"Average Performer\");\n  } else {\n    System.out.println(\"Below Average Performer\");\n  }\n}\n```",
    "correct_options": ["Below Average Performer"]
  },
  {
    "question": "What is the output?\n```java\npublic static void main(String[] args) {\n  int age = 43;\n  if (age == 43){\n    System.out.print(\"Bob is 43 \");\n  }\n  if (age == 50){\n    System.out.print(\"Bob is 50 \");\n  }\n}\n```",
    "correct_options": ["Bob is 43 "]
  },
  {
    "question": "Which operator is used to test if both sides of a boolean expression are equal?",
    "correct_options": ["=="]
  },
  {
    "question": "How should Strings be compared?",
    "correct_options": ["The equals() method"]
  },
  {
    "question": "In a boolean expression which uses the && operator, what would make this expression evaluate to true? boolean x = (firstCondition && secondCondition);",
    "correct_options": [
      "If both the first condition and second condition are true"
    ]
  },
  {
    "question": "Which of the following three statements are true about breakpoint?",
    "correct_options": [
      "They can be used to check the current state of the program",
      "They pause code execution.",
      "They help with debugging."
    ]
  },
  {
    "question": "Code within curly braces is called a \"Block of code\".",
    "correct_options": ["True"]
  },
  {
    "question": "Which keyword makes a variable's value unchangeable?",
    "correct_options": ["final"]
  },
  {
    "question": "What is the output?\n```java\npublic class Person {\n   public static void main(String args[]) {\n      int age = 20;\n      System.out.println(\"Value of age: \" + age);\n      age = 5 + 3;\n      System.out.println(\"Value of age: \" + age);\n      age = age + 1;\n      age++;\n      System.out.println(\"Value of age: \" + age);\n   }\n}\n```\n",
    "correct_options": ["Value of age: 20 Value of age: 8 Value of age: 10"]
  },
  {
    "question": "What value is assigned to x?\n```java\nint x = 25 - 5 * 4 / 2 - 10 + 4;\n```",
    "correct_options": ["7"]
  },
  {
    "question": "You write a statement that assigns a value to a String variable as shown below.\n```java\nString input = \"This is Java Program\";\n```\nThis way of assigning values to variables is known as hard-coding.",
    "correct_options": ["True"]
  },
  {
    "question": "These two code fragments perform the same task.\n```java\n// Fragment 1\nString inputString = JOptionPane.showInputDialog(\"??\");\nint input = Integer.parseInt(inputString);\ninput++; \n// Fragment 2\nint input = Integer.parseInt(JOptionPane.showInputDialog(\"??\")) + 1;\n```",
    "correct_options": ["True"]
  },
  {
    "question": "The print() method prints to the console and automatically creates a line.",
    "correct_options": ["False"]
  },
  {
    "question": "Which two statements compile?",
    "correct_options": ["char size = 'm';", "String size = \"M\";"]
  },
  {
    "question": "Assigning a value to the variable is called \"initialization\".",
    "correct_options": ["True"]
  },
  {
    "question": "Which two are valid assignments of a?",
    "correct_options": ["int a = 10;", "int a; a = 10;"]
  },
  {
    "question": "All the methods in the Math class are static methods.",
    "correct_options": ["True"]
  },
  {
    "question": "What is the output of the following code?\n```java\npublic static void main(String args[]) {\n   String firstString = \"Java\";\n   firstString = firstString.concat(\"World\");\n   System.out.println(firstString);\n}\n```",
    "correct_options": ["JavaWorld"]
  },
  {
    "question": "Which of the following are the arguments in the following method?\n```java\nEmployee emp = new Employee();\nemp.calculateSalary(100000, 3.2, 15);\n```",
    "correct_options": [
      "calculateSalary(100000, 3.2, 15);",
      "emp.calculateSalary(100000, 3.2, 15);"
    ]
  },
  {
    "question": "void type methods don't return any values",
    "correct_options": ["True"]
  },
  {
    "question": "You need to generate random integer values in the range 2 through 10. This code fragment will produce the desired result.\n```java\nRandom r = new Random();\nr.nextInt(9) + 2;\n```",
    "correct_options": ["True"]
  },
  {
    "question": "What is the output?\n```java\npublic static void main(String args[]) {\n   char grade ='E';\n   if (grade == 'A') {\n      System.out.println(\"Excellent performer\");\n   }else if (grade == 'B') {\n      System.out.println(\"Good Performer\");\n   }else if (grade == 'C') {\n   System.out.println(\"Average Performer\");\n   }else {\n      System.out.println(\"Below Average Performer\");\n   }\n}\n```",
    "correct_options": ["Below Average Performer"]
  },
  {
    "question": "Which three are conditional statements?",
    "correct_options": ["if/else statement", "switch statement", "if statement"]
  },
  {
    "question": "In Java, an if statement can be nested inside another if statement.",
    "correct_options": ["True"]
  },
  {
    "question": "In object-oriented programming, an object comprises of properties and behaviors where properties represented as fields of the object and behavior is represented as a method.",
    "correct_options": ["True"]
  },
  {
    "question": "There are several fields and methods in a Shirt class. Which of the following could be a method in the Shirt class?",
    "correct_options": ["getShirtSize()"]
  },
  {
    "question": "Which of the following three statements are true about a breakpoint?",
    "correct_options": [
      "They can be used to check the current state of the program",
      "They pause code execution.",
      "They help with debugging."
    ]
  },
  {
    "question": "A Java program can be written in a single line.",
    "correct_options": ["False"]
  },
  {
    "question": "Double quotes may be used with char literal values.",
    "correct_options": ["False"]
  },
  {
    "question": "A character preceded by a backslash is called an escape sequence.",
    "correct_options": ["True"]
  },
  {
    "question": "The Scanner class considers space as the default delimiter while reading the input.",
    "correct_options": ["False"]
  },
  {
    "question": "What is the output?public class Welcome {  public static void main(String args[]) {   System.out.println(\"This is my first program\");   int a = 2;   System.out.println(\"a is \" + a);  }}",
    "correct_options": ["This is my first program", "a is 2"]
  },
  {
    "question": "Identify the variable declared in the given code. public class Welcome {   public static void main(String args[]) {    int a = 2;    System.out.println(\"a is \" + a);   } }",
    "correct_options": ["a"]
  },
  {
    "question": "What is the output? public static void main(String args[]) {    String greeting = \"Java World!\";    String w = greeting.substring(7, 11);    System.out.println(w); }",
    "correct_options": ["World"]
  },
  {
    "question": "What is the output? public static void main(String args[]) {     String greeting = \"Java World!\";    String w = greeting.replace(\"a\", \"A\");    System.out.println(w); }",
    "correct_options": ["JAvA World!"]
  },
  {
    "question": "Which is NOT true?",
    "correct_options": ["Static methods must be of return void."]
  },
  {
    "question": "The Math class methods can be called without creating an instance of a Math object.",
    "correct_options": ["True"]
  },
  {
    "question": "A break statement causes control to transfer to the end of the switch statement.",
    "correct_options": ["True"]
  },
  {
    "question": "What is the output? public static void main(String args[]) { char ch ='c'; switch(ch) { case 'a': case 'e': case 'i': case 'o': case 'u': System.out.println(\"Vowels\"); break; default: System.out.println(\"Consonants\"); } }",
    "correct_options": ["Consonants"]
  },
  {
    "question": "A String comparison with == compares the Strings' locations in memory and not the content of the String.",
    "correct_options": ["True"]
  },
  {
    "question": "What is the output? public static void main(String[] args) { int age = 43; if (age == 43){ System.out.print(\"Bob is 43 \"); } if (age == 50){ System.out.print(\"Bob is 50 \"); } }",
    "correct_options": ["Bob is 43"]
  },
  {
    "question": "What is the output? public static void main(String[] args) { String name = \"Java\"; String language = \"Programming\"; String fullName = name + language; boolean test = fullName.equals(name + language); System.out.println(test); }",
    "correct_options": ["True"]
  },
  {
    "question": "A customer is eligible for a discount based on certain criteria. Under what conditions does \"You qualify for a discount\" print? (Hint: There may be more than one correct answer)int purchase;int rewardPoints;if (purchase >= 2000 || rewardPoints >= 4000) { System.out.println(\"You qualify for discount\");}",
    "correct_options": [
      "When purchase is 4000 and rewardPoints is 2000",
      "When purchase is 2000 regardless of the value of rewardPoints"
    ]
  },
  {
    "question": "What is the result? public static void main(String[] args) { int point = 10; String s = (point == 1 ? \"point\" : \"points\"); System.out.println(\"I scored \" +point +\" \" +s ); }",
    "correct_options": ["I scored 10 points"]
  },
  {
    "question": "Which two statements are true about the default statement?",
    "correct_options": [
      "When the input does not match any of the cases, the default statement is executed.",
      "A default statement is executed by default when the program is executed."
    ]
  },
  {
    "question": "What is the output? public static void main(String args[]) { char grade ='E'; if (grade == 'A') { System.out.println(\"Excellent performer\"); }else if (grade == 'B') { System.out.println(\"Good Performer\"); }else if (grade == 'C') { System.out.println(\"Average Performer\"); }else { System.out.println(\"Below Average Performer\"); } }",
    "correct_options": ["Below Average Performer"]
  },
  {
    "question": "What is the output? char grade = 'A'; switch (grade) { case 'A': System.out.println(\"Congratulations!\"); case 'B': System.out.println(\"Good work\"); case 'C': System.out.println(\"Average\"); case 'D': System.out.println(\"Barely passing\"); case 'F': System.out.println(\"Failed\"); }",
    "correct_options": [
      "Congratulations! Good Work Average Barely Passing Failed"
    ]
  },
  {
    "question": "The replaceFirst() method replaces only the first occurrence of matching character pattern in a string.",
    "correct_options": ["True"]
  },
  {
    "question": "What is the output? public static void main(String args[]) { String alphaNumeric = \"Java World!\" + 8; System.out.println(alphaNumeric); }",
    "correct_options": ["Java World!8"]
  },
  {
    "question": "What is the output? public static void main(String args[]) { String greeting = \"Java World!\"; String w = greeting.substring(7, 11); System.out.println(w); }",
    "correct_options": ["rld!"]
  },
  {
    "question": "What is the output? public static void main(String args[]) { String greeting = \"Java World!\"; String w = greeting.replace(\"a\", \"A\"); System.out.println(w); }",
    "correct_options": ["JAva World!"]
  },
  {
    "question": "What is the output of the following code? public static void main(String args[]) { String firstString = \"Java\"; firstString = firstString.concat(\"World\"); System.out.println(firstString); }",
    "correct_options": ["JavaWorld"]
  },
  {
    "question": "Which two are the features of the Math class?",
    "correct_options": [
      "Common math functions like square root are taken care of in the language.",
      "The Math methods can be invoked without creating an instance of a Math object."
    ]
  },
  {
    "question": "A String is a sequence of characters.",
    "correct_options": ["True"]
  },
  {
    "question": "How many arguments does the following method accept?public void simpleInterest(double principal, int noofYears, double interestRate){ System.out.println(\"The interest rate is \" +interestRate );}",
    "correct_options": ["3"]
  },
  {
    "question": "Methods allow all instances of a class to share the same behaviors.",
    "correct_options": ["True"]
  },
  {
    "question": "You're designing banking software and need to store 10000 customer accounts with information on the accountholder's name, balance, and interest rate. The best approach is to store 30000 separate variables in the main method.",
    "correct_options": ["False"]
  },
  {
    "question": "Which of the following wild card characters is used to import all the classes in a particular package?",
    "correct_options": ["*"]
  },
  {
    "question": "Once an object is instantiated, how might its fields and methods be accessed in Java?",
    "correct_options": ["Using the dot(.) operator"]
  },
  {
    "question": "Which of the following scenarios would be ideal for writing a method?",
    "correct_options": ["To group similar data types together"]
  },
  {
    "question": "You're designing banking software and need to store 10000 customer accounts with information on the accountholder's name, balance, and interest rate. The best approach is store 30000 separate variables in the main method.",
    "correct_options": ["False"]
  },
  {
    "question": "Given the expression:String message = \"Hello World\";Which is the String Literal?",
    "correct_options": ["Hello World"]
  },
  {
    "question": "What is the output? public static void main(String args[]) {   String greet1 = \"Hello\";   String greet2 = \"World\";   String message2 = greet1 +\" \" +greet2 +\" \" +2016 +\"!\";   System.out.println(message2); }",
    "correct_options": ["Hello World 2016 !"]
  },
  {
    "question": "A double with the value of 20.5 is cast to an int. What is the value of the int?",
    "correct_options": ["20"]
  },
  {
    "question": "Which is a valid way to parse a String as an int?",
    "correct_options": ["int intVar1 = Integer.parseInt(\"100\");"]
  },
  {
    "question": "Which is the correct declaration for a char data type?",
    "correct_options": ["char size = 'M';"]
  },
  {
    "question": "A short data type can be promoted to which of the following types?",
    "correct_options": ["int"]
  },
  {
    "question": "Automatic promotion from smaller data type to a larger data type is not allowed in Java.",
    "correct_options": ["False"]
  },
  {
    "question": "Which of the following data types is the largest?",
    "correct_options": ["long"]
  },
  {
    "question": "What is the output?\n\n```java\npublic class Person {\n   public static void main(String args[]) {\n      int age = 20;\n      System.out.println(\"Value of age: \" + age);\n      age = 5 + 3;\n      System.out.println(\"Value of age: \" + age);\n      age = age + 1;\n      age++;\n      System.out.println(\"Value of age: \" + age);\n   }\n}\n```",
    "correct_options": ["Value of age: 20 Value of age: 8 Value of age: 9"]
  },
  {
    "question": "This declaration represents a long data type. long a = 123L;",
    "correct_options": ["True"]
  },
  {
    "question": "Identify the variable declared in the given code.\n\n```java\npublic class Welcome {\n   public static void main(String args[]) {\n      int a = 2;\n      System.out.println(\"a is \" + a);\n   }\n}\n```",
    "correct_options": ["a"]
  },
  {
    "question": "What is the output?\n\n```java\npublic class Hello {\n  public static void main(String args[]) {\n    String str = \"Hello\";\n    str = \"World\";\n    System.out.println(str);\n  }\n}\n```",
    "correct_options": ["World"]
  },
  {
    "question": "Identify the names of two variables used in the given code.\n\n```java\npublic class Variables {\n   public static main(String args[]) {\n      String strVal = \"Hello\";\n      int intVal = 0;\n      System.out.println(\"Integer: \" + intVal)\n   }\n}\n```",
    "correct_options": ["strVal", "intVal"]
  },
  {
    "question": "Java is a strongly typed language; therefore you must declare a data type for all variables.",
    "correct_options": ["True"]
  },
  {
    "question": "Which two are recommended practices for naming final variables?",
    "correct_options": [
      "Capitalize first letter",
      "Separate words with an underscore"
    ]
  },
  {
    "question": "What is the output?\n\n```java\npublic class Person {\n   public static main(String args[]) {\n      int age = 20;\n      System.out.println(\"Value of age: \" + age);\n      age = 5 + 3;\n      System.out.println(\"Value of age: \" + age);\n      age = age + 1;\n      age++;\n      System.out.println(\"Value of age: \" + age);\n   }\n}\n```",
    "correct_options": ["Value of age: 20 Value of age: 8 Value of age: 9"]
  },
  {
    "question": "Identify the variable declared in the given code.\n\n```java\npublic class Welcome {\n   public static main(String args[]) {\n      int a = 2;\n      System.out.println(\"a is \" + a);\n   }\n}\n```",
    "correct_options": ["a"]
  },
  {
    "question": "What is the output?\n\n```java\npublic static void main(String args[]) {\n   int x = 100;\n   int y = x;\n   y++;\n   System.out.println(\"Value of x is \" + x);\n   System.out.println(\"Value of y is \" + y);\n}\n```",
    "correct_options": ["Value of x is 100 Value of y is 101"]
  },
  {
    "question": "What value is assigned to x?\n\n```java\nint x = 25 - 5 * 4 / 2 - 10 + 4;\n```",
    "correct_options": ["8"]
  },
  {
    "question": "This declaration represents a long data type. `long a = 123L;`",
    "correct_options": ["True"]
  },
  {
    "question": "What is the output?\n\n```java\npublic class Welcome {\n   public static void main(String args[]) {\n      System.out.println(\"This is my first program\");\n      int a = 2;\n      System.out.println(\"a is \" + a);\n   }\n}\n```",
    "correct_options": ["This is my first program", "a is 2"]
  },
  {
    "question": "What is the output?\n\n```java\npublic class Hello {\n   public static void main(String args[]) {\n      String str = \"Hello\";\n      str = \"World\";\n      System.out.println(str);\n   }\n}\n```",
    "correct_options": ["World"]
  },
  {
    "question": "What is the output?\n\n```java\npublic class Person {\n   public static void main(String args[]) {\n      int age = 20;\n      System.out.println(\"Value of age: \" +age);\n      age = 5 + 3;\n      System.out.println(\"Value of age: \" +age);\n      age = age + 1;\n      age++;\n      System.out.println(\"Value of age: \" +age);\n   }\n}\n```",
    "correct_options": ["Value of age: 20 Value of age: 8 Value of age: 10"]
  },
  {
    "question": "Java is a strongly typed language; therefore, you must declare a data type for all variables.",
    "correct_options": ["True"]
  },
  {
    "question": "Identify the names of two variables used in the given code.\n\n```java\npublic class Variables {\n   public static void main(String args[]) {\n      String strVal = \"Hello\";\n      int intVal = 0;\n      System.out.println(\"Integer: \" + intVal)\n   }\n}\n```",
    "correct_options": ["strVal", "intVal"]
  },
  {
    "question": "Which two are the correct syntax for adding comments?",
    "correct_options": [
      "Start with a slash-star (/*). End with a star-slash (*/).",
      "Start with two slashes (//). End when the line ends."
    ]
  },
  {
    "question": "Java mostly reads code line-by-line.",
    "correct_options": ["True"]
  },
  {
    "question": "A Java program can be written in the single line.",
    "correct_options": ["False"]
  },
  {
    "question": "In the code example below, identify any methods: public class Employee { public String name = \" Duke\"; public int empId = 12105; public float salary; public void displaySalary(){ System.out.println(\"Employee Salary: \"+salary); } }",
    "correct_options": ["displaySalary()"]
  },
  {
    "question": "In object-oriented programming, an object comprises properties and behaviors where properties are represented as fields of the object and behavior is represented as a method.",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following three statements is true about breakpoints?",
    "correct_options": [
      "They help with debugging.",
      "They can be used to check the current state of the program",
      "They pause code execution."
    ]
  },
  {
    "question": "Which of the following languages is called a procedural language?",
    "correct_options": ["C"]
  },
  {
    "question": "You have a beautiful garden at home. On Sunday, you start budding your rose plant to make a few more samples of rose plants to plant in the garden. Can you categorize how this scenario could be represented by classes and instances?",
    "correct_options": [
      "Rose plant is the class, and the samples generated from the rose plant are instances of that class."
    ]
  },
  {
    "question": "You design a Circle class with various fields and methods. Which of the following could be fields in this class? Distinguish which of these are between properties and behavior.",
    "correct_options": [
      "calculateDiameter()",
      "calculateCircumference()",
      "radius",
      "color",
      "calculateArea()"
    ]
  },
  {
    "question": "Which of the following are considered Whitespace?",
    "correct_options": [
      "Space between the [ ] braces.",
      "Blank lines in the code.",
      "Space in the print statements.",
      "Indentation before the code.",
      "Space between words."
    ]
  },
  {
    "question": "Which of the following 2 statements is true about whitespace?",
    "correct_options": [
      "Whitespace helps to keep your code organized.",
      "Whitespace makes your code more readable."
    ]
  },
  {
    "question": "In the code example below, identify any methods: public class Employee { public String name = \"Duke\"; public int empId = 12105; public float salary; public void displaySalary(){ System.out.println(\"Employee Salary: \"+salary); } }",
    "correct_options": ["displaySalary()"]
  },
  {
    "question": "In the code example below, identify any methods: public class Employee { public String name = \" Duke\"; public int empId = 12105; public float salary; public void displaySalary(){ System.out.println(\"Employee Salary: \"+salary); }  }",
    "correct_options": ["name", "salary", "displaySalary()"]
  },
  {
    "question": "In object oriented programming, an object comprises of properties and behaviors where properties represented as fields of the object and behavior is represented as method.",
    "correct_options": ["True"]
  },
  {
    "question": "In object oriented programming, there is an emphasis on which of the following two:",
    "correct_options": [
      "Object interaction without a prescribed order.",
      "Modeling objects."
    ]
  },
  {
    "question": "What is the output of the following lines of code? int j=6,k=4,m=12,result; result=j/m*k; System.out.println(result);",
    "correct_options": ["24"]
  },
  {
    "question": "What is the result when the following code segment is compiled and executed? int x = 22, y = 10; double p = Math.sqrt( ( x + y ) /2); System.out.println(p);",
    "correct_options": ["5.656854249492381 is displayed"]
  },
  {
    "question": "Write a declaration statement that will hold a number like 2.541.",
    "correct_options": ["float number;"]
  },
  {
    "question": "You need to _______________ Java code to generate a .class file",
    "correct_options": ["Compile"]
  },
  {
    "question": "The ______________ is the location into which you will store and save your files.",
    "correct_options": ["Workspace"]
  },
  {
    "question": "In a Java IDE, when you run a Java Application, the results may be displayed in the Console View. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "Multiple windows are used when more than one file is open in the edit area. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "What symbols are required for a compiler to ignore a comment?",
    "correct_options": ["//", "/*"]
  },
  {
    "question": "Consider the following code snippet.\n\n \n\n What is printed?",
    "correct_options": ["Cayrbniz"]
  },
  {
    "question": "Consider the following code snippet  String forest = new String(\"Black\");  System.out.println(forest.length());  What is printed?",
    "correct_options": ["5"]
  },
  {
    "question": "The following program prints \"Not Equal\". True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Given the code below, which of the following would equate to true?  String s1 = \"yes\"; String s2 = \"yes\"; String s3 = new String(s1);",
    "correct_options": ["s1 == s2", "s1.equals(s2)"]
  },
  {
    "question": "Which of the following creates a String reference named s and instantiates it?",
    "correct_options": [
      "String s=\"\";",
      "s=\"s\";",
      "String s=new String(\"s\");",
      "String s;"
    ]
  },
  {
    "question": "The following defines a class keyword:",
    "correct_options": [
      "Defines where this class lives relative to other classes, and provides a level of access control."
    ]
  },
  {
    "question": "The following defines an import keyword:",
    "correct_options": [
      "Provides the compiler information that identifies outside classes used within the current class."
    ]
  },
  {
    "question": "Which of the following could be a reason to use a switch statement in a Java program?",
    "correct_options": [
      "Because it allows the program to run certain segments of code and neglect to run others based on the input given."
    ]
  },
  {
    "question": "The following code fragment properly implements the switch statement. True or false? default(input) switch '+': answer+=num; break; case '-': answer-=num; break; !default System.out.println(\"Invalid input\");",
    "correct_options": ["False"]
  },
  {
    "question": "Determine whether this boolean expression evaluates to true or false: !(3 < 4 && 6 > 6 || 6 <= 6 && 7 - 2 == 6)",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following are types of loops in Java?",
    "correct_options": ["for", "while", "do-while"]
  },
  {
    "question": "In a for loop, the counter is automatically incremented after each loop iteration. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "In the code fragment below, the syntax for the for loop's initialization is correct. True or false?public class ForLoop { public static void main (String args[]) { for ((int 1=10) (i<20) (i++)) {  System.out.println (\"i: \" + i);  } } }",
    "correct_options": ["False"]
  },
  {
    "question": "Suppose you are writing a program where the user is prompted to the give coordinates where they believe the princess is inside of the castle. Your program moves the prince to the coordinates that the user specified. If the princess is not found at those coordinates, the user is given a clue that helps them guess coordinates closer to the princess. The user is allowed to enter their new guess of where the princess is. Assume your program does not take into consideration the possibility that the user may enter coordinates outside of the castle where the princess could not be. What would be the result of the user entering coordinates outside of the castle? How could this be handled in your code?",
    "correct_options": [
      "An exception would occur. This could be handled by throwing the exception in your code if the user enters invalid coordinates. When the exception is caught, the prince could be moved to the coordinate inside the castle that is closest to those that the user specified."
    ]
  },
  {
    "question": "If an exception is thrown by a method, where can the catch for the exception be?",
    "correct_options": [
      "The catch can be in the method that threw the exception or in any other method that called the method that threw the exception."
    ]
  },
  {
    "question": "A logic error occurs if an unintentional semicolon is placed at the end of a loop initiation because the interpreter reads this as the only line inside the loop, a line that does nothing. Everything that follows the semicolon is interpreted as code outside of the loop. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "What exception message indicates that a variable may have been mispelled somewhere in the program?",
    "correct_options": [
      "variableName cannot be resolved to a variable",
      "All of the above"
    ]
  },
  {
    "question": "What will array arr contain after the following code segment has been executed?  int [] arr = {5, 4, 2, 1, 0}; for (int i = 1; i < arr.length; i++) { arr[i - 1] += arr[i]; }",
    "correct_options": ["7, 3, 2, 1, 0"]
  },
  {
    "question": "After execution of the following statement, which of the following are true? int number[] = new int[5];",
    "correct_options": ["number[2] is 0"]
  },
  {
    "question": "The following creates a reference in memory named k that can refer to six different integers via an index. True or false? int k[]= int[6];",
    "correct_options": ["False"]
  },
  {
    "question": "Which of the following declares and initializes a one dimensional array named values of size 5 so that all entries contain 1?",
    "correct_options": ["int[] values={1,1,1,1,1};"]
  },
  {
    "question": "Abstract classes cannot implement interfaces. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following are true about an abstract class?",
    "correct_options": [
      "It is identified by the Java keyword abstract.",
      "It is possible to create references of this type."
    ]
  },
  {
    "question": "Which of the following is a goal of the object model?",
    "correct_options": [
      "Data abstraction.",
      "Concealing implementation.",
      "Providing modular code that can be reused by other programs or classes."
    ]
  },
  {
    "question": "If a variable in a superclass is private, could it be directly accessed or modified by a subclass? Why or why not?",
    "correct_options": [
      "No. A private variable can only be modified by the same class with which it is declared regardless of its inheritance."
    ]
  },
  {
    "question": "Which of the following show the correct UML representation of the super class Planet and its subclass Earth?",
    "correct_options": ["None of the above."]
  },
  {
    "question": "Which is the most accurate description of the code reuse philosophy?",
    "correct_options": [
      "A programming philosophy that promotes simpler, more efficient coding by using existing code for new applications."
    ]
  },
  {
    "question": "Which of the following is the proper way to set the public variable length of the super class equal to 5 from inside the subclass?",
    "correct_options": ["super.length = 5"]
  },
  {
    "question": "What is garbage collection in the context of Java?",
    "correct_options": [
      "When all references to an object are gone, the memory used by the object is automatically reclaimed."
    ]
  },
  {
    "question": "Which of the following adds a constructor to the class below?",
    "correct_options": ["None of the above"]
  },
  {
    "question": "Complete the sentence. A constructor...",
    "correct_options": [
      "is used to create objects.",
      "may be declared public.",
      "is all of the above."
    ]
  },
  {
    "question": "The following statement compiles and executes. What do you know for certain? tree.grows(numFeet);",
    "correct_options": ["tree must be the name of the class."]
  },
  {
    "question": "Which constructor code populates the instance variables of the class correctly?",
    "correct_options": ["None of the above"]
  },
  {
    "question": "The following code is a good example of using the this reference. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "Which of the following is the definition for a variable argument method?",
    "correct_options": [
      "A type of argument that enables calling the same method with a different number of arguments.",
      "Having more than one constructor with the same name but different arguments."
    ]
  },
  {
    "question": "Identify the error(s) in the class below. Choose all that apply.",
    "correct_options": [
      "Private cannot be used as an access modifier.",
      "Final cannot be used as an access modifier.",
      "No method named min is defined."
    ]
  },
  {
    "question": "It is possible to have more than one constructor with the same name in a class, but they must have different parameters. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following shows the correct way to initialize a method DolphinTalk that takes in 2 integers, dol1 and dol2, and returns the greater int between the two?",
    "correct_options": [
      "int DolphinTalk(int dol1,int dol2){ if(dol1 > dol2) return dol1; else return dol2;}",
      "All of the above"
    ]
  },
  {
    "question": "Which segment of code correctly defines a method that contains two objects of class Tree as parameters?",
    "correct_options": ["void bloom(Tree pine, Tree oak) {//code here }"]
  },
  {
    "question": "Static methods can read static variables. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Static methods can return any object type. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "Any instance of the same class can assign a new value to a static variable. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "What will be the content of array variable table after executing the following code?",
    "correct_options": ["1 0 0  0 0 0", "1 0 01 1 01 0 1"]
  },
  {
    "question": "Which of the following statements is a valid array declaration?",
    "correct_options": [
      "double[] marks;",
      "float[] average;",
      "int[] number;",
      "int[] counter;"
    ]
  },
  {
    "question": "What is the output of the following segment of code if the command line arguments are \"a b c d e f\"?",
    "correct_options": ["6"]
  },
  {
    "question": "The following array declaration is valid. True or false? int[] y = new int[5];",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following declares and initializes a two-dimensional array?",
    "correct_options": ["int[][] array={{1,1,1},{1,1,1},{1,1,1}};"]
  },
  {
    "question": "Which of the following declares and initializes a one-dimensional array named words of size 10 so that all entries can be Strings?",
    "correct_options": [
      "String[] words=new String[10];",
      "String[] words=new String[10];"
    ]
  },
  {
    "question": "Which of the following declares and initializes a one-dimensional array named words of size 3 so that all entries can be Strings?",
    "correct_options": ["String[] words={\"Over\",\"the\",\"mountain\"};"]
  },
  {
    "question": "The following segment of code prints all five of the command line arguments entered into this program. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following declares and initializes a one-dimensional array that can hold 5 Object reference types?",
    "correct_options": ["Object[] array=new Object[5];"]
  },
  {
    "question": "What is the output of the following segment of code? int array[][] = {{1,2,3},{3,2,1}}; for(int i=0;i<2;i++) for(int j=0;j<3;j++) System.out.print(2*array[1][1]);",
    "correct_options": ["4"]
  },
  {
    "question": "Which of the following would be a correct way to handle an index out of bounds exception?",
    "correct_options": [
      "Rewrite your code to avoid the exception by not permitting the use of an index that is not inside the array.",
      "Throw the exception and catch it. In the catch, set the index to the index of the array closest to the one that was out of bounds."
    ]
  },
  {
    "question": "Which of the following correctly matches the symbol with its function?",
    "correct_options": [
      "== (two equal signs) compares values of primitive types such as int or char.",
      ".equals() compares the value of non-primitive objects.",
      "== (two equal signs) compares the values of non-primitive objects."
    ]
  },
  {
    "question": "What exception message indicates that a variable may have been misspelled somewhere in the program?",
    "correct_options": [
      "variableName cannot be resolved to a variable",
      "All of the above"
    ]
  },
  {
    "question": "Static methods can't change any class variable values at run-time. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "You can assign new values to static variables by prefacing them with the this keyword and a dot or period. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "You can return an instance of a private class through a static method of a different class. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following is the correct way to call an overridden method needOil() of a super class Robot in a subclass SqueakyRobot?",
    "correct_options": ["super.needOil();"]
  },
  {
    "question": "What is encapsulation?",
    "correct_options": [
      "A programming philosophy that promotes protecting data and hiding implementation in order to preserve the integrity of data and methods."
    ]
  },
  {
    "question": "If it is possible to inherit from an abstract class, what must you do to prevent a compiler error from occurring?",
    "correct_options": ["Override all abstract methods from the parent class."]
  },
  {
    "question": "It is possible to override methods such as equals() and toString() in a subclass of Object to fit the needs of the objects of the subclass. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "If an abstract class does not have implemented constructors or methods, it should be implemented as an interface instead. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "It is possible to return an object from a method. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "What type(s) would work for a variable argument method?",
    "correct_options": ["All of the above"]
  },
  {
    "question": "How is it possible for overloading to work?",
    "correct_options": [
      "Java Virtual Machine searches until it finds a constructor name and argument type match."
    ]
  },
  {
    "question": "The constructor method must always have at least one parameter. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "Consider public class YourClass{ public YourClass(int i){/*code*/} // more code...} To instantiate YourClass, what would you write?",
    "correct_options": ["YourClass y = new YourClass(3);"]
  },
  {
    "question": "What operator do you use to call an object's constructor method and create a new object?",
    "correct_options": ["new"]
  },
  {
    "question": "It is possible to throw and catch a second exception inside a catch block of code. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Suppose you are writing a program where the user is prompted to give coordinates where they believe the princess is inside of the castle...",
    "correct_options": [
      "An exception would occur. This could be handled by throwing an exception in your code if the user enters invalid coordinates. When the exception is caught, the user could be prompted to enter coordinates within the given range of the castle.",
      "An error would occur. Errors cannot be handled by code.",
      "An exception would occur. This could be handled by throwing the exception in your code if the user enters invalid coordinates. When the exception is caught, the prince could be moved to the coordinate inside the castle that is closest to those that the user specified.",
      "An exception would occur but could not be handled inside your code. The user would have to restart the program and enter proper coordinates."
    ]
  },
  {
    "question": "Which of the following correctly matches the switch statement keyword to its function?",
    "correct_options": [
      "switch: tells the compiler the value to compare the input against"
    ]
  },
  {
    "question": "In an if-else construct, the condition to be evaluated must be contained within parentheses. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "How would you use the ternary operator to rewrite this if statement?if (skillLevel > 5) numberOfEnemies = 10;else numberOfEnemies = 5;",
    "correct_options": ["numberOfEnemies = (skillLevel > 5) ? 10 : 5;"]
  },
  {
    "question": "Which of the two diagrams below illustrate the correct syntax for variables used in an if-else statement?",
    "correct_options": ["Example A"]
  },
  {
    "question": "How would you use the ternary operator to rewrite this if statement?  if (gender == \"female\") System.out.print(\"Ms.\"); else System.out.print(\"Mr.\");",
    "correct_options": [
      "System.out.print((gender == \"female\") ? \"Ms.\" : \"Mr.\");"
    ]
  },
  {
    "question": "What is the difference between the symbols = and == ?",
    "correct_options": [
      "The = is used to assign values to variables and the == compares values."
    ]
  },
  {
    "question": "One advantage to using a while loop over a for loop is that a while loop always has a counter. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "Which of the following is true about a do-while loop?",
    "correct_options": [
      "It is a modified while loop that allows the program to run through the loop once before testing the boolean condition."
    ]
  },
  {
    "question": "The syntax below represents a valid initialization of a for loop counter. True or False?\npublic class ForLoop { public static void main (String args[]) {  for (int i=10; i <20; i++)  {System.out.println(\"i: \"+i); } }}",
    "correct_options": ["True"]
  },
  {
    "question": "What is one significant difference between a while loop and a do-while loop?",
    "correct_options": [
      "A DO-WHILE loop will always execute the code at least once, even if the conditional statement for the WHILE is never true. A WHILE loop is only executed if the conditional statement is true."
    ]
  },
  {
    "question": "What should replace the comment \"//your answer here\" in the code below if the code is meant to take no action when i % 2 is 0 (in other words when i is even)?\nfor(int i = 0; i < 10; i++){\n  if(i%2 == 0)\n    //your answer here\n  else\n    k+=3;\n}",
    "correct_options": ["continue;"]
  },
  {
    "question": "Identify which situation could be an example of a while loop.",
    "correct_options": [
      "Taking coins out of a pile one at a time and adding their value to the total until there are no more coins in the pile to add."
    ]
  },
  {
    "question": "What will the following code segment output?  String s=\"\";  System.out.println(s);",
    "correct_options": ["\"\""]
  },
  {
    "question": "Suppose that str1 and str2 are two strings. Which of the statements or expressions are valid?",
    "correct_options": ["str1 += str2;"]
  },
  {
    "question": "In a project, 2 of the classes must contain a main method. True or False?",
    "correct_options": ["False"]
  },
  {
    "question": "A _______________ is used to organize Java related files.",
    "correct_options": ["Package"]
  },
  {
    "question": "Given the following declaration:  int z=5,m=6; Which line of Java code properly casts one type into another without data loss?",
    "correct_options": ["double x=(double)z/m;"]
  },
  {
    "question": "Which line of Java code will assign the value of the square root of 11 to a variable named a?",
    "correct_options": ["double a=Math.sqrt(11);"]
  },
  {
    "question": "Examine the following code:\n\n\nWhat is the value of variable x?",
    "correct_options": ["2.5"]
  },
  {
    "question": "Review the code below.\n\n\n\nSelect the result from the following statements about what happens when the loopVal >= 5 .",
    "correct_options": [
      "The message \"Printing Some Text\" will be printed until loopVal is no longer less than 5."
    ]
  },
  {
    "question": "Which of the following statements about what happens when the following code is executed is false?",
    "correct_options": [
      "The condition loopVal < 5 is tested before the block is executed."
    ]
  },
  {
    "question": "In Alice, where does an instance's axes intersect?",
    "correct_options": ["At the instance's center point."]
  },
  {
    "question": "In Alice, if a procedure is declared for a clownFish class, which classes can use the procedure?",
    "correct_options": ["The clownFish class and Swimmer class"]
  },
  {
    "question": "In Alice, you could identify when new procedures need to be declared by reviewing the textual storyboard for the animation. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following is a reason why procedural abstraction may be used in programming an animation?",
    "correct_options": ["The programmer wants to reuse the code."]
  },
  {
    "question": "Which of the following elements of the Alice animation should be tested before the animation is considered complete?",
    "correct_options": ["All of the above."]
  },
  {
    "question": "As the Alice programmer, you render the animation on your own. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "Functions answer questions about an object, such as its height, width, depth and even distance to another object. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In Alice, which of the following programming statements moves the fish forward, the distance to the rock, minus the depth of the rock?",
    "correct_options": [
      "this.Fish move forward {this.Fish getDistanceTo this.Rock - this.Rock getDepth}"
    ]
  },
  {
    "question": "In Alice, which of the following programming statements moves the cat forward the distance to the bird?",
    "correct_options": [
      "this.Cat move forward {this.Cat getDistanceTo this.Bird}"
    ]
  },
  {
    "question": "With keyboard controls, you can create Alice animations where the user controls an object that interacts with other objects. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following is not a type of event listener in Alice?",
    "correct_options": ["Cursor"]
  },
  {
    "question": "Expressions with relational operators produce true and false values. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following is not a relational operator?",
    "correct_options": ["//"]
  },
  {
    "question": "The initializer of a variable with a TextString value type could be (select all that apply):",
    "correct_options": ["None of the above."]
  },
  {
    "question": "In Java code the { } brackets are used to represent what statements?",
    "correct_options": ["begin", "end"]
  },
  {
    "question": "In Alice, when two objects are synchronized and move together, this means that one object is:",
    "correct_options": ["An object of another"]
  },
  {
    "question": "In Alice, Do In Order and Do Together:",
    "correct_options": ["Are control statements"]
  },
  {
    "question": "In Alice, which of the following is not a control statement?",
    "correct_options": ["Move"]
  },
  {
    "question": "In Alice, you must place the control structure in the code editor before adding any code that will go within it. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "The first step to using a top-down approach to programming is to create a table to align the storyboard steps to the programming instructions. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following is not a reason for why comments are helpful in an Alice program?",
    "correct_options": ["Comments change the functionality of the program."]
  },
  {
    "question": "In Alice, where are objects added and positioned in the scene?",
    "correct_options": ["The Scene editor"]
  },
  {
    "question": "Use your Greenfoot knowldege: Abstraction occurs in many different ways in programming. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In Greenfoot, the body of the method is located in between which of the following characters?",
    "correct_options": ["Curly brackets { }"]
  },
  {
    "question": "In Greenfoot, methods can be called in the act method. When the Act button is clicked in the environment, the methods in the method body of the act method are executed. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "From your Greenfoot lessons, which of the following is an example of a type of data passed through a parameter?",
    "correct_options": ["Integers"]
  },
  {
    "question": "From your Greenfoot lessons, instances do not have any memory. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In Greenfoot, which method body correctly adds an instance of the World to a scenario, with size x = 300 y = 300 and a resolution of 2 pixels per cell?",
    "correct_options": ["super(300,300,2);"]
  },
  {
    "question": "In Greenfoot, an if-statement is used to alternate between displaying two images in an instance. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "Using the Greenfoot IDE, when is a constructor automatically executed?",
    "correct_options": ["When a new instance of the class is created."]
  },
  {
    "question": "In Greenfoot, you will not receive an error message if your code is incorrect. It will simply not work, and you will have to determine why the code doesn't work. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "From your Greenfoot lessons, a problem statement defines the purpose for your game. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In Greenfoot, a subclass is created by right-clicking on a superclass. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "Which of the following Java syntax is used to correctly create a Bee subclass?",
    "correct_options": ["public class Bee extends Animal"]
  },
  {
    "question": "Defined methods are methods that are only created by the Greenfoot development team?",
    "correct_options": ["False"]
  },
  {
    "question": "In Greenfoot, which of the following statement is true about Defined Methods?",
    "correct_options": [
      "A defined method must be called by your source code, normally in the Act method."
    ]
  },
  {
    "question": "Which of the following is not a component of a while loop?",
    "correct_options": ["Control operator"]
  },
  {
    "question": "An array is an object that holds multiple methods. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "In Greenfoot, a local variable is declared at the beginning of a class. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "In Greenfoot, what type of symbol is used to connect boolean expressions?",
    "correct_options": ["Logic operators"]
  },
  {
    "question": "From your Greenfoot lessons, when does an if-else statement execute it's second code segment?",
    "correct_options": ["If a condition is false."]
  },
  {
    "question": "The list below displays characteristics of a Greenfoot world constructor, except for one. Which one should be removed?",
    "correct_options": ["Has a void return type."]
  },
  {
    "question": "Use your Greenfoot knowledge: What range of numbers does the following method return? Greenfoot.getRandomNumber(30)",
    "correct_options": ["A random number between 0 and 29."]
  },
  {
    "question": "In Greenfoot, which of the following is the correct notation for calling a method for an instance of a class?",
    "correct_options": ["object-name.method-name(parameters);"]
  },
  {
    "question": "From your Greenfoot lessons, what are the ways that you can view a class's methods?",
    "correct_options": ["In the class's documentation"]
  },
  {
    "question": "In Greenfoot, what happens if the condition is false in an if-statement?",
    "correct_options": ["The programming statements are not executed."]
  },
  {
    "question": "In Greenfoot, you can only interact with the scenario using a keyboard.",
    "correct_options": ["False"]
  },
  {
    "question": "What type of parameter does the Greenfoot playSound method expect?",
    "correct_options": ["name of a sound file (as String)"]
  },
  {
    "question": "When you re-initialize a scenario, Greenfoot automatically displays an instance of the World subclass in the scenario. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following answers have the correct syntax for declaring a class variable in Greenfoot?",
    "correct_options": [
      "private variable-type variable-name;",
      "public variable-type variable-name;"
    ]
  },
  {
    "question": "In Greenfoot you can only access the methods of the current class?",
    "correct_options": ["True"]
  },
  {
    "question": "In Greenfoot, you can cast an Actor class to a World class?",
    "correct_options": ["False"]
  },
  {
    "question": "Writing more generic statements to handle the creation and positioning of many objects is one Abstraction technique?",
    "correct_options": ["True"]
  },
  {
    "question": "In Greenfoot you can interact with the scenario using a mouse.",
    "correct_options": ["True"]
  },
  {
    "question": "In Greenfoot what command would you use to detect if a mouse has been clicked on an actor?",
    "correct_options": ["Greenfoot.mouseClicked(this)"]
  },
  {
    "question": "In Greenfoot, what type of parameter does the isKeyDown method expect?",
    "correct_options": ["String"]
  },
  {
    "question": "To execute a method in your Greenfoot game, where is it called from?",
    "correct_options": ["The act method"]
  },
  {
    "question": "In Greenfoot a collision is when 2 actors touch?",
    "correct_options": ["True"]
  },
  {
    "question": "Which one of the following can be used to detect when 2 actors collide?",
    "correct_options": ["isTouching()"]
  },
  {
    "question": "In Greenfoot, which of the following statements could prevent an infinite loop from occurring?",
    "correct_options": ["i = i + 1"]
  },
  {
    "question": "Which of the following is an example of string concatenation?",
    "correct_options": [
      "Instead of entering \".png\" after each image file name, add + \".png\" after the imageName value in the programming statement."
    ]
  },
  {
    "question": "Variable values can be changed as often as you like. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "From your Alice lessons, variables are fixed and cannot be changed. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "Alice provides pre-populated worlds through which new menu tab?",
    "correct_options": ["Blank Slates", "Starters", "Recent", "File System"]
  },
  {
    "question": "Which of the following IF control structures command the blue tang fish to roll and simultaneously move down if it collides with a shark, or move forward if it does not collide with a shark?",
    "correct_options": [""]
  },
  {
    "question": "Main is an example of what in the following code? public static void main (String[] args) { System.out.println{\"Hello World!\"); }",
    "correct_options": ["A method"]
  },
  {
    "question": "From your Alice lessons, when testing your animation, you should test that comments were added below each sequence of instructions in the code. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following are examples of elements you would test in your Alice animation?",
    "correct_options": [
      "Event listeners trigger the correct responses.",
      "All of the procedures display in alphabetical order in the Procedures tab.",
      "Objects move with smooth timing.",
      "Math expressions calculate as expected."
    ]
  },
  {
    "question": "The animation checklist helps you confirm that all elements of the Alice animation are operating as expected. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following is not a valid arithmetic operator in Java?",
    "correct_options": ["$", "None of the above"]
  },
  {
    "question": "The list below displays valid primitive types in Java, except which one?",
    "correct_options": ["int"]
  },
  {
    "question": "Alice uses built-in math operators; they are:",
    "correct_options": ["All of the above"]
  },
  {
    "question": "In Alice, which of the following programming statements moves the butterfly forward, double the distance to the tree?",
    "correct_options": [
      "this.Butterfly move forward {this.Butterfly getDistanceTo this.Tree * 2}"
    ]
  },
  {
    "question": "In Alice, there is no way of reordering the function list in the function tab. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "In Alice, where would you get access to the specific joints of an object that are not available through the object drop-down menu?",
    "correct_options": [
      "code editor",
      "scene editor",
      "functions tab",
      "procedures tab"
    ]
  },
  {
    "question": "In Alice, the Functions tab will display the pre-defined functions for the selected instance. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "In Alice, each class has a set of pre-defined procedures and functions. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "To add a procedure to myFirstMethod, right-click on the procedure you wish to add and select the Add button. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "In Alice, a computer program requires functions to tell it how to perform the procedure. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "From your Alice lessons, what is the purpose of nesting?",
    "correct_options": [
      "To add visual structure to your program.",
      "To add random movements to your program.",
      "To add more procedures to your program.",
      "To add text to your program that tells the viewer what the code does."
    ]
  },
  {
    "question": "From your Alice lessons, which control statement executes instructions simultaneously?",
    "correct_options": ["Do together"]
  },
  {
    "question": "In Alice, how is a one-shot procedure different from procedures in the Code editor?",
    "correct_options": [
      "One-shot procedures are only available for acting objects, while procedures are available for all objects.",
      "One-shot procedures are available in the Code editor, while procedures are available in the Scene editor.",
      "A one-shot procedure executes only one time to re-position the object, while procedures in the Code editor execute every time the Run button is clicked.",
      "All of the above"
    ]
  },
  {
    "question": "Which handle style would be used to rotate an object's sub-part about the x, y, and z axes?",
    "correct_options": ["Rotation"]
  },
  {
    "question": "In Alice, when a new procedure is declared, all subclasses of the superclass will inherit the procedure. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "Defining the scenario, and the Alice animation to represent the scenario, is the first step to programming your animation. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "In Alice, procedural abstraction is the concept of making code easier to understand and reuse. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "Which button is selected in the Alice file menu to save a different version of an animation?",
    "correct_options": ["Save As..."]
  },
  {
    "question": "Identify the variable declared in the given code. public class Welcome { public static void main(String args[]) { int a = 2; System.out.println(\"a is \" + a); } }",
    "correct_options": ["a"]
  },
  {
    "question": "What is the output? public class Hello { public static void main(String args[]) { String str = \"Hello\"; str = \"World\"; System.out.println(str); }}",
    "correct_options": ["World"]
  },
  {
    "question": "Read the following method signature. Using your Greenfoot experience, what does this method do?  public static int getRandomNumber (int limit)",
    "correct_options": [
      "Returns a random number between zero and the parameter limit."
    ]
  },
  {
    "question": "From your Greenfoot lessons, dot notation allows you to use a method from a different class, if the class you are programming does not possess the method. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In Greenfoot, the origin of the world coordinate system (0,0) starts in the center of the world. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "In Greenfoot, the instance has a source code editor. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "From the Greenfoot IDE, where are inherited methods located?",
    "correct_options": ["In the documentation"]
  },
  {
    "question": "In the Greenfoot IDE, which of the following are components of a parameter?",
    "correct_options": ["Parameter name", "Parameter type"]
  },
  {
    "question": "From your Greenfoot lessons, which of the following are properties of an instance?",
    "correct_options": ["Size", "Color", "Image file", "Methods"]
  },
  {
    "question": "From your Greenfoot lessons, source code is written in the Code editor. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In a Greenfoot if-statement, the programming statements that the if-statement executes are written in curly brackets. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "When designing a game in Greenfoot, it helps to define the actions that will take place in a textual storyboard. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following demonstrates a Greenfoot subclass/superclass relationship?",
    "correct_options": ["A rose is a subclass of the flower superclass."]
  },
  {
    "question": "From your Greenfoot lessons, the reset button resets the scenario back to its initial position. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "A subclass has what kind of relationship to a superclass?",
    "correct_options": ["\"is-a\""]
  },
  {
    "question": "In Greenfoot to create a new instance of a class, you right-click on the class, then select which of the following commands in the class menu?",
    "correct_options": ["new Duke()"]
  },
  {
    "question": "What is the output?public class Welcome { public static void main(String args[]) { System.out.println(\"This is my first program\"); int a = 2; System.out.println(\"a is \" + a); }}",
    "correct_options": ["This is my first program a is 2"]
  },
  {
    "question": "What is the output?public class Hello { public static void main(String args[]) { String str = \"Hello\"; str = \"World\"; System.out.println(str); }}",
    "correct_options": ["World"]
  },
  {
    "question": "What is the output? public static void main(String args[]) { int x = 100; int y = x; y++; System.out.println(\"Value of x is \" + x); System.out.println(\"Value of y is \" + y); }",
    "correct_options": ["Value of x is 100 Value of y is 101"]
  },
  {
    "question": "What is the output? public class Person { public static void main(String args[]) { int age = 20; System.out.println(\"Value of age: \" +age); age = 5 + 3; System.out.println(\"Value of age: \" +age); age = age + 1; age++; System.out.println(\"Value of age: \" +age); } }",
    "correct_options": ["Value of age: 20 Value of age: 8 Value of age: 9"]
  },
  {
    "question": "In object-oriented programming, an object comprises properties and behaviors where properties are represented as fields of the object and behavior is represented as methods.",
    "correct_options": ["True"]
  },
  {
    "question": "The transformations that have occurred in the computing world progressing in this order:",
    "correct_options": [
      "Mainframe Computing, Desktop Computing, Grid Computing, Client/Server Computing."
    ]
  },
  {
    "question": "Which of the following transformations in computing led to the increase in graphical user interface (GUI) applications?",
    "correct_options": ["Desktop Computing"]
  },
  {
    "question": "A database is a centralized and structured set of data stored on a computer system and provides facilities for retrieving, adding, modifying, and deleting the data when required.",
    "correct_options": ["True"]
  },
  {
    "question": "What is the difference between \"information\" and \"data\"?",
    "correct_options": [
      "Data turns into useful information. It is stored in a database and accessed by systems and users."
    ]
  },
  {
    "question": "Which of the following is not a stage in the Database Development Process?",
    "correct_options": ["Reporting"]
  },
  {
    "question": "A ___________ model describes a database in terms of tables, columns, and joins between tables.",
    "correct_options": ["Relational"]
  },
  {
    "question": "A network database comprises of a collection of records connected to one another through links.",
    "correct_options": ["False"]
  },
  {
    "question": "The advantages of an object-oriented data model are:",
    "correct_options": ["Both A and B."]
  },
  {
    "question": "When completing the conceptual modeling process we must take into account the following:",
    "correct_options": ["All of the above"]
  },
  {
    "question": "All Business Rules can be modeled.",
    "correct_options": ["False"]
  },
  {
    "question": "The reason or drive for using databases rather than files has been ...  (Choose 3)",
    "correct_options": [
      "Integration of data for easier access and modification for complex transactions",
      "Availability of data to a diverse set of users",
      "Reduced redundancy of data"
    ]
  },
  {
    "question": "Business ______ are used to understand business processes, and the nature, role, and scope of the data.",
    "correct_options": ["Rules"]
  },
  {
    "question": "Business rules help you understand the standardization procedure an organization follows when handling huge data.",
    "correct_options": ["True"]
  },
  {
    "question": "Which one of the following is not a goal of this course:",
    "correct_options": ["Database performance tuning."]
  },
  {
    "question": "The Oracle Academy courses are intended for self-study. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "A unique identifier must be made up of more than one attribute. True or False?",
    "correct_options": ["False"]
  },
  {
    "question": "What is the purpose of a Unique Identifier?",
    "correct_options": [
      "To identify one unique instance of an entity by using one or more attributes and/or relationships."
    ]
  },
  {
    "question": "The primary key uniquely identifies each row in a table and is based on the __________ from the logical design.",
    "correct_options": ["Primary UID"]
  },
  {
    "question": "People are not born with \"numbers\", but a lot of systems assign student numbers, customer IDs, etc.  A shoe has a color, a size, a style, but may not have a descriptive \"number\". So, to be able to uniquely and efficiently identify one instance of the entity SHOE, a/an ______________ UID can be created.",
    "correct_options": ["Artificial"]
  },
  {
    "question": "Which of the following is not an advantage of a relational database?",
    "correct_options": ["One table with all the data."]
  },
  {
    "question": "In the relational model, relationships between relations or tables are created by using?",
    "correct_options": ["Foreign Keys"]
  },
  {
    "question": "The physical model shows all table structures. True or False.",
    "correct_options": ["True"]
  },
  {
    "question": "The logical model determines relationship optionality and cardinality",
    "correct_options": ["False"]
  },
  {
    "question": "Many reasons exist for creating a conceptual model. Choose three appropriate reasons from the options below.",
    "correct_options": [
      "They model functional and informational needs.",
      "They capture current and future needs.",
      "They capture the data values."
    ]
  },
  {
    "question": "Entity names are always singular. True or False?",
    "correct_options": ["False"]
  },
  {
    "question": "Which of the following statements about attributes are true? (Choose Two)",
    "correct_options": [
      "They describe, qualify, quantify, classify, or specify an entity.",
      "They are the primary container for data."
    ]
  },
  {
    "question": "A/an _________ is a piece of information that in some way describes an entity. It is a property of the entity and it quantifies, qualifies, classifies, or specifies the entity.",
    "correct_options": ["Attribute"]
  },
  {
    "question": "When creating entities in a logical model you must follow these rules: (Choose Two)",
    "correct_options": ["Name them in Singular", "Include Attributes"]
  },
  {
    "question": "A relationship is transformed from logical to a physical model using _________.",
    "correct_options": ["Foreign Keys"]
  },
  {
    "question": "Which of the following is NOT a relationship type?",
    "correct_options": ["Some to None"]
  },
  {
    "question": "Which of the following is NOT an example of cardinality?",
    "correct_options": ["All are examples of cardinality."]
  },
  {
    "question": "The optionality of a relationship must be either _______ or _______.",
    "correct_options": ["Mandatory or Optional"]
  },
  {
    "question": "A model is considered to be Implementation-Free if it can be implemented using ____ of the database software models such as hierarchical, network or relational.",
    "correct_options": ["any"]
  },
  {
    "question": "In an ERD diagram how is cardinality represented ? (Choose two)",
    "correct_options": ["With a crow's foot", "With a solid line"]
  },
  {
    "question": "Using ERDish, which wording represents optionality? (Choose Two)",
    "correct_options": ["may", "mandatory"]
  },
  {
    "question": "In an ERD diagram how is an optional relationship represented ?",
    "correct_options": ["With a crows foot"]
  },
  {
    "question": "Table names can contain all of the following except:",
    "correct_options": ["Spaces"]
  },
  {
    "question": "In a physical data model, an attribute is represented as a/an",
    "correct_options": ["Column"]
  },
  {
    "question": "When converting attribute names to columns __________ are frequently used.",
    "correct_options": ["Abbreviations"]
  },
  {
    "question": "The Rule of 3rd Normal Form states that No Non-UID attribute can be dependent on another non-UID attribute. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "An entity without repeated values is said to be in __________.",
    "correct_options": ["2nd normal form"]
  },
  {
    "question": "A table is in 2NF if",
    "correct_options": ["Both A and B must be true."]
  },
  {
    "question": "\"Only teachers may supervise exams\" is an example of which of the following?",
    "correct_options": [
      "An attribute that is not inherited from the PERSON supertype and is unique to the TEACHER subtype"
    ]
  },
  {
    "question": "A table is in 1NF if ...(Choose 2)",
    "correct_options": [
      "There is only one data value.",
      "Each row contains different columns"
    ]
  },
  {
    "question": "You can only create relationships to a Supertype, not to a Subtype. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "Intersection Entities often have the relationships participating in the UID, so the relationships are often barred. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "All instances of the supertype _____ be an instance of one of the subtypes.",
    "correct_options": ["may"]
  },
  {
    "question": "A ___________ relationship is created when the UID for an entity includes the relationship with another entity.",
    "correct_options": ["recursive"]
  },
  {
    "question": "Which of the following pairs of entities is most likely to be modeled as a M:M relationship?",
    "correct_options": ["PERSON and FINGERPRINT"]
  },
  {
    "question": "Which of the following scenarios should be modeled so that historical data is kept? (Choose two)",
    "correct_options": ["BABY and AGE", "CUSTOMER and PAYMENTS"]
  },
  {
    "question": "The strategies for learning used in this course include:",
    "correct_options": ["Project driven curriculum", "All of the above"]
  },
  {
    "question": "Documenting Business Requirements helps developers control the scope of the system and prevents users from claiming that the new system does not meet their business requirements. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "Business rules are important because_________.",
    "correct_options": [
      "They allow the developer to understand the relationship and constraints of the participating entities",
      "They can become outdated quickly."
    ]
  },
  {
    "question": "If information requirements are clearly communicated during conceptual modeling the following will result:",
    "correct_options": ["A well-designed conceptual model"]
  },
  {
    "question": "A flat file may contain many fields, often, with duplicate data that are prone to data corruption.",
    "correct_options": ["True"]
  },
  {
    "question": "In a _______ database model the data is organized into a tree-like structure and to retrieve data the whole tree needs to be traversed starting from the root node.",
    "correct_options": ["Hierarchical"]
  },
  {
    "question": "In the relational database model, each table name must be unique. The column names in the table must be unique too. You can have two different tables that have column names that are the same.",
    "correct_options": ["True"]
  },
  {
    "question": "Which is the first step in the Database Development Process?",
    "correct_options": ["Strategy and Analysis"]
  },
  {
    "question": "Information is the result of combining, comparing and performing calculations on data.",
    "correct_options": ["True"]
  },
  {
    "question": "Which transformation in computing allows for storage and delivery of applications and data over the internet?",
    "correct_options": ["Cloud Computing"]
  },
  {
    "question": "Today, all industries have a need for database systems. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "A relational database stores information in tables with rows and columns.",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following statements are true? (Choose two)",
    "correct_options": [
      "Relational database systems are the main thrust behind SQL since it provides the language elements needed to tie together the information in the database.",
      "Flat file database structures help eliminate redundant information."
    ]
  },
  {
    "question": "In an ERD, optionality is depicted using __________.",
    "correct_options": ["single toe or crows foot"]
  },
  {
    "question": "Which of the following are true about Cardinality? (Choose two)",
    "correct_options": [
      "Cardinality tells \"how many\".",
      "Cardinality specifies whether something is required or not."
    ]
  },
  {
    "question": "One-to-One relationships have _____________ of one to one in both directions.",
    "correct_options": ["Cardinality"]
  },
  {
    "question": "Which of the following statements does not apply to relational databases?",
    "correct_options": [
      "Relational databases have a strong procedural orientation."
    ]
  },
  {
    "question": "The Physical Model is derived from the Logical Model. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "In a relational database system, the next step after creating a conceptual data model is to convert it to a _________.",
    "correct_options": ["Logical data model"]
  },
  {
    "question": "Unique Identifiers...",
    "correct_options": [
      "Distinguish one instance of an entity from all other instances of that entity"
    ]
  },
  {
    "question": "The conceptual model does all of the following except:",
    "correct_options": ["Documents type of operating system to be used."]
  },
  {
    "question": "Capturing all required data is the only goal of entity relationship modeling.",
    "correct_options": ["False"]
  },
  {
    "question": "An entity may have which of the following?",
    "correct_options": ["Instances"]
  },
  {
    "question": "Which of the attributes is a volatile attribute?",
    "correct_options": ["Date of birth"]
  },
  {
    "question": "Which of the following would be a logical constraint when modeling time for a City entity?",
    "correct_options": [
      "Cites may change their names and/or country association if the borders of a country change."
    ]
  },
  {
    "question": "Attribute names are converted to column names by ________________.",
    "correct_options": ["Replacing spaces with underscores."]
  },
  {
    "question": "The transformation from an ER diagram to a physical design involves changing terminology. Secondary Unique Identifiers become _____.",
    "correct_options": ["Columns"]
  },
  {
    "question": "In a physical data model, a relationship is represented as a combination of: (Choose Two)",
    "correct_options": ["Column", "Foreign Key"]
  },
  {
    "question": "A business rule such as \"We only ship goods after customers have completely paid any outstanding balances on their account\" is best enforced by:",
    "correct_options": [
      "Hiring a programmer to create additional programming code to verify no goods are shipped until the account has been settled in full."
    ]
  },
  {
    "question": "As a database designer, you do not need to worry about where in the datamodel you store a particular attribute; as long as you get it onto the ERD, your job is done. True or False?",
    "correct_options": ["False"]
  },
  {
    "question": "According to ___________, an attribute must be dependent on its entity's entire unique identifier.",
    "correct_options": ["2nd normal form"]
  },
  {
    "question": "If a relationship can NOT be moved between instances of the entities it connects, it is said to be:",
    "correct_options": ["Non-Transferable"]
  },
  {
    "question": "Which of the following statements about subtypes is not true?",
    "correct_options": ["Must have subtypes of its own."]
  },
  {
    "question": "When you resolve a M:M, you simply re-draw the relationships between the two original entities; no new entities are created. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "An arc can also be modeled as Supertype and Subtypes. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "Many to many relationships must be left in the Model. It is important to have them documented as M-M. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "How many subtypes can a supertype have?",
    "correct_options": ["any number"]
  },
  {
    "question": "All ER diagrams must have one of each of the following: (Choose two)",
    "correct_options": [
      "One or more Entities",
      "Relationships between entities"
    ]
  },
  {
    "question": "A ______________ is frequently used to track information about a relationship that changes over time.",
    "correct_options": ["intersection entity"]
  },
  {
    "question": "Modeling historical data is optional. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "Would it be a good idea to model age as an attribute of STUDENT?",
    "correct_options": ["No - it is a volatile attribute"]
  },
  {
    "question": "Normalizing an Entity to 1st Normal Form is done by removing any attributes that contain muliple values. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "Can all constraints be modeled on an ER diagram?",
    "correct_options": [
      "No, and those that cannot be modeled should be listed on a separate document to be handled programmatically"
    ]
  },
  {
    "question": "Why is it important to follow the rules of normalization?",
    "correct_options": ["All of the above."]
  },
  {
    "question": "Attribute names are converted to column names by _________________.",
    "correct_options": ["Replacing spaces with underscores."]
  },
  {
    "question": "In a relational database system, the next step after creating a conceptual data model is to convert it to a _________ .",
    "correct_options": ["Logical data model"]
  },
  {
    "question": "A logical model includes :",
    "correct_options": [
      "Entities, Attributes, Unique Identifiers and Relationships"
    ]
  },
  {
    "question": "Using ERDish, which wording represents cardinality? (Choose Two)",
    "correct_options": ["one or more", "one only"]
  },
  {
    "question": "Which of the following are suitable Entity names? (Choose Two)",
    "correct_options": ["ANIMALS", "DOGS"]
  },
  {
    "question": "Which symbol is used to show that a particular attribute is mandatory?",
    "correct_options": ["*"]
  },
  {
    "question": "Attributes have Instances. True or False?",
    "correct_options": ["False"]
  },
  {
    "question": "The candidate UID that is chosen to identify an entity is called the Primary UID; other candidate UIDs are called Secondary UIDs.",
    "correct_options": [
      "No, each Entity can only have one UID, the secondary one."
    ]
  },
  {
    "question": "A candidate UID that does not get chosen to become the primary UID is called a _________ .",
    "correct_options": ["Secondary UID"]
  },
  {
    "question": "If there is a column missing in an entity - normalization should identify this problem.",
    "correct_options": ["True"]
  },
  {
    "question": "Normalization is the process of organizing the attributes and entities of a relational database to minimize ______________",
    "correct_options": ["All of the above."]
  },
  {
    "question": "Another name for a \"barred relationship\" is ________________.",
    "correct_options": ["Identifying Relationship"]
  },
  {
    "question": "A non-transferable relationship means the detail _____ be changed to point to a new master.",
    "correct_options": ["can not"]
  },
  {
    "question": "The \"Other\" subtype is mandatory. True or False?",
    "correct_options": ["False"]
  },
  {
    "question": "A recursive relationship has cardinality of ___________.",
    "correct_options": ["Cannot be determined without more information."]
  },
  {
    "question": "When mapping arcs a __________ constraint can be written to enforce mutual exclusivity.",
    "correct_options": ["check"]
  },
  {
    "question": "A database interacts with the data and provides the following facilities:",
    "correct_options": ["All of the above."]
  },
  {
    "question": "The technical software requirements for this course include all of the following except:",
    "correct_options": ["All are requirements."]
  },
  {
    "question": "Using a database solution instead of a flat file eliminates all of the following issues except:",
    "correct_options": ["Inconsistency"]
  },
  {
    "question": "A conceptual model includes :",
    "correct_options": [
      "Entities, Attributes, Unique Identifiers and Relationships"
    ]
  },
  {
    "question": "The logical model becomes the blueprint for designing the ________ model",
    "correct_options": ["Physical"]
  },
  {
    "question": "An ERD is an example of a ______ Model.",
    "correct_options": ["Conceptual"]
  },
  {
    "question": "Flat file databases are generally in plain-text form, where each line holds only one record. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "A _____ is a type of database that stores data in a single table.",
    "correct_options": ["Flat file"]
  },
  {
    "question": "All entities must be given a new artificial UID. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following would be good as a Unique Identifier for its Entity? (Choose Three)",
    "correct_options": [
      "Date of birth for Baby",
      "Vehicle Registration Number for Car",
      "ISBN Number for Book"
    ]
  },
  {
    "question": "Which of the following is not a goal of ER modeling:",
    "correct_options": [
      "It is acceptable to include information that is derivable."
    ]
  },
  {
    "question": "Data modeling is performed for the following reasons: (Choose Two)",
    "correct_options": [
      "It helps discussions and reviews.",
      "The ERD becomes a blueprint for designing the actual system."
    ]
  },
  {
    "question": "When mapping a relationship for an ERD relationship names must be included.",
    "correct_options": ["False"]
  },
  {
    "question": "The __________ model includes entities, attributes, UIDs, relationships as well as optionality and cardinality of these items.",
    "correct_options": ["Logical"]
  },
  {
    "question": "Attributes that can be divided into smaller subparts are called________________.",
    "correct_options": ["Composite Attribute"]
  },
  {
    "question": "One-to-Many relationships have cardinality of one or more in both directions. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "The cardinality of a relationship can be _____________. (Choose two)",
    "correct_options": ["one or more", "one to one"]
  },
  {
    "question": "Matrix Diagrams should be developed BEFORE the ERD. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "When is an entity in 2nd Normal Form?",
    "correct_options": [
      "When attributes with repeating or multi-values are removed."
    ]
  },
  {
    "question": "The following statement displays all the rows in the departments table: SELECT ____ FROM departments;",
    "correct_options": ["*"]
  },
  {
    "question": "Which statement displays the last name, salary, and annual compensation of employees where the annual compensation is calculated by multiplying the monthly salary with 15, plus a one-time bonus of $200.",
    "correct_options": [
      "SELECT last_name, salary, 15*salary+200 FROM employees;"
    ]
  },
  {
    "question": "Which SQL key word is used to do ranking in top-n-analysis",
    "correct_options": ["ROWNUM"]
  },
  {
    "question": "Top-n-analysis is used when you want to retrieve only the top number of records from a result set.",
    "correct_options": ["True"]
  },
  {
    "question": "A _______________ is a join condition containing something other than an equality operator.",
    "correct_options": ["NONEQUIJOIN"]
  },
  {
    "question": "Joining tables with the NATURAL JOIN, USING, or ON clauses results in an __________ join. (Choose 2)",
    "correct_options": ["INNER", "OUTER"]
  },
  {
    "question": "The CARTESIAN or CROSS join gets created when a join condition is omitted.",
    "correct_options": ["True"]
  },
  {
    "question": "The ___________ JOIN clause produces the cross-product of two tables.",
    "correct_options": ["CROSS"]
  },
  {
    "question": "Character strings and dates in the WHERE clause must be enclosed with single quotation marks (' ').",
    "correct_options": ["True"]
  },
  {
    "question": "The _______ condition tests for nulls.",
    "correct_options": ["IS NULL"]
  },
  {
    "question": "A database transaction consists of the following except :",
    "correct_options": ["SELECT queries"]
  },
  {
    "question": "A transaction begins when the first DML statement is encountered and ends when one of the following occurs .....",
    "correct_options": ["Either of the above statements"]
  },
  {
    "question": "In a hierarchical database model the data is stored as records that are connected to one another through ________.",
    "correct_options": ["links"]
  },
  {
    "question": "Which is the first step in the Database Development Process ?",
    "correct_options": ["Strategy and Analysis"]
  },
  {
    "question": "A DBMS comprises of the following elements: (Choose 3)",
    "correct_options": [
      "Query language",
      "Data Dictionary",
      "Memory and Storage Management"
    ]
  },
  {
    "question": "Select the business or industry that would not have a need for a database.",
    "correct_options": [
      "All these businesses could benefit from using a database."
    ]
  },
  {
    "question": "Which of the following are reasons we create conceptual models?",
    "correct_options": [
      "It facilitates discussion; a picture is worth a thousand words",
      "It forms important ideal system documentation",
      "It takes into account government regulations and laws",
      "It forms a sound basis for physical database design",
      "All of the above"
    ]
  },
  {
    "question": "When mapping a relationship for an ERD diagram both sides of the relationship have to be mapped.",
    "correct_options": ["True"]
  },
  {
    "question": "A relationship can be between ____________.",
    "correct_options": ["All of the above."]
  },
  {
    "question": "In a relationship , _________ are used to helped describe the meaning of the connection between the entities.",
    "correct_options": ["names"]
  },
  {
    "question": "A foreign key is a column or combination of columns in one table that uniquely identifies a row of another table.",
    "correct_options": ["False"]
  },
  {
    "question": "Each column in a relation is called an entity. True or False?",
    "correct_options": ["False"]
  },
  {
    "question": "Which symbol is used to show that a particular attribute is optional?",
    "correct_options": ["#"]
  },
  {
    "question": "In this course, we use the __________ notation for ERD modeling.",
    "correct_options": ["Barker"]
  },
  {
    "question": "To identify an attribute as part of a unique identifier on an ER diagram, the # symbol goes in front of it. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "ERDish is a language used to create database structures in SQL",
    "correct_options": ["False"]
  },
  {
    "question": "In the relational model, data is organized in a basic storage structure called a ____________.",
    "correct_options": ["Table"]
  },
  {
    "question": "In a business that sells pet food, choose the best relationship name between FOOD TYPE and ANIMAL (e.g. dog, horse, or cat). (Choose Two)",
    "correct_options": [
      "Each FOOD TYPE may be given to one or more ANIMALs.",
      "Each FOOD TYPE may be made from one or more ANIMALs."
    ]
  },
  {
    "question": "The components of a relationship include all of the following except :",
    "correct_options": ["Relational Integrity"]
  },
  {
    "question": "A new system would have a mixture of both Procedural and Structural Business Rules as part of the documentation of that new system. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "Intersection Entities are at the ______ end of the newly created 1:M (Parent:Child) relationship;",
    "correct_options": ["Child"]
  },
  {
    "question": "What do you call the entity created when you resolve a M:M relationship?",
    "correct_options": ["Intersection entity"]
  },
  {
    "question": "Which of the following would best be represented by an arc?",
    "correct_options": ["STUDENT (Grade A student, Average Student)"]
  },
  {
    "question": "We take the primary key from the \"one\" table and place it on the \"many\" table to create a foreign key.",
    "correct_options": ["True"]
  },
  {
    "question": "When mapping a barred relationship a primary key and foreign key can be the same field.",
    "correct_options": ["True"]
  },
  {
    "question": "Primary key constraints should have a suffix of PKEY.",
    "correct_options": ["False"]
  },
  {
    "question": "We can apply naming abbreviations using the .csv file containing the abbreviations",
    "correct_options": ["True"]
  },
  {
    "question": "Foreign key constraints are named using the ______________ of both tables.",
    "correct_options": ["UID suffix"]
  },
  {
    "question": "In Oracle SQL Developer Data Modeler you can select select how you want to map your subtypes.",
    "correct_options": ["True"]
  },
  {
    "question": "You must first select the Logical model you want to work with to Engineer it to a Relational model.",
    "correct_options": ["True"]
  },
  {
    "question": "The main subject areas taught by the Oracle Academy are:",
    "correct_options": ["Data Modeling, SQL, and PL/SQL"]
  },
  {
    "question": "Candidate UIDs must be made up of only one attribute.",
    "correct_options": ["False"]
  },
  {
    "question": "A candidate UID that does not get chosen to become the primary UID is called a _________.",
    "correct_options": ["Secondary UID"]
  },
  {
    "question": "Which of the following entities most likely contains invalid attributes?",
    "correct_options": [
      "Entity: Car. Attributes: Owner Occupation, Owner Salary, Speed"
    ]
  },
  {
    "question": "The logical model's entities, attributes, unique identifiers, and relationships map to the physical model's _________________.",
    "correct_options": ["Tables, columns, primary keys, and foreign keys"]
  },
  {
    "question": "In a relational database, a table is referred to as ..",
    "correct_options": ["A basic storage structure"]
  },
  {
    "question": "Data models are drawn to show users the actual Data that their new system will contain; only Data listed on the Diagram can be entered into the Database. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following statements about entity relationship diagrams (ERD) is true?",
    "correct_options": [
      "Used to communicate the logical structure of the database to users."
    ]
  },
  {
    "question": "In a relationship , _________ are used to help describe the meaning of the connection between the entities.",
    "correct_options": ["descriptions"]
  },
  {
    "question": "_____________ are converted to rows in the physical design.",
    "correct_options": ["attributes"]
  },
  {
    "question": "Business rules are important to data modelers. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "A table is in 3NF if it has met all database requirements for both 1NF and 2NF and all transitive dependencies are eliminated.",
    "correct_options": ["True"]
  },
  {
    "question": "A _________ on a relationship line indicates the Relationship as Non-Tranferable.",
    "correct_options": ["Circle"]
  },
  {
    "question": "Converting a Relational model to a Logical model is called reverse engineering.",
    "correct_options": ["False"]
  },
  {
    "question": "Top-Down Modeling is the approach taken for designing a new database.",
    "correct_options": ["True"]
  },
  {
    "question": "When creating a database based on extracting metadata from an existing database or using the DDL code obtained from an implementation of an existing database, which data modeling approach would you choose?",
    "correct_options": ["Bottom-Up Modeling"]
  },
  {
    "question": "A ______________ in Oracle SQL Developer Data Modeler is a set of accepted terms that can be used in the design.",
    "correct_options": ["glossary"]
  },
  {
    "question": "The glossary can be used as the naming standard for your Logical Model.",
    "correct_options": ["True"]
  },
  {
    "question": "You can define naming standards in Oracle SQL Developer Data Modeler using _______________.",
    "correct_options": [
      "All of the above can be used to define naming standards in Oracle SQL Data Modeler."
    ]
  },
  {
    "question": "Each attribute in an entity maps to a _________ in a table.",
    "correct_options": ["column"]
  },
  {
    "question": "The Oracle SQL Data Modeler enables you to do all of the following except:",
    "correct_options": ["Store application data"]
  },
  {
    "question": "In Oracle SQL Data Modeler, the attribute that you assign as primary UID is automatically set to a mandatory attribute and will be engineered to a primary key in the relational model.",
    "correct_options": ["True"]
  },
  {
    "question": "When building a model in Oracle SQL Data Modeler you begin in the ________ tab.",
    "correct_options": ["Conceptual"]
  },
  {
    "question": "Which of the following is not true regarding normalization:",
    "correct_options": ["It does not impact the performance of the database."]
  },
  {
    "question": "Which of the following is true about subtypes?",
    "correct_options": [
      "One instance of a supertype may belong to two subtypes."
    ]
  },
  {
    "question": "Modeling historical data can produce a unique identifier that includes dates. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "Primary key constraints are named using the __________________.",
    "correct_options": ["UID suffix"]
  },
  {
    "question": "To use the Oracle SQL Developer Data Modeler to apply naming standards :",
    "correct_options": [
      "Use a .csv file containing table names and abbreviations"
    ]
  },
  {
    "question": "In Oracle SQL Developer Data Modeler you can select how you want to map your subtypes.",
    "correct_options": ["True"]
  },
  {
    "question": "A column or combination of columns in one table that refers to a primary key in the same or another table.",
    "correct_options": ["Foreign Key"]
  },
  {
    "question": "The steps to create a glossary from an existing Logical model are :",
    "correct_options": [
      "Right click Logical model, select Create Glossary from Logical Model"
    ]
  },
  {
    "question": "The steps to convert a Logical model to a Relational model using the Oracle SQL Developer Data Modeler are :",
    "correct_options": [
      "Click the Engineer to Relational Model icon, Select the Logical model, Click Engineer, Accept defaults."
    ]
  },
  {
    "question": "Which of the following cannot be modeled using the Oracle SQL Data Modeler ?",
    "correct_options": ["Entities, attributes, UIDs"]
  },
  {
    "question": "The UPDATE statement modifies the values of a specific row or rows if the _______ clause is specified.",
    "correct_options": ["WHERE"]
  },
  {
    "question": "You can delete a row that contains a primary key that is used as a foreign key in another table.",
    "correct_options": ["False"]
  },
  {
    "question": "A collection of DML statements that form a logical unit of work is called a ______________.",
    "correct_options": ["transaction"]
  },
  {
    "question": "If a table already contains rows when a column is added, the new column is initially null or takes the default value for all the rows. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "Table names and column names must begin with a number and should be 1-30 characters long.",
    "correct_options": ["False"]
  },
  {
    "question": "To create a table you must identify all of the following except :",
    "correct_options": ["Field values"]
  },
  {
    "question": "The Data Definition Language performs all of the following except :",
    "correct_options": ["Insert data into tables"]
  },
  {
    "question": "A primary key must contain a value and the value must be _______.",
    "correct_options": ["unique"]
  },
  {
    "question": "All of the following are stages of SQL Processing except:",
    "correct_options": ["Row Source Generation"]
  },
  {
    "question": "You can logically relate data from multiple tables using ___________.",
    "correct_options": ["foreign keys"]
  },
  {
    "question": "Which software is used to manage reading and manipulating a relational database ?",
    "correct_options": ["DBMS software"]
  },
  {
    "question": "You can upload and save a SQL Script from the _____________ option.",
    "correct_options": ["SQL Scripts"]
  },
  {
    "question": "To see selected records from a table we will need to add a ___________ clause to the query.",
    "correct_options": ["WHERE"]
  },
  {
    "question": "Oracle Application Express is an application platform used to share and learn _____ and __________.",
    "correct_options": ["SQL, PL/SQL"]
  },
  {
    "question": "You can use Application Express (APEX) for ...",
    "correct_options": ["APEX can be used for both of the above functions"]
  },
  {
    "question": "The ORDER BY clause must be placed before the WHERE clause in a SQL statement.",
    "correct_options": ["True"]
  },
  {
    "question": "Which statements are not true? (Choose 2)",
    "correct_options": [
      "You cannot use a column alias in the ORDER BY clause.",
      "You cannot sort query results by more than one column."
    ]
  },
  {
    "question": "An automatic commit occurs when _________ . (Choose 2)",
    "correct_options": [
      "A DDL statement is executed.",
      "A DML statement is executed."
    ]
  },
  {
    "question": "The Oracle server ensures data consistency based on transactions.",
    "correct_options": ["True"]
  },
  {
    "question": "Which two statements are correct?",
    "correct_options": [
      "Keywords cannot be abbreviated or split across lines.",
      "Keywords can be abbreviated or split across lines."
    ]
  },
  {
    "question": "The DESCRIBE command describes the results of a query.",
    "correct_options": ["False"]
  },
  {
    "question": "You can display all columns of data in a table by following the SELECT keyword with an asterisk (*).",
    "correct_options": ["True"]
  },
  {
    "question": "You can display selected columns of a table by listing them in the __________ clause.",
    "correct_options": ["SELECT"]
  },
  {
    "question": "Will the following statement execute successfully (True or False)? SELECT e.employee_id, e.last_name, e.department_id, d.department_id, d.location_id FROM employees e JOIN departments d ON (e.department_id = d.department_id);",
    "correct_options": ["True"]
  },
  {
    "question": "We must use the ON clause to join three tables.",
    "correct_options": ["True"]
  },
  {
    "question": "The __________ clause can be used to match columns with the same name, but different data types.",
    "correct_options": ["USING"]
  },
  {
    "question": "Which of the following is the wildcard used for any number of characters in SQL?",
    "correct_options": ["%"]
  },
  {
    "question": "According to the rules of precedence which operator will be evaluated first?",
    "correct_options": ["Both are on the same level of precedence."]
  },
  {
    "question": "In Oracle SQL Data Modeler, the attribute that you assign as the primary UID is automatically set to a mandatory attribute and will be engineered to a primary key in the relational model.",
    "correct_options": ["True"]
  },
  {
    "question": "When building a model in Oracle SQL Data Modeler, you begin in the ________ tab.",
    "correct_options": ["Relational"]
  },
  {
    "question": "The steps to convert a Relational model to a Logical model using the Oracle SQL Developer Data Modeler are :",
    "correct_options": [
      "Select the Relational model, Accept defaults, Click the Engineer to Logical Model icon, Click Engineer"
    ]
  },
  {
    "question": "When mapping subtypes to tables, we can ________",
    "correct_options": ["Either one or multiple tables are valid options."]
  },
  {
    "question": "An Entity Relationship model does not highlight the physical and database constraints. It is essential to transform the ER model into a relational model which can serve as the basis for defining the physical implementation of the database.",
    "correct_options": ["True"]
  },
  {
    "question": "Which constraint specifies that the column (or combination of columns) must contain a unique value AND IS NOT NULL for all rows?",
    "correct_options": ["UNIQUE KEY"]
  },
  {
    "question": "Columns without the NOT NULL constraint can contain null values by default.",
    "correct_options": ["True"]
  },
  {
    "question": "What does the following statement do:  ALTER TABLE DEPT_TEST  ADD CONSTRAINT unq_dept_det UNIQUE (DEPT_ID, DEPARTMENT_NAME) ;",
    "correct_options": [
      "It alters the DEPT_TEST table to add a composite unique key comprising of the DEPT_ID and DEPARTMENT_NAME."
    ]
  },
  {
    "question": "You use the __________ option to mark one or more columns as unused.",
    "correct_options": ["SET UNUSED"]
  },
  {
    "question": "Which operator is used to display rows based on an ordered range of values?",
    "correct_options": ["BETWEEN"]
  },
  {
    "question": "The ______ operator requires either of the component conditions to be true.",
    "correct_options": ["OR"]
  },
  {
    "question": "According to the rules of precedence, which operator will be evaluated first?",
    "correct_options": ["Both are on the same level of precedence."]
  },
  {
    "question": "You can override the default order by using parentheses around the expressions that you want to calculate first.",
    "correct_options": ["True"]
  },
  {
    "question": "To see selected records from a table, we will need to add a ___________ clause to the query.",
    "correct_options": ["WHERE"]
  },
  {
    "question": "In the SQL Commands option of APEX, you can run more than one SQL command at a time.",
    "correct_options": ["True"]
  },
  {
    "question": "In the SQL Workshop/SQL Commands ___________ tab, you can view and retrieve previously run queries.",
    "correct_options": ["History"]
  },
  {
    "question": "If an arithmetic expression contains more than one operator, __________ are evaluated first.",
    "correct_options": ["exponentiation"]
  },
  {
    "question": "Null is the same as zero or a blank space. True or False?",
    "correct_options": ["False"]
  },
  {
    "question": "Selecting specific columns from a table to be displayed in a query is called _____________.",
    "correct_options": ["projection"]
  },
  {
    "question": "A literal can be all of the following except :",
    "correct_options": ["a calculation"]
  },
  {
    "question": "You can create a marker in the current transaction by using the SAVEPOINT statement.",
    "correct_options": ["True"]
  },
  {
    "question": "With the __________ and ROLLBACK statements, you have control over making changes to the data permanent",
    "correct_options": ["COMMIT"]
  },
  {
    "question": "Which of the following statements is an example of a SELF JOIN?",
    "correct_options": [
      "SELECT worker.last_name emp, manager.last_name mgr FROM employees worker JOIN employees manager ON (worker.manager_id = manager.employee_id);"
    ]
  },
  {
    "question": "Why will the following statement result in an error? SELECT l.city, d.department_name FROM locations l JOIN departments d USING (location_id) WHERE d.location_id = 1400;",
    "correct_options": [
      "The field in the USING clause cannot have a qualifier."
    ]
  },
  {
    "question": "The __________ JOIN clause produces the cross-product of two tables.",
    "correct_options": ["CROSS"]
  },
  {
    "question": "What type of join is the following statement? SELECT e.EMPLOYEE_ID, e.LAST_NAME, d.DEPARTMENT_ID, d.DEPARTMENT_NAME, d.LOCATION_ID FROM EMPLOYEES e, DEPARTMENTS d;",
    "correct_options": ["CROSS JOIN"]
  },
  {
    "question": "A foreign key value must match an existing primary key value; otherwise, it must be null.",
    "correct_options": ["True"]
  },
  {
    "question": "The stages of SQL processing are Parsing, Optimization, Row Source Generation, and ____________ .",
    "correct_options": ["Execution"]
  },
  {
    "question": "Which software is used to manage reading and manipulating a relational database?",
    "correct_options": ["DBMS software"]
  },
  {
    "question": "The type of SQL Command used to define database structures is :",
    "correct_options": ["DDL"]
  },
  {
    "question": "Which is the correct order of execution for statements in a SELECT query ?",
    "correct_options": ["FROM, WHERE, SELECT, ORDER BY"]
  },
  {
    "question": "Which SQL keyword is used to do ranking in top-n-analysis",
    "correct_options": ["ROWNUM"]
  },
  {
    "question": "In a SELECT statement, the ________ clause can be used to sort the rows.",
    "correct_options": ["ORDER BY"]
  },
  {
    "question": "___________________ is used to add, modify and delete data.",
    "correct_options": ["Data Manipulation Language"]
  },
  {
    "question": "The command that always removes all rows from a table, leaving the table empty and the table structure intact is ...",
    "correct_options": ["TRUNCATE"]
  },
  {
    "question": "It is not mandatory to specify the column list in the INSERT statement. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "Data Manipulation Language includes all of the following except :",
    "correct_options": ["COMMIT"]
  },
  {
    "question": "SQL *Plus is being used in the Oracle Academy courses to run SQL code. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "When mapping a many to many relationship it must first be resolved using _____________.",
    "correct_options": ["An intermediary entity"]
  },
  {
    "question": "________ Engineering is the process of transforming a Logical Data Model to a Relational Model.",
    "correct_options": ["Forward"]
  },
  {
    "question": "Constraints should be given meaningful names to make them easier to reference.",
    "correct_options": ["True"]
  },
  {
    "question": "When mapping subtypes to tables we can ________",
    "correct_options": ["Either one or multiple tables are valid options."]
  },
  {
    "question": "To define naming templates in Oracle SQL Data Modeler:",
    "correct_options": ["Right click the name of the design in object browser"]
  },
  {
    "question": "Literals can be used within a SELECT statement .",
    "correct_options": ["True"]
  },
  {
    "question": "Which column alias will cause an error?",
    "correct_options": ["SELECT last_name \"Last Name\" FROM employees;"]
  },
  {
    "question": "To eliminate duplicate rows in the result, include the _________ keyword in the SELECT clause.",
    "correct_options": ["DISTINCT"]
  },
  {
    "question": "The following statement will execute successfully (true or false): SELECT employee_id, last_name, salary*12 annsal FROM employees ORDER BY annsal ;",
    "correct_options": ["True"]
  },
  {
    "question": "A join between two tables that returns the results of an INNER join as well as the results of a left and right join is a ______________ join.",
    "correct_options": ["FULL OUTER"]
  },
  {
    "question": "Will the following statement execute successfully (True or False)? SELECT employee_id, city, department_name FROM employees e JOIN departments d ON d.department_id = e.department_id JOIN locations l ON d.location_id = l.location_id;",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following statements is syntactically correct?",
    "correct_options": ["Both statements are syntactically correct."]
  },
  { "question": "A row is called a record.", "correct_options": ["False"] },
  {
    "question": "Which of the following statements is true regarding Implementation-Free logical models?",
    "correct_options": [
      "The model stays the same regardless of the DBMS or operating system used."
    ]
  },
  {
    "question": "An ERD created using ERDish is a __________ representation of entities and their relationships to each other.",
    "correct_options": ["graphical"]
  },
  {
    "question": "Primary UIDs are:",
    "correct_options": [
      "Useful as an alternative means of identifying instances of an entity, independent of their datatype"
    ]
  },
  {
    "question": "A table must have a primary key. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "ERDish includes the following except:",
    "correct_options": ["Data Values."]
  },
  {
    "question": "Entity Boxes are drawn on an ERD using what type of shape?",
    "correct_options": ["Rectangles"]
  },
  {
    "question": "Entities are usually _____________.",
    "correct_options": ["Nouns"]
  },
  {
    "question": "Matrix Diagrams are used to verify that all ____________ have been identified for an ERD.",
    "correct_options": ["entities"]
  },
  {
    "question": "A _________ on a relationship line indicates the Relationship as Non-Transferable.",
    "correct_options": ["Diamond"]
  },
  {
    "question": "Arcs are used to visually represent _________ between two or more relationships in an ERD.",
    "correct_options": ["Exclusivity"]
  },
  {
    "question": "Sources of business rules include all of the following except:",
    "correct_options": ["Word of mouth"]
  },
  {
    "question": "Normalizing an Entity to 1st Normal Form is done by removing any attributes that contain multiple values. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "An entity name is converted to a table name by making it plural.",
    "correct_options": ["True"]
  },
  {
    "question": "All relationships participating in an arc must be mandatory. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "Transferable relationships can only be mandatory, not optional. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "When mapping a barred relationship, a primary key and foreign key can be the same field.",
    "correct_options": ["True"]
  },
  {
    "question": "The UIDs for a set of hierarchical entities can be propagated through multiple ________ relationships.",
    "correct_options": ["recursive"]
  },
  {
    "question": "The transformation from an ER diagram to a physical design involves changing terminology. Primary Unique Identifiers in the ER diagram become __________ and relationships become ____________.",
    "correct_options": ["Unique Keys, Primary keys"]
  },
  {
    "question": "_______ Engineering is the process of creating a conceptual or logical model by extracting the information from an existing data source.",
    "correct_options": ["Reverse"]
  },
  {
    "question": "A Relational model is closer to the implementation solution, facilitates discussion and forms the basis for the physical database design.",
    "correct_options": ["True"]
  },
  {
    "question": "A ___________ model is the blueprint to the actual database implementation and can be used as the basis for implementing any type of Database Management System (DBMS).",
    "correct_options": ["Logical"]
  },
  {
    "question": "When you _______ a table, the database loses all the data in the table.",
    "correct_options": ["DROP"]
  },
  {
    "question": "Once you have created a table, you can use the ________________ command to confirm that it was created. (Choose 2)",
    "correct_options": ["DESCRIBE", "SELECT"]
  },
  {
    "question": "You can name a constraint or the Oracle server generates a name by using the SYS_Cn format.",
    "correct_options": ["True"]
  },
  {
    "question": "Any column that is not listed explicitly obtains a null value in the new row unless we have _________ values for the missing columns that are used.",
    "correct_options": ["DEFAULT"]
  },
  {
    "question": "The TRUNCATE statement is a data definition language (DDL) statement and generates no rollback information.",
    "correct_options": ["True"]
  },
  {
    "question": "In a basic query, following the word FROM comes the fields to be displayed.",
    "correct_options": ["True"]
  },
  {
    "question": "To see all the fields and records in the employees table you can run the following query :",
    "correct_options": ["SELECT * FROM employees;"]
  },
  {
    "question": "In APEX SQL Workshop and Object Browser options you can view table layouts.",
    "correct_options": ["True"]
  },
  {
    "question": "A __________ can be found at the intersection of a row and column and contains one value.",
    "correct_options": ["field"]
  },
  {
    "question": "Functions of SQL are:",
    "correct_options": ["Both of the above options are functions of SQL"]
  },
  {
    "question": "Relational Databases store data in a two-dimensional matrix known as a _________.",
    "correct_options": ["table"]
  },
  {
    "question": "The stages of SQL processing are Parsing, Optimization, Row Source Generation and _____________ .",
    "correct_options": ["Execution"]
  },
  {
    "question": "A foreign key value must match an existing primary key value otherwise, it must be null.",
    "correct_options": ["True"]
  },
  {
    "question": "The _________ clause in a query comes immediately after the SELECT and FROM.",
    "correct_options": ["WHERE"]
  },
  {
    "question": "In the SQL Workshop/SQL Commands ___________ tab you can view and retrieve previously run queries.",
    "correct_options": ["History"]
  },
  {
    "question": "Constraints cannot be added to a table after its creation.",
    "correct_options": ["True"]
  },
  {
    "question": "When altering a table, you can decrease the width of a column if ...(Choose 3)",
    "correct_options": [
      "The table has no rows",
      "The column contains numeric values",
      "The column contains only null values"
    ]
  },
  {
    "question": "DDL means :",
    "correct_options": ["Data Definition Language"]
  },
  {
    "question": "Which column alias is invalid?",
    "correct_options": [
      "First Name",
      "First_Name",
      "\"FIRST NAME\"",
      "\"First Name\""
    ]
  },
  {
    "question": "What is the result?\n\npublic static void main(String[] args) {\n  for (;;) {\n    System.out.println(\"Welcome to Java\");\n  }\n}",
    "correct_options": [
      "Program prints \"Welcome to Java\" an infinite number of times."
    ]
  },
  {
    "question": "All overloaded methods share the same name.",
    "correct_options": ["True"]
  },
  {
    "question": "Given the method: void add(double a, double b) Which method signature would not overload this method?",
    "correct_options": ["void add(String a, String b)"]
  },
  {
    "question": "How would you complete this code so that one add method calls the other add method?\n\npublic int add(int a, int b, int c) {\n  return(a+b+c);\n}\npublic int add(int a, int b){\n  //Complete this line.\n}",
    "correct_options": ["return add(a, b, c);"]
  },
  {
    "question": "Access and visibility of a class should be limited as much as possible.",
    "correct_options": ["True"]
  },
  {
    "question": "To make fields directly accessible to all other classes, the class fields must be marked public.",
    "correct_options": ["False"]
  },
  {
    "question": "The fields and methods of the Math class cannot be directly accessed as they are static.",
    "correct_options": ["True"]
  },
  {
    "question": "You never need to instantiate a Math object.",
    "correct_options": ["True"]
  },
  {
    "question": "Which two statements are true about objects of the same class?",
    "correct_options": [
      "Each new instance of an object will have a different location in memory.",
      "All objects of the same class have the same methods."
    ]
  },
  {
    "question": "Java automatically clears the memory once occupied by an object using garbage collection.",
    "correct_options": ["True"]
  },
  {
    "question": "Objects are accessed using reference variables.",
    "correct_options": ["True"]
  },
  {
    "question": "What will happen when you try to access an object reference with a null value?",
    "correct_options": ["NullPointerException."]
  },
  {
    "question": "If fields aren't initialized, they take on a default value.",
    "correct_options": ["True"]
  },
  {
    "question": "How could you write the Employee constructor so that its parameters are named the same as the fields they're initializing?\n\npublic class Employee{\n  private String name;\n  private double salary;\n  public Employee(String name, double salary){\n    //initialize name\n    //initialize salary\n  }\n}",
    "correct_options": [
      "public Employee(String name, double salary){\n  this.name = name;\n  this.salary = salary;\n}"
    ]
  },
  {
    "question": "Which has a default value of null?",
    "correct_options": ["String"]
  },
  {
    "question": "An object reference with a null value points to an empty location in memory.",
    "correct_options": ["False"]
  },
  {
    "question": "Which two statements are true about the main method?",
    "correct_options": [
      "The main method should be as simple as possible.",
      "The main method is commonly used to instantiate objects."
    ]
  },
  {
    "question": "How can you retrieve a value from a method?",
    "correct_options": [
      "Use a return statement and define the method's return type as non-void"
    ]
  },
  {
    "question": "Variables created within a method can be accessed outside that method.",
    "correct_options": ["False"]
  },
  {
    "question": "You can access elements in an ArrayList by their index.",
    "correct_options": ["True"]
  },
  {
    "question": "Which two are limitations of an array of primitives (ie: int[] x)?",
    "correct_options": [
      "You cannot overwrite the contents of an array once initialized.",
      "The size of the array is fixed during array creation and cannot grow once initialized."
    ]
  },
  {
    "question": "How could you declare an ArrayList so that it can store true or false values?",
    "correct_options": ["ArrayList<Boolean> arrList = new ArrayList<>();"]
  },
  {
    "question": "The size of an ArrayList can grow as needed.",
    "correct_options": ["True"]
  },
  {
    "question": "What are two disadvantages of adding print statements for debugging?",
    "correct_options": [
      "Print statements cannot print the values of variables.",
      "Too many print statements lead to information overload."
    ]
  },
  {
    "question": "Which is not a compilation error?",
    "correct_options": ["int x=2"]
  },
  {
    "question": "Identify where there is a potential bug in this code:\n\nint radiusOfCircle = 10;\nint areaOfCircle = Math.PI * radiusOfCircle * radiusOfCircle;",
    "correct_options": ["A semi-colon is missing."]
  },
  {
    "question": "What are two advantages of adding print statements for debugging?",
    "correct_options": [
      "You can identify which methods have been called.",
      "You can identify the order in which methods have been called."
    ]
  },
  {
    "question": "What happens when you don't handle an exception?",
    "correct_options": ["The execution of the program is terminated abruptly."]
  },
  {
    "question": "What is the danger of catching a generic Exception type as shown below?\n\nint[] array = {10, 20, 30};\nint b = 0;\ntry{\n  System.out.println(\"1\");\n  int c = (array[3] / b);\n  System.out.println(\"2\");\n}\ncatch(Exception ex){\n  System.out.println(ex.toString());\n}",
    "correct_options": [
      "The details of the Exception object ex are too general to be useful."
    ]
  },
  {
    "question": "The Java compiler does not check for an ArrayIndexOutOfBoundsException during the compilation of a program containing arrays.",
    "correct_options": ["False"]
  },
  {
    "question": "An array allows you to create a single identifier that can be used to organize many items of the same data type.",
    "correct_options": ["True"]
  },
  {
    "question": "Arrays are like variables which must be declared prior to use.",
    "correct_options": ["True"]
  },
  {
    "question": "Given: int x[]; What is the value of x?",
    "correct_options": ["null"]
  },
  {
    "question": "How would you set the title of the Stage primaryStage?",
    "correct_options": ["primaryStage.setTitle(\"New Title!\");"]
  },
  {
    "question": "JavaFX is used to create GUI applications.",
    "correct_options": ["True"]
  },
  { "question": "Which is not a JavaFX Node?", "correct_options": ["Object"] },
  {
    "question": "Which method is used to for mouse click events?",
    "correct_options": ["setOnMouseClicked()"]
  },
  {
    "question": "When you write code for MouseEvents, you are telling a Node to listen for a particular event.",
    "correct_options": ["True"]
  },
  {
    "question": "Lambda Expressions provide much more effective and cleaner syntax for working with GUI applications and sorting lists.",
    "correct_options": ["True"]
  },
  {
    "question": "Which is the correct syntax to instantiate a JavaFX Rectangle?",
    "correct_options": ["Rectangle rect = new Rectangle(20, 20, 100, 200);"]
  },
  {
    "question": "The JavaFX API contains descriptions of Java FX features.",
    "correct_options": ["True"]
  },
  {
    "question": "The Java compiler automatically promotes byte, short, and char data type values to int data type.",
    "correct_options": ["True"]
  },
  {
    "question": "You write a statement that assigns a value to a String variable as shown below.String input = \"This is Java Program\"; This way of assigning values to variables is known as hard-coding.",
    "correct_options": ["False"]
  },
  {
    "question": "How many arguments does the following method accept?public void simpleInterest(double principal, int noofYears, double interestRate){  System.out.println(\"The interest rate is \" +interestRate );}",
    "correct_options": ["3"]
  },
  {
    "question": "In the code example below, identify any methods:\n\npublic class Employee {\n  public String name = \" Duke\";\n  public int empId = 12105;\n  public float salary;\n  public void displaySalary(){\n    System.out.println(\"Employee Salary: \"+salary);\n  }\n}",
    "correct_options": ["displaySalary()"]
  },
  {
    "question": "These two code fragments perform the same task.\n\n// Fragment 1\nString inputString = JOptionPane.showInputDialog(\"??\");\nint input = Integer.parseInt(inputString);\ninput++;\n\n// Fragment 2\nint input = Integer.parseInt(JOptionPane.showInputDialog(\"??\")) + 1;",
    "correct_options": ["True"]
  },
  {
    "question": "Identify the variable declared in the given code.\n\npublic class Welcome {\n   public static void main(String args[]) {\n    int a = 2;\n    System.out.println(\"a is \" + a);\n   }\n}",
    "correct_options": ["a"]
  },
  {
    "question": "What is the output?\n\npublic static void main(String args[]) {\n    int x = 100;\n    int y = x;\n    y++;\n    System.out.println(\"Value of x is \" + x);\n    System.out.println(\"Value of y is \" + y);\n}",
    "correct_options": ["Value of x is 100 Value of y is 101"]
  },
  {
    "question": "You need to generate random integer values in the range 2 through 10. This code fragment will produce the desired result.\n\nRandom r = new Random();\n r.nextInt(9) + 2;",
    "correct_options": ["True"]
  },
  {
    "question": "What is the output?\n\npublic static void main(String args[]) {\n    String greeting = \"Java World!\";\n    String w = greeting.substring(7, 11);\n    System.out.println(w);\n}",
    "correct_options": ["orld!"]
  },
  {
    "question": "What is the output?\n\npublic static void main(String args[]) {\n    char ch ='c';\n    switch(ch) {\n      case 'a':\n      case 'e':\n      case 'i':\n      case 'o':\n      case 'u':\n        System.out.println(\"Vowels\");\n        break;\n      default:\n        System.out.println(\"Consonants\");\n    }\n}",
    "correct_options": ["Consonants"]
  },
  {
    "question": "In the OR (||) test, if the first expression on the left-hand side is true then there is no need to evaluate the second statement.",
    "correct_options": ["True"]
  },
  {
    "question": "A customer is eligible for a discount based on certain criteria. Under what conditions does \"You qualify for a discount\" print? (Hint: There may be more than one correct answer)\n\nint purchase;\nint rewardPoints;\nif (purchase >= 2000 || rewardPoints >= 4000) {\n   System.out.println(\"You qualify for discount\");\n}",
    "correct_options": [
      "When purchase is 2000 regardless of the value of rewardPoints",
      "When rewardPoints is more than 2000 or purchase is greater than 1000"
    ]
  },
  {
    "question": "What is the output? public class Person {    public static void main(String args[]) {   int age = 20;   System.out.println(\"Value of age: \" +age);   age = 5 + 3;   System.out.println(\"Value of age: \" +age);   age = age + 1;   age++;   System.out.println(\"Value of age: \" +age);   } }",
    "correct_options": ["Value of age: 20 Value of age: 8 Value of age: 9"]
  },
  {
    "question": "Identify the names of two variables used in the given code. public class Variables { public static void main(String args[]) { String strVal = \"Hello\"; int intVal = 0; System.out.println(\"Integer: \" +intVal) } }",
    "correct_options": ["strVal", "intVal"]
  },
  {
    "question": "What is the output? public class Welcome { public static void main(String args[]) { System.out.println(\"This is my first program\"); int a = 2; System.out.println(\"a is \" + a); }}",
    "correct_options": [
      "This is my first program",
      "This is my first program a is 2"
    ]
  },
  {
    "question": "Automatic promotion from a smaller data type to a larger data type is not allowed in Java.",
    "correct_options": ["False"]
  },
  {
    "question": "The import statement consists of two parts.  import package.className; One is the package name and the other is the classname.",
    "correct_options": ["True"]
  },
  {
    "question": "An employee is eligible for a bonus based on certain criteria. Under what conditions does \"Eligible for a bonus\" print?int rating;int experience;if (rating > 1 && experience == 5) {   System.out.println (\"Eligible for a bonus\");}",
    "correct_options": ["5 experience and 1 rating"]
  },
  {
    "question": "What is the result? public static void main(String[] args) {    int point = 10;    String s = (point == 1 ? \"point\" : \"points\");    System.out.println(\"I scored \" +point +\" \" +s );  }",
    "correct_options": ["I scored 10 points"]
  },
  {
    "question": "In the given syntax of for loop, which part represents the header section?  for (initialization; condition; update) {  // Code statement(s) }",
    "correct_options": ["for (initialization; condition; update)"]
  },
  {
    "question": "What is the result? public static void main(String[] args) {      for (;;) {       System.out.println(\"Welcome to Java\");     }  }",
    "correct_options": [
      "Program prints \"Welcome to Java\" an infinite number of times."
    ]
  },
  {
    "question": "What is the output?\n\npublic static void main(String[] args) {\n     int num = 1;\n     while (num >= 200){\n       System.out.print(num + \" \");\n       num = num * 5;\n     }\n  }",
    "correct_options": ["No output."]
  },
  {
    "question": "What is the result?\n\npublic static void main(String[] args) {\n      for (;;) {\n       System.out.println(\"Welcome to Java\");\n     }\n  }",
    "correct_options": [
      "Program prints \"Welcome to Java\" an infinite number of times."
    ]
  },
  {
    "question": "Which two operators cannot be used as the conditional expression in a for loop?",
    "correct_options": ["!>", "!<"]
  },
  {
    "question": "What is the result?  public static void main(String[] args) {   for (int var1 = 0; var1 < 2; var1++) {    for (int var2 = 0; var2 < 2; var2++) {     if (var2 == 2) {      continue;     }    System.out.println(\"var1:\" + var1 + \", var2:\" + var2);    }   } }",
    "correct_options": [
      "var1: 0, var2: 0",
      "var1: 0, var2: 1",
      "var1: 1, var2: 0",
      "var1: 1, var2: 1"
    ]
  },
  {
    "question": "What is the output? public static void main(String[] args) {     int num = 1;     while (num >= 200){       System.out.print(num + \"\" \"\");       num = num * 5;     }  }",
    "correct_options": ["No output."]
  },
  {
    "question": "When you write your own constructor, the default constructor is no longer available.",
    "correct_options": ["True"]
  },
  {
    "question": "A constructor is a special method which is commonly used to set the initial values of an object's fields.",
    "correct_options": ["True"]
  },
  {
    "question": "How would you instantiate the Employee class from a main method located in another class? public class Employee{ private String name; private double salary; public Employee(String n, double s){ name = n; salary = s; } }",
    "correct_options": ["Employee emp1 = new Employee(\"Syam\", 50000);"]
  },
  {
    "question": "How could you write the Employee constructor so that its parameters are named the same as the fields they're initializing? public class Employee{ private String name; private double salary; public Employee(String name, double salary){ //initialize name //initialize salary } }",
    "correct_options": [
      "public Employee(String name, double salary){ this.name = name; this.salary = salary; }"
    ]
  },
  {
    "question": "Java developers don't need to know an object's location in memory.",
    "correct_options": ["True"]
  },
  {
    "question": "Which type of memory is allocated for the code below? int x = 1; int y = 2; x=y;",
    "correct_options": ["Stack memory"]
  },
  {
    "question": "What is the output of the following code? String s1 = \"Hello\"; String s2 = \"Welcome!\"; s1 = s2; System.out.println(\"s1: \" +s1); System.out.println(\"s2: \" +s2);",
    "correct_options": ["s1: Welcome! s2: Welcome!"]
  },
  {
    "question": "Objects are stored within the heap memory.",
    "correct_options": ["True"]
  },
  {
    "question": "Which two statements are NOT true about constructors?",
    "correct_options": [
      "A constructor method may return a value.",
      "A constructor method has a void return type."
    ]
  },
  {
    "question": "The structure of a class consists of properties and behaviors.",
    "correct_options": ["True"]
  },
  {
    "question": "You have created an Employee class with all required fields and methods. 10 employees join the company. Should you copy and paste the Employee class for all 10 employees?",
    "correct_options": ["False"]
  },
  {
    "question": "In the following statements, how many employee objects are created? Employee e1 = new Employee(); Employee e2 = new Employee(); Employee e3 = new Employee();",
    "correct_options": ["3"]
  },
  {
    "question": "Static variables of a class can be accessed, even if the class has not been instantiated.",
    "correct_options": ["True"]
  },
  {
    "question": "An object must be instantiated before its non-static fields and methods can be accessed.",
    "correct_options": ["True"]
  },
  {
    "question": "Method overloading can be a useful technique for defining methods with similar functionality or calculations.",
    "correct_options": ["True"]
  },
  {
    "question": "Methods can call other methods in the same class.",
    "correct_options": ["True"]
  },
  {
    "question": "How would you complete this code so that one add method calls the other add method? public int add(int a, int b, int c) { return(a+b+c); } public int add(int a, int b){ //Complete this line. }",
    "correct_options": ["return add(a, b, 0);"]
  },
  {
    "question": "Which two statements are true?",
    "correct_options": [
      "An object can access another object's public constructor.",
      "An object can access another object's public methods."
    ]
  },
  {
    "question": "Which two statements are true about getter methods?",
    "correct_options": [
      "Getters usually accept no arguments.",
      "Getters have a public access modifier."
    ]
  },
  {
    "question": "Setters are void return type methods.",
    "correct_options": ["True"]
  },
  {
    "question": "Which three can vary in overloaded methods?",
    "correct_options": [
      "Types of parameters.",
      "Order of parameters.",
      "Number of parameters."
    ]
  },
  {
    "question": "Which two statements are true about private access modifier?",
    "correct_options": [
      "Class fields marked private are most secure.",
      "Class fields are typically marked private."
    ]
  },
  {
    "question": "An object reference directs you from one object to another.",
    "correct_options": ["True"]
  },
  {
    "question": "Which two are access modifiers?",
    "correct_options": ["private", "public"]
  },
  {
    "question": "If you need to make a particular variable belong to a class rather than any individual instance, what type of variable should you use?",
    "correct_options": ["A static variable."]
  },
  {
    "question": "If the try block succeeds then no exception has occurred.",
    "correct_options": ["True"]
  },
  {
    "question": "What is the danger of catching a generic Exception type as shown below? int[] array = {10, 20, 30}; int b = 0; try{ System.out.println(\"1\"); int c = (array[3] / b); System.out.println(\"2\"); } catch(Exception ex){ System.out.println(ex.toString()); }",
    "correct_options": [
      "The details of the Exception object ex are too general to be useful."
    ]
  },
  {
    "question": "Each catch block is an exception handler that handles the type of exception indicated by its argument.",
    "correct_options": ["True"]
  },
  {
    "question": "Which is not used to traverse an ArrayList?",
    "correct_options": ["for-each loop"]
  },
  {
    "question": "Identify where there is a potential bug in this code: int radiusOfCircle = 10; int areaOfCircle = Math.PI * radiusOfCircle * radiusOfCircle;",
    "correct_options": ["A datatype is incorrect."]
  },
  {
    "question": "Using a Java debugger, you can set breakpoints and trace through a program one line at a time.",
    "correct_options": ["True"]
  },
  {
    "question": "Testing and debugging are important activities in software development.",
    "correct_options": ["True"]
  },
  {
    "question": "Which two are valid array declarations?",
    "correct_options": ["int[] size;", "int size[];"]
  },
  {
    "question": "Which loop type is specially designed to traverse an array?",
    "correct_options": ["for loop"]
  },
  {
    "question": "You can access the size of any array by using the array's \"length\" property.",
    "correct_options": ["True"]
  },
  {
    "question": "Which method helps to set the width of a rectangle's outline?",
    "correct_options": ["setStrokeWidth(double d)"]
  },
  {
    "question": "How would you create a custom color that is pure cyan (equal parts green and blue)?",
    "correct_options": ["Color customColor = Color.rgb(0, 255, 255);"]
  },
  {
    "question": "Which color is not directly used when creating custom Color.rgb()?",
    "correct_options": ["Yellow"]
  },
  {
    "question": "JavaFX doesn't provide you with UI elements, shapes and text. So you must always create your own graphics.",
    "correct_options": ["False"]
  },
  {
    "question": "An Image is an object that describes the location of a graphics file.",
    "correct_options": ["True"]
  },
  {
    "question": "Which method is used for mouse click events?",
    "correct_options": ["setOnMouseClicked()"]
  },
  {
    "question": "A layout Pane dictates how Nodes must be positioned",
    "correct_options": ["True"]
  },
  {
    "question": "The start() method is the entry point for all JavaFX applications.",
    "correct_options": ["True"]
  },
  {
    "question": "Code within curly braces is called a 'Block of code'",
    "correct_options": ["True"]
  },
  {
    "question": "In the code example below, identify any methods: public class Employee { public String name = ' Duke'; public int empId = 12105; public float salary; public void displaySalary(){ System.out.println('Employee Salary: '+salary); } }",
    "correct_options": ["displaySalary()"]
  },
  {
    "question": "Identify the variable declared in the given code. public class Welcome {   public static main(String args[]) {    int a = 2;    System.out.println(\"a is \" + a);   } }",
    "correct_options": ["a"]
  },
  {
    "question": "Assigning a value to the variable is called 'initialization'.",
    "correct_options": ["True"]
  },
  {
    "question": "What is the output? public class Hello {  public static void main(String args[]) {    String str = \"Hello\";    str = \"World\";   System.out.println(str);  }}",
    "correct_options": ["World"]
  },
  {
    "question": "What is the output? public static void main(String args[]) {    char ch ='c';    switch(ch) {      case 'a':      case 'e':      case 'i':      case 'o':      case 'u':        System.out.println(\"Vowels\");        break;      default:        System.out.println(\"Consonants\");    } }",
    "correct_options": ["Consonants"]
  },
  {
    "question": "What is the output? public static void main(String[] args) {    int age = 43;    if (age == 43){      System.out.print(\"Bob is 43 \");    }    if (age == 50){      System.print(\"Bob is 50 \");     } }",
    "correct_options": ["Bob is 43"]
  },
  {
    "question": "Which is stored within the stack memory?",
    "correct_options": ["Local variables"]
  },
  {
    "question": "A wrapper class encapsulates, or wraps, the primitive types within an object.",
    "correct_options": ["True"]
  },
  {
    "question": "Which exception is thrown when an application attempts to use null when an object is required?",
    "correct_options": ["NullPointerException"]
  },
  {
    "question": "In the given syntax of for loop, which part represents the header section? for (initialization; condition; update) { // Code statement(s) }",
    "correct_options": ["for (initialization; condition; update)"]
  },
  {
    "question": "Which statement is false about infinite loop?",
    "correct_options": [
      "An infinite loop is a code which will execute until the user interrupts the program"
    ]
  },
  {
    "question": "What is the output? int[] arr = new int[2]; for(int i=0; i < arr.length; i++){ System.out.print(\"hai \"); }",
    "correct_options": ["hai hai "]
  },
  {
    "question": "What is the output? int[] array = {10, 20, 30}; int b = 0; try{ System.out.println(\"1\"); int c = (array[3] / b); System.out.println(\"2\"); } catch(ArithmeticException ex){ System.out.println(\"Arithmetic Exception\"); } catch(ArrayIndexOutOfBoundsException ex){ System.out.println(\"Array index out of bounds\"); }",
    "correct_options": ["1 Arithmetic Exception"]
  },
  {
    "question": "Which of the following is not a wrapper class?",
    "correct_options": ["String"]
  },
  {
    "question": "Which is NOT a benefit of ArrayList class?",
    "correct_options": [
      "You can use an ArrayList list to store Java primitive values (like int)."
    ]
  },
  {
    "question": "Which code goes in the try block?",
    "correct_options": ["Any code that is likely to cause an exception."]
  },
  {
    "question": "What is the output? int[] arr = new int[1]; arr[0] = 10; System.out.println(arr[0]);",
    "correct_options": ["10"]
  },
  {
    "question": "What is an array?",
    "correct_options": [
      "An array is an indexed container that holds a set of values of a single type."
    ]
  },
  {
    "question": "What is the starting index of an array?",
    "correct_options": ["0"]
  },
  {
    "question": "What is the result? public static void main(String[] args) { for (;;) { System.out.println(\"Welcome to Java\"); } }",
    "correct_options": [
      "Compilation error as expressions are missing in the for loop."
    ]
  },
  {
    "question": "Which statement is true about the default constructor of a class?",
    "correct_options": [
      "You must write at least one constructor in your class."
    ]
  },
  {
    "question": "Which keyword is used to allocate memory for a newly created object?",
    "correct_options": ["new"]
  },
  {
    "question": "You can write more than one constructor in a class.",
    "correct_options": ["True"]
  },
  {
    "question": "An exception is an error that occurs during the execution of a program at run-time that disrupts the normal flow of the Java program.",
    "correct_options": ["True"]
  },
  {
    "question": "What is the output?int[] arr = new int[5]; for(int i=0; i<arr.length; i++){ arr[i] = i; } for(int i=0; i<arr.length; i++) { System.out.print(arr[i]); }",
    "correct_options": ["01234"]
  },
  {
    "question": "Which two cannot be stored in an ArrayList?",
    "correct_options": ["int", "float"]
  },
  {
    "question": "What is the output? public static void main(String[] args) { int num = 1; while (num >= 200){ System.out.print(num + \" \" \"); num = num * 5; } }",
    "correct_options": ["1 5 25 125"]
  },
  {
    "question": "What is the result?  public static void main(String[] args) { for (int var1 = 0; var1 < 2; var1++) { for (int var2 = 0; var2 < 2; var2++) { if (var2 == 2) { continue; } System.out.println(\"var1:\" + var1 + \", var2:\" + var2); } } }",
    "correct_options": [
      "var1: 0, var2: 0 var1: 0, var2: 1 var1: 1, var2: 0 var1: 1, var2: 1"
    ]
  },
  {
    "question": "Audio can be played by referencing the AudioClip object directly.",
    "correct_options": ["False"]
  },
  {
    "question": "Which type of Root Node allows Nodes to be placed anywhere?",
    "correct_options": ["Group"]
  },
  {
    "question": "JavaFX doesn't provide you with UI elements, shapes, and text. So you must always create your own graphics.",
    "correct_options": ["True"]
  },
  {
    "question": "First, you decide the radius of each circle in the logo. Then using the same radius you draw 5 circles of the same size. All these circles will have properties like radius and color. All circles share behaviors to calculate circumference and area. Can you identify which of the following is an object?",
    "correct_options": ["circle"]
  },
  {
    "question": "Which type of memory is allocated for the code below? int x = 1; int y = 2;  x=y;",
    "correct_options": ["No memory is allocated"]
  },
  {
    "question": "In this statement, identify the type of the variable s. Student s = new Student();",
    "correct_options": ["Student"]
  },
  {
    "question": "You create an Employee object with a String employeeName field. What is the default value for employeeName?",
    "correct_options": ["null"]
  },
  {
    "question": "A constructor is a special method that is commonly used to set the initial values of an object's fields.",
    "correct_options": ["True"]
  },
  {
    "question": "In Java, the this keyword can be used to reference the current object's fields and methods.",
    "correct_options": ["True"]
  },
  {
    "question": "Given the following code, why does your IDE complain that 'non-static variable name cannot be referenced from a static context'? public class Employee{ public static int employeeID; public String name; public static void display(){ System.out.println(employeeID); System.out.println(name); } }",
    "correct_options": [
      "It would be possible to call the display() method and attempt to reference an object's name before any object exists."
    ]
  },
  {
    "question": "Runtime errors can be caught by Java's exception handling mechanism.",
    "correct_options": ["True"]
  },
  {
    "question": "What is the output? int[] array = {10, 20, 30}; int b = 0; try{    System.out.println(\"1\");    int c = (array[3] / b);    System.out.println(\"2\"); }  catch(ArithmeticException ex){    System.out.println(\"Arithmetic Exception\"); }  catch(ArrayIndexOutOfBoundsException ex){    System.out.println(\"Array index out of bounds\"); }",
    "correct_options": ["1 Array index out of bounds"]
  },
  {
    "question": "What is the danger of catching a generic Exception type as shown below? int[] array = {10, 20, 30}; int b = 0; try{    System.out.println(\"1\");    int c = (array[3] / b);    System.out.println(\"2\"); }  catch(Exception ex){    System.out.println(ex.toString()); }",
    "correct_options": [
      "The details of the Exception object ex are too general to be useful."
    ]
  },
  {
    "question": "What is the output? int[] arr = new int[2]; for(int i=0; i < arr.length; i++){    System.out.print(\"hai \"); }",
    "correct_options": ["hai hai "]
  },
  {
    "question": "What is the output?int[] arr = new int[5]; for(int i=0; i<arr.length; i++){     arr[i] = i; } for(int i=0; i<arr.length; i++) {     System.out.print(arr[i]); }",
    "correct_options": ["01234"]
  },
  {
    "question": "Identify where there is a potential bug in this code: int radiusOfCircle = 10;  int areaOfCircle = Math.PI * radiusOfCircle * radiusOfCircle;",
    "correct_options": ["A variable name is misspelled."]
  },
  {
    "question": "How could you write the Employee constructor so that its parameters are named the same as the fields they're initializing? public class Employee{    private String name;    private double salary;    public Employee(String name, double salary){      //initialize name      //initialize salary    } }",
    "correct_options": [
      "public Employee(String name, double salary){    this.name = name;    this.salary = salary; }"
    ]
  },
  {
    "question": "How would you instantiate the Employee class from a main method located in another class? public class Employee{    private String name;    private double salary;    public Employee(String n, double s){      name = n;      salary = s;    } }",
    "correct_options": ["Employee emp1 = new Employee(\"Syam\", 50000);"]
  },
  {
    "question": "How would you complete this code so that one add method calls the other add method? public int add(int a, int b, int c) {   return(a+b+c); } public int add(int a, int b){   //Complete this line. }",
    "correct_options": ["return add(a, b, 0);"]
  },
  {
    "question": "Given the following code, why does your IDE complain that \"non-static variable name cannot be referenced from a static context\"? public class Employee{    public static int employeeID;    public String name;    public static void display(){      System.out.println(employeeID);      System.out.println(name);    } }",
    "correct_options": [
      "It would be possible to call the display() method and attempt to reference an object's name before any object exists."
    ]
  },
  {
    "question": "What is the output? public static void main(String[] args) {     int num = 1;     while (num >= 200){       System.out.print(num + \" \" );       num = num * 5;     }  }",
    "correct_options": ["No output."]
  },
  {
    "question": "First, you decide the radius of each circle in the logo. Then using the same radius, you draw 5 circles of the same size. All these circles will have properties like radius and color. All circles share behaviors to calculate circumference and area. Can you identify which of the following is an object?",
    "correct_options": ["circle"]
  },
  {
    "question": "A for loop is also called a definite loop.",
    "correct_options": ["True"]
  },
  {
    "question": "Loops are used in programs for the repeated execution of one or more statements until a terminating condition is reached.",
    "correct_options": ["True"]
  },
  {
    "question": "Which two statements are true about the while loop?",
    "correct_options": [
      "The statements of a while loop will execute one or more times.",
      "The statement in a while loop will execute zero or more times."
    ]
  },
  {
    "question": "In object-oriented programming, an object comprises of properties and behaviors where properties are represented as fields of the object and behavior is represented as methods.",
    "correct_options": ["True", "False"]
  },
  {
    "question": "Which two statements are true about String concatenation?",
    "correct_options": [
      "Strings can be combined using the '+' operator.",
      "String concatenation can be done with String variables and String Literals."
    ]
  },
  {
    "question": "What is the output? public class Welcome {  public static void main(String args[]) {   System.out.println(\"This is my first program\");   int a = 2;   System.out.println(\"a is \" + a);  }}",
    "correct_options": ["This is my first program", "a is 2"]
  },
  {
    "question": "A customer is eligible for a discount based on certain criteria. Under what conditions does \"You qualify for a discount\" print? (Hint: There may be more than one correct answer) int purchase; int rewardPoints; if (purchase >= 2000 || rewardPoints >= 4000) { System.out.println(\"You qualify for discount\");}",
    "correct_options": [
      "When rewardPoints is more than 2000 or purchase greater than 1000"
    ]
  },
  {
    "question": "Which is a valid syntax to declare and initialize a String variable?",
    "correct_options": ["String x= \"Java\";"]
  },
  {
    "question": "Identify the variable declared in the given code. public class Welcome { public static void main(String args[]) { int a = 2; System.out.println(\"a is \" + a); }}",
    "correct_options": ["int", "a"]
  },
  {
    "question": "Identify the names of two variables used in the given code. public class Variables { public static void main(String args[]) { String strVal = \"Hello\"; int intVal = 0; System.out.println(\"Integer: \" +intVal) }}",
    "correct_options": ["strVal", "intVal"]
  },
  {
    "question": "What is the output? public class Person { public static void main(String args[]) { int age = 20; System.out.println(\"Value of age: \" +age); age = 5 + 3; System.out.println(\"Value of age: \" +age); age = age + 1; age++; System.out.println(\"Value of age: \" +age); }}",
    "correct_options": ["Value of age: 20 Value of age: 8 Value of age: 9"]
  },
  {
    "question": "You write a statement that assigns a value to a String variable as shown below. String input = \"This is Java Program\"; This way of assigning values to variables is known as hard-coding.",
    "correct_options": ["False"]
  },
  {
    "question": "What is the output? public static void main(String args[]) { String greet1 = \"Hello\"; String greet2 = \"World\"; String message2 = greet1 +\" \" +greet2 +\" \" +2016 +\"!\"; System.out.println(message2); }",
    "correct_options": ["Hello World 2016 !"]
  },
  {
    "question": "These two code fragments perform the same task. // Fragment 1 String inputString = JOptionPane.showInputDialog(\"??\"); int input = Integer.parseInt(inputString); input++; // Fragment 2 int input = Integer.parseInt(JOptionPane.showInputDialog(\"??\")) + 1;",
    "correct_options": ["True"]
  },
  {
    "question": "Given the expression: String message = \"Hello World\"; Which is the String Literal?",
    "correct_options": ["Hello World"]
  },
  {
    "question": "How many arguments does the following method accept? public void simpleInterest(double principal, int noofYears, double interestRate){ System.out.println(\"The interest rate is \" +interestRate );}",
    "correct_options": ["3"]
  },
  {
    "question": "Which two statements compile? (Choose all correct answers)",
    "correct_options": ["String name = 'Java';", "String name = \"Java\";"]
  },
  {
    "question": "Which two statements are true about type casting? (Choose all correct answers)",
    "correct_options": [
      "Type casting cannot be performed on equations.",
      "Type casting retains the size of the value or the original data type."
    ]
  },
  {
    "question": "What is the output? public static void main(String args[]) {    String alphaNumeric = \"Java World!\" + 8;    System.out.println(alphaNumeric); }",
    "correct_options": ["rld!"]
  },
  {
    "question": "What is the result? public static void main(String[] args) {  for (int var1 = 0; var1 < 2; var1++) {   for (int var2 = 0; var2 < 2; var2++) {    if (var2 == 2) {     continue;    }   System.out.println(\"var1:\" + var1 + \", var2:\" + var2);   }  }}",
    "correct_options": [
      "var1: 0, var2: 0 var1: 0, var2: 1 var1: 1, var2: 0 var1: 1, var2: 1"
    ]
  },
  {
    "question": "What is the output? public static void main(String[] args) {     int num = 1;     while (num >= 200){       System.out.print(num + \" \");       num = num * 5;     }  }",
    "correct_options": ["No output."]
  },
  {
    "question": "What is the result? public static void main(String[] args) { for (int var1 = 0; var1 < 2; var1++) { for (int var2 = 0; var2 < 2; var2++) { if (var2 == 2) { continue; } System.out.println(\"var1:\" + var1 + \", var2:\" + var2); } } }",
    "correct_options": [
      "var1: 0, var2: 0 var1: 0, var2: 1 var1: 1, var2: 0 var1: 1, var2: 1"
    ]
  },
  {
    "question": "Which of the following would give you an array index out of bounds exception?",
    "correct_options": [
      "Refering to an element of an array that is at an index greater than the length of that array minus one."
    ]
  },
  {
    "question": "The following segment of code initializes a 2 dimensional array of references. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "Which of the following declares a one dimensional array name scores of type int that can hold 14 values?",
    "correct_options": ["int[] scores=new int[14];"]
  },
  {
    "question": "Which of the following statements adds 5 to every element of the one dimensional array prices and then prints it to the screen?",
    "correct_options": [
      "for(int i=0;i<prices.length;i++)  System.out.println(prices[i]+5);"
    ]
  },
  {
    "question": "Which of the following declares and initializes a one dimensional array named words of size 3 so that all entries can be Strings?",
    "correct_options": ["String[] words=new String[3];"]
  },
  {
    "question": "What is the output of the following segment of code?",
    "correct_options": ["987654321"]
  },
  {
    "question": "The following segment of code initializes a 2 dimensional array of primitive data types. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "What is the output of the following segment of code if the command line arguments are \"apples oranges pears\"?",
    "correct_options": ["3"]
  },
  {
    "question": "Which of the following declares and initializes a two dimensional array that can hold 6 Object reference types?",
    "correct_options": ["Object[][] array=new Object[2][3];"]
  },
  {
    "question": "The following array declaration is valid. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "What does the interpreter look for when an exception is thrown?",
    "correct_options": ["A catch statement in the code."]
  },
  {
    "question": "Suppose you misspell a method name when you call it in your program. Which of the following explains why this gives you an exception?",
    "correct_options": [
      "Because the interpreter does not recognize this method since it was never initialized, the correct spelling of the method was initialized."
    ]
  },
  {
    "question": "If an exception has already been thrown, what will the interpreter read next in the program?",
    "correct_options": [
      "The next line of the program even if it is not the catch block of code."
    ]
  },
  {
    "question": "What is the output of the following segment of code if the command line arguments are \"a b c d e f g\"?",
    "correct_options": ["This code doesn't compile."]
  },
  {
    "question": "The following creates a reference in memory named q that can refer to six different integers via an index. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following statements print every element of the one dimensional array prices to the screen?",
    "correct_options": [
      "for(int i=0; i < prices.length; i++){System.out.println(prices[i]);}"
    ]
  },
  {
    "question": "The following creates a reference in memory named z that can refer to seven different doubles via an index. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "Which of the following declares a one dimensional array named names of size 8 so that all entries can be Strings?",
    "correct_options": ["String[] names=new String[8];"]
  },
  {
    "question": "The following creates a reference in memory named y that can refer to five different integers via an index. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Suppose you are writing a program where the user is prompted to give coordinates where they believe the princess is inside of the castle. Your program moves the prince to the coordinates that the user specified. If the princess is not found at those coordinates, the user is given a clue that helps them guess coordinates closer to the princess. The user is allowed to enter their new guess of where the princess is. Assume your program does not take into consideration the possibility that the user may enter coordinates outside of the castle where the princess could not be. What would be the result of the user entering coordinates outside of the castle? How could this be handled in your code?",
    "correct_options": [
      "An exception would occur. This could be handled by throwing an exception in your code if the user enters invalid coordinates. When the exception is caught, the user could be prompted to enter coordinates within the given range of the castle."
    ]
  },
  {
    "question": "Which line of code shows the correct way to throw an exception?",
    "correct_options": [
      "throw new Exception(\"Array index is out of bounds\");"
    ]
  },
  {
    "question": "Which of the following could be a reason to throw an exception?",
    "correct_options": ["You have a fatal error in your program."]
  },
  {
    "question": "Which of the following declares a one dimensional array named \"score\" of type int that can hold 9 values?",
    "correct_options": ["int[] score=new int[9];"]
  },
  {
    "question": "Which of the following declares and initializes a two dimensional array where each element is a reference type?",
    "correct_options": ["String[][] words=new String[10][3];"]
  },
  {
    "question": "Which of the following declares and initializes a one dimensional array named words of size 10 so that all entries can be Strings?",
    "correct_options": ["String[] words=new String[10];"]
  },
  {
    "question": "What is wrong with this code?",
    "correct_options": ["It does not compile."]
  },
  {
    "question": "What are exceptions used for in Java?",
    "correct_options": [
      "Making the program easier to use for the user and reducing the possibilities of errors occuring."
    ]
  },
  {
    "question": "Which of the following statements is not a valid array declaration?",
    "correct_options": ["counter int[];"]
  },
  {
    "question": "Which of the following declares and initializes a two dimensional array?",
    "correct_options": ["int[][] array={{1,1,1},{1,1,1},{1,1,1}};"]
  },
  {
    "question": "Which of the following declares and initializes a two dimensional array named values with 2 rows and 3 columns where each element is a reference to an Object?",
    "correct_options": ["String[][] values=new String[2][3];"]
  },
  {
    "question": "double array[] = new double[8]; After execution of this statement, which of the following are true?",
    "correct_options": ["array.length is 8"]
  },
  {
    "question": "The following creates a reference in memory named k that can refer to six different integers via an index. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "Which of the following declares and initializes a one dimensional array that can hold 5 Object reference types?",
    "correct_options": ["Object[] array=new Object[4];"]
  },
  {
    "question": "What will array arr contain after the following code segment has been executed?",
    "correct_options": ["9, 6, 3, 1, 0"]
  },
  {
    "question": "Choose the best response to this statement: An error can be handled by throwing it and catching it just like an exception.",
    "correct_options": [
      "False. An error is much more severe than an exception and cannot be dealt with adequately in a program."
    ]
  },
  {
    "question": "Which of the following defines an Exception?",
    "correct_options": [
      "A problem that can be corrected or handled by your code."
    ]
  },
  {
    "question": "Which of the following is the correct way to call an overriden method needOil() of a super class Robot in a subclass SqueakyRobot?",
    "correct_options": ["super.needOil();"]
  },
  {
    "question": "A constructor must have the same name as the class where it is declared. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "What is the output of the following code segment: int n = 13; System.out.print(doNothing(n)); System.out.print(\" \", n); where the code from the method doNothing is: public double doNothing(int n) { n = n + 8; return (double) 12/n; }",
    "correct_options": ["1.75, 13"]
  },
  {
    "question": "The final keyword makes a static variable act like a constant. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Public static variables can't have their value reset by other classes. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Static classes can't return instances of the parent class when the parent class uses a private constructor. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "What allows Java to correctly and automatically determine which method to invoke based on the type of object being referred to at the time the method is called?",
    "correct_options": ["Dynamic Method Dispatch"]
  },
  {
    "question": "Identify the step (s) in creating a Triangle Applet that displays two triangles.",
    "correct_options": [
      "Extend Applet class to inherit all methods including paint.",
      "Override the paint method to include the triangles.",
      "Draw the 2nd triangle using the inherited fillPolygon method."
    ]
  },
  {
    "question": "Which of the following would be most beneficial for this scenario? Joe is a college student who has a tendency to lose his books. Replacing them is getting costly. In an attempt to get organized, Joe wants to create a program that will store his textbooks in one group of books, but he wants to make each book type the subject of the book (i.e. MathBook is a book). How could he store these different subject books into a single array?",
    "correct_options": ["Using polymorphism."]
  },
  {
    "question": "Which of the following is the correct definition of a parameter?",
    "correct_options": [
      "A variable in a method declaration that gets passed into the method."
    ]
  },
  {
    "question": "Which of the following is the definition of a constructor?",
    "correct_options": [
      "A special method that is used to assign initial values to instance variables in a class."
    ]
  },
  {
    "question": "Which of the following is the correct way to code a method with a return type an object Automobile?",
    "correct_options": [
      "Automobile upgrade(Automobile carA){ carA.setTurbo(\"yes\"); return carA;}"
    ]
  },
  {
    "question": "Where should the constructor for a superclass be called?",
    "correct_options": ["The first line of the constructor in the subclass."]
  },
  {
    "question": "Which of the following correctly describes an \"is-a\" relationship?",
    "correct_options": [
      "A programming philosophy that promotes simpler, more efficient coding by using existing code for new applications."
    ]
  },
  {
    "question": "You can create static classes as independent classes. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Static variables can't use which of the following modifiers?",
    "correct_options": ["default"]
  },
  {
    "question": "Which of the following could be a reason to return an object?",
    "correct_options": [
      "The method makes changes to the object and you wish to continue to use the updated object outside of the method."
    ]
  },
  {
    "question": "You are assigned to write a method that compares two objects of type Career. One requirement of your assignment is to have your method compare the \"greatestPossibleSalary\" instance data of Career objects. The \"greatestPossibleSalary\" field is data type int. What would be the best return type from your compare method?",
    "correct_options": ["Integer, because it is the easiest to code with."]
  },
  {
    "question": "If Sandal extends Shoe, it is possible to declare an object such that Sandal s = new Shoe();",
    "correct_options": ["False"]
  },
  {
    "question": "Which of the following is true?",
    "correct_options": [
      "A class always has a constructor (possibly automatically supplied by the java compiler)."
    ]
  },
  {
    "question": "A class can have multiple constructors. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following creates a method that compiles with no errors in the class?",
    "correct_options": ["None of the above."]
  },
  {
    "question": "Java's garbage collection is when all references to an object are gone, the memory used by the object is automatically reclaimed. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following creates a Object from the Animal class listed below?",
    "correct_options": ["Animal dog=new Animal(50,30);"]
  },
  {
    "question": "Which segment of code represents a correct way to define a variable argument method?",
    "correct_options": ["String easyArray(String ... elems) {//code}"]
  },
  {
    "question": "Static classes can extend their parent class. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "You can use an inner static class to return an instance of its outer class container. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Why would a programmer use polymorphism rather than sticking to a standard array?",
    "correct_options": [
      "Because it is easier to add or remove objects using polymorphism even when all of the objects are of the same type."
    ]
  },
  {
    "question": "Which of the following correctly describes the use of the keyword super?",
    "correct_options": [
      "A keyword that allows subclasses to access methods, data, and constructors from their parent class."
    ]
  },
  {
    "question": "It is possible to extend a class that already exists in Java, such as the Applet class. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following are true about abstract methods?",
    "correct_options": [
      "They must be declared in an abstract class.",
      "They must be overridden in a non-abstract subclass.",
      "They cannot have a method body."
    ]
  },
  {
    "question": "It is possible to inherit from an abstract class. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following correctly defines a superclass (or parent class)?",
    "correct_options": [
      "A class that passes down its methods to more specialized classes."
    ]
  },
  {
    "question": "What is a UML?",
    "correct_options": [
      "Unified Modeling Language, a standardized language for modeling systems and structures in programming."
    ]
  },
  {
    "question": "Static classes can extend any class in their class path. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following statements about static methods is true?",
    "correct_options": [
      "They exist once per class.",
      "They can access any instance variable."
    ]
  },
  {
    "question": "A team is working on a coding project. They desire that all portions of their code should have access to the classes that they write. What access modifier should be used for each class?",
    "correct_options": ["public"]
  },
  {
    "question": "Cameron wishes to write a method that takes in two objects and returns the one with the greatest value. Is this possible?",
    "correct_options": [
      "Yes, methods can take objects in as parameters and can also return objects all within the same method."
    ]
  },
  {
    "question": "What keyword is used to inherit a superclass?",
    "correct_options": ["extends"]
  },
  {
    "question": "It is possible for a subclass to be a superclass. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "Consider the following: There is a method A that calls method B. Method B is a variable argument method. With this, which of the following are true?",
    "correct_options": [
      "When invoked, method B creates an array to store some or all of the arguments passed to it from method A."
    ]
  },
  {
    "question": "It is possible to overload a method that is not a constructor. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "Static methods can't act like \"setter\" methods. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following access modifiers doesn't work with a static variable?",
    "correct_options": ["friendly"]
  },
  {
    "question": "Abstract classes can be instantiated. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "The constructor of a class has the same name as the class. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "A constructor is used to create objects. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "All objects, in Java, are created using int. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "In Java, an instance field referenced using the this keyword generates a compilation error. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "Static methods can write to class variables. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "According to the following class declaration, runSpeed can be modified in class Cat. True or false public class Tiger extends Cat{ public int runSpeed;}",
    "correct_options": ["False"]
  },
  {
    "question": "Consider creating a class Square that extends the Rectangle class provided below. Knowing that a square always has the same width and length, which of the following best represents a constructor for the Square class?",
    "correct_options": ["None of the above."]
  },
  {
    "question": "Which of the following is a possible way to overload constructors?",
    "correct_options": [""]
  },
  {
    "question": "What is true about the Object class?",
    "correct_options": ["It is the highest superclass."]
  },
  {
    "question": "Abstract class cannot extend another abstract class. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "Which of the following are relational operators in Java?",
    "correct_options": ["<", "<=", "=", "!="]
  },
  {
    "question": "Which of the following correctly initializes an instance of Scanner, called \"in\", that reads input from the console screen?",
    "correct_options": ["Scanner in = new Scanner(System.in);"]
  },
  {
    "question": "In an if-else construct the condition to be evaluated must end with a semi-colon. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "switch statements work on all input types including, but not limited to, int, char, and String. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "Determine whether this boolean expression evaluates to true or false: !(3 < 4 && 5 > 6 || 6 <= 6 && 7 - 1 == 6)",
    "correct_options": ["True"]
  },
  {
    "question": "A counter used in a for loop cannot be initialized within the For loop header. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "What is the function of the word \"break\" in Java?",
    "correct_options": ["It exits the current loop or case statement."]
  },
  {
    "question": "What is a loop?",
    "correct_options": [
      "A set of logic that is repeatedly executed until a certain condition is met."
    ]
  },
  {
    "question": "How many times will the following loop be executed? What is the value of x after the loop has finished? What is the value of count after the loop has finished? int count = 17; int x = 1; while(count > x){ x*=3; count-=3; }",
    "correct_options": ["3; 27; 8"]
  },
  {
    "question": "Updating the input of a loop allows you to implement the code with the next element rather than repeating the code always with the same element. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "What should replace the comment \"//your answer here\" in the code below if the code is meant to take no action when i % 2 is 0 (in other words when i is even)? for(int i = 0; i < 10; i++){ if(i%2 == 0) //your answer here else k+=3; }",
    "correct_options": ["continue;"]
  },
  {
    "question": "The syntax below represents a valid initialization of a for loop counter. True or False?public class ForLoop { public static void main (String args[]) {  for (int i=10; i <20; i++)  {System.out.println(\"i: \"+i); } }}",
    "correct_options": ["True"]
  },
  {
    "question": "In a for loop the counter is not automatically incremented after each loop iteration. Code must be written to increment the counter. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "All of the following are essential to initializing a for loop, except which one?",
    "correct_options": ["Having an if statement."]
  },
  {
    "question": "When the for loop condition statement is met the construct is exited. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "This keyword is used to instruct specific code when the input for a switch statement that does not match any of the cases.",
    "correct_options": ["default"]
  },
  {
    "question": "The three logic operators in Java are:",
    "correct_options": ["&&, ||, !"]
  },
  {
    "question": "What will print if the following Java code is executed?",
    "correct_options": ["0"]
  },
  {
    "question": "Consider that a Scanner has been initialized such that: Scanner in = new Scanner(System.in); Which of the following lines of code reads in the usermes input and sets it equal to a new String called input?",
    "correct_options": ["String input = in.next();"]
  },
  {
    "question": "How would you use the ternary operator to rewrite this if statement?if (balance < 500) fee = 10;else fee = 0;",
    "correct_options": ["fee = ( balance < 500) ? 10 : 0;"]
  },
  {
    "question": "What is the output of the following code segment? int num = 7; while(num >= 0) { num -= 3; } System.out.println(num);",
    "correct_options": ["0"]
  },
  {
    "question": "A counter used in a for loop cannot be initialized within the For loop statement. True or False?",
    "correct_options": ["False"]
  },
  {
    "question": "For both the if-else construct and the for loop, it is true to say that when the condition statement is met, the construct is exited. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "Why are loops useful?",
    "correct_options": [
      "They allow for repeating code until a certain argument is met."
    ]
  },
  {
    "question": "In the code fragment below, the syntax for the for loop's initialization is correct. True or false?public class ForLoop { public static void main (String args[]) { for ((int 1=10) (i<20) (i++)) {  System.out.println (\"i: \" + i); } }}",
    "correct_options": ["False"]
  },
  {
    "question": "The following prints Yes on the screen. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "The six relational operators in Java are:",
    "correct_options": [">, <, ==, !=, <=, >="]
  },
  {
    "question": "How would you use the ternary operator to rewrite this if statement?if (gender == \"male\") System.out.print(\"Mr.\"); else System.out.print(\"Ms.\");",
    "correct_options": ["(gender == \"male\") ? \"Mr.\" : \"Ms.\" ;"]
  },
  {
    "question": "For every opening curly brace { there must be a closing curly brace} or the program will not compile without error. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following is the name of a Java primitive data type?",
    "correct_options": ["double"]
  },
  {
    "question": "Select the declaration and initialization statement that will hold the letter J.",
    "correct_options": ["char letter='J';"]
  },
  {
    "question": "Which of the following statements correctly assigns \"3 times 10 to the 4th power\" to the variable number?",
    "correct_options": ["double number=3*10e4;"]
  },
  {
    "question": "Which of the following is a legal identifier?",
    "correct_options": ["apple"]
  },
  {
    "question": "What is the output of the following lines of code? int j=6,k=8,m=2,result;result=j-k%3*m; System.out.println(result);",
    "correct_options": ["2"]
  },
  {
    "question": "Which of the following defines a driver class?",
    "correct_options": [
      "Contains a main method, a package, static methods, and classes that define objects."
    ]
  },
  {
    "question": "Which of the two diagrams below illustrate the general form of a Java program?",
    "correct_options": ["Example A"]
  },
  {
    "question": "When importing another package into a class you must import the entire package as well as the package classes that will be called. True or False?",
    "correct_options": ["False"]
  },
  {
    "question": "What is printed by the following code segment?",
    "correct_options": ["", "", "", ""]
  },
  {
    "question": "What will the following code segment output?",
    "correct_options": ["\"\""]
  },
  {
    "question": "What two values can a boolean variable have?",
    "correct_options": ["True and false"]
  },
  {
    "question": "Which of the following is not correct Java code?",
    "correct_options": ["double x=Math.pow;"]
  },
  {
    "question": "Which line of Java code properly calculates the area of a triangle using A=1/2(b)(h) where b and h are Java primitive integers?",
    "correct_options": ["double A=1/2*b*h;"]
  },
  {
    "question": "Given the code String s1 = \"abcdef\"; String s2 = \"abcdef\"; String s3 = new String(s1); Which of the following would equate to false?",
    "correct_options": ["s3 == s1"]
  },
  {
    "question": "Which of the following creates a String named string?",
    "correct_options": ["String string;"]
  },
  {
    "question": "The String methods equals and compareTo perform similar functions and differ in their return type. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "The following defines a package keyword:",
    "correct_options": [
      "Provides the compiler information that identifies outside classes used within the current class."
    ]
  },
  {
    "question": "When importing another package into a class you must import only the package classes that will be called and not the entire package. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Two variables are required to support a conversion of one unit of measure to another unit of measure. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "Four variables are required to support a conversion of one unit of measure to another unit of measure. True or False?",
    "correct_options": ["False"]
  },
  {
    "question": "Which of the following examples of Java code is not correct?",
    "correct_options": ["boolean b=1;"]
  },
  {
    "question": "Which of the following declarations are correct?",
    "correct_options": ["float loan;", "double duty;"]
  },
  {
    "question": "Which line of Java code assigns the value of 5 raised to the power of 8 to a?",
    "correct_options": ["double a=Math.pow(5,8);"]
  },
  {
    "question": "In a project, 1 of the classes must contain a main method. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "When converting gallons to liters its best to put the calculation result into a variable with a _______________ data type.",
    "correct_options": ["double"]
  },
  {
    "question": "The following code is an example of a correct initialization statement: char c=\"c\";",
    "correct_options": ["False"]
  },
  {
    "question": "A perspective is described as:",
    "correct_options": ["A combination of views and editors"]
  },
  {
    "question": "In a Java IDE, when you run a Java Application, where may the results display?",
    "correct_options": ["Console View"]
  },
  {
    "question": "The following program prints \"Equal\". True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following statements displays 12345? I. System.out.println( 123 * 100 + 45); II. System.out.println(\"123\" + 45); III. System.out.println( 12 + \"345\");",
    "correct_options": ["I and II only."]
  },
  {
    "question": "What is the output of the following lines of code? int j=7,k=5,m=8,result;  result=j-k%3*m;  System.out.println(result);",
    "correct_options": ["-9"]
  },
  {
    "question": "Match each of the following literals ('x', 10, 10.2, 100L, \"hello\") with its respective data type.",
    "correct_options": ["char, int, double, long, String"]
  },
  {
    "question": "Which of the following is not a legal name for a variable?",
    "correct_options": ["2bad"]
  },
  {
    "question": "What are Java's primitive types?",
    "correct_options": [
      "boolean, byte, char, double, float, int, long, and short"
    ]
  },
  {
    "question": "What will the method methodA print to the screen?",
    "correct_options": ["18"]
  },
  {
    "question": "A combination of views and editors are referred to as _______________.",
    "correct_options": ["A perspective"]
  },
  {
    "question": "A workspace can have one or more stored projects. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "The following program prints \"Not Equal\":\n\n \n\n True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "The following code is an example of creating a String reference:  String s; True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "A variable is a place in memory where data of a specific type can be stored for later retrieval and use by your program",
    "correct_options": ["True"]
  },
  {
    "question": "Defining the scenario, and the Alice animation to represent the scenario, is the first step to programming your animation. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In Alice, what are the forms of a scenario?",
    "correct_options": [
      "A task to perform.",
      "A problem to solve.",
      "A section of code to write.",
      "A person to help.",
      "A system to start."
    ]
  },
  {
    "question": "Which of the following does not describe variables?",
    "correct_options": ["Arranged in rows and columns."]
  },
  {
    "question": "To save a class to the myClasses directory you do so at the ________ level.",
    "correct_options": ["Class"]
  },
  {
    "question": "In Alice, when is the sceneActivationListener executed?",
    "correct_options": ["At the beginning of the animation"]
  },
  {
    "question": "The Procedures tab and the Functions tab are the two tabs available in the Alice methods panel. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In Alice, what does the resize handle style do?",
    "correct_options": [
      "Change size of the object and stretch it along the x, y, and z axes"
    ]
  },
  {
    "question": "Which option copies a programming instruction to the clipboard?",
    "correct_options": ["Copy to Clipboard"]
  },
  {
    "question": "In the Greenfoot IDE, any new methods you create are written in the class's source code. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In reference to Greenfoot, if the following method was defined in a superclass, public void turnAtEdge(){ ... } all subclasses of the superclass will inherit the method.True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In Greenfoot, you must first create an instance before you create a class. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "From your Greenfoot lessons, a scenario is a game or simulation implemented in Greenfoot. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In the Greenfoot IDE, what symbols indicate that the variable is an array?",
    "correct_options": ["Square brackets [ ]"]
  },
  {
    "question": "From your Greenfoot lessons, what types of values cannot be stored in a local variable?",
    "correct_options": ["method", "Objects", "World name", "Class name"]
  },
  {
    "question": "In Greenfoot, which method is used to end a game?",
    "correct_options": ["Greenfoot.stop( );"]
  },
  {
    "question": "In Greenfoot, which method is used to add a new instance to a scenario when the world is initialized?",
    "correct_options": ["addObject"]
  },
  {
    "question": "What does the following Greenfoot programming statement tell the class to do? if (Greenfoot.getRandomNumber(100) < 6) { turn(18); }",
    "correct_options": [
      "If a random number is returned that is less than 6, turn 18 degrees."
    ]
  },
  {
    "question": "When a Greenfoot code segment is executed in an if-statement, each line of code is executed in sequential order. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "The list below displays components of the Greenfoot source code editor except one. Which one should be removed?",
    "correct_options": ["Instance creator"]
  },
  {
    "question": "From your Greenfoot lessons, where do you review a class's inherited methods?",
    "correct_options": ["Inspector"]
  },
  {
    "question": "In Greenfoot, which of the following options are not possible when associating an image file with an instance?",
    "correct_options": ["Add a video"]
  },
  {
    "question": "Use your Greenfoot knowledge: Abstraction occurs in many different ways in programming. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "From your Greenfoot lessons, which of the following are examples of actions that can be achieved using the while loop?",
    "correct_options": ["All of the above."]
  },
  {
    "question": "In Greenfoot, arrays are a way to hold and access multiple variables, and assign different values to new instances each time the while loop executes and produces a new instance. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "From your Greenfoot lessons, an instance inherits all of the characteristics of the class, and those characteristics cannot be changed. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "In the Greenfoot IDE, which type of variable allows instances to store information?",
    "correct_options": ["Instance variable"]
  },
  {
    "question": "In Alice, different programming is not required for different objects, because all objects move the same way. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "An example of an expression is:",
    "correct_options": ["\"I feel happy.\""]
  },
  {
    "question": "From your Alice lessons, what does the Count control statement do?",
    "correct_options": ["Executes statements a specific number of times."]
  },
  {
    "question": "In which Alice class is the addDefaultModelManipulation procedure located?",
    "correct_options": ["Object class"]
  },
  {
    "question": "Main is an example of what in the following code?  public static void main (String[] args) { System.out.println{\"Hello World!\"); }",
    "correct_options": ["A method"]
  },
  {
    "question": "In Alice, how would you get the length of a fish object?",
    "correct_options": ["getLength"]
  },
  {
    "question": "A conditional loop is a loop that will continue forever. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "An event is any action initiated by the user that is designed to influence the programmes execution during play.",
    "correct_options": ["True"]
  },
  {
    "question": "When viewing the Java Code on the side in Alice, you can change the Java code directly instead of the Alice code. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In Alice, which of the following are benefits of separating out motions into their own procedures?",
    "correct_options": ["It simplifies code and makes it easier to read."]
  },
  {
    "question": "Which of the following is an incorrectly written programming statement?",
    "correct_options": ["move():"]
  },
  {
    "question": "In Greenfoot to get the users name you could use:",
    "correct_options": ["Greenfoot.ask(\"Input Name: \");"]
  },
  {
    "question": "You cannot record unique sounds in Greenfoot. You can only use the sounds that are stored in the Greenfoot library. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In the Greenfoot IDE, which of the following is not a property of an instance?",
    "correct_options": ["Scenario name"]
  },
  {
    "question": "In Greenfoot, a variable can be saved and accessed later, even if the instance no longer exists. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In Greenfoot, instances inherit the characteristics of the subclass they belong to, but not the superclass. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "In Greenfoot, which of the following methods display an object's orientation?",
    "correct_options": ["void turn()"]
  },
  {
    "question": "In Greenfoot, which of the following methods return the world that the instance lives in?",
    "correct_options": ["World getWorld()"]
  },
  {
    "question": "From your Greenfoot lessons, classes can only use the methods they have inherited. They cannot use methods from other classes. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "The first step to executing an if-else statement is to:____________.",
    "correct_options": ["Evaluate the condition"]
  },
  {
    "question": "In the Greenfoot IDE, what does the AND operator (&&) do?",
    "correct_options": [
      "Compares two boolean values, and returns a boolean value which is true if and only if both of its operands are true."
    ]
  },
  {
    "question": "In a Greenfoot loop constructor, which component is a counter that controls how many times the statement is executed?",
    "correct_options": ["Loop variable"]
  },
  {
    "question": "From your Greenfoot lessons, which of the following is not a step to creating a new subclass?",
    "correct_options": ["Program the class to move forward."]
  },
  {
    "question": "Which keyword is used to add an actor to a Greenfoot world?",
    "correct_options": ["addObject"]
  },
  {
    "question": "From your Alice lessons, which programming instruction represents the following movement: A person moves forward the distance to the table, minus the depth of the person.",
    "correct_options": [
      "this.Person move Forward this.Person getDistanceTo this.Table - this.Person getDepth"
    ]
  },
  {
    "question": "In Alice, the use of conditional control structures allows what two types of loops?",
    "correct_options": ["Conditional"]
  },
  {
    "question": "In Greenfoot, the move method expects what type of information in its parameters?",
    "correct_options": ["Integer of steps to move forward"]
  },
  {
    "question": "In Greenfoot, which method would you use to obtain input from the user?",
    "correct_options": ["ask()"]
  },
  {
    "question": "In Java what is casting?",
    "correct_options": [
      "When you take an Object of one particular type and turn it into another Object type."
    ]
  },
  {
    "question": "In Greenfoot, only 10 methods can be written for each class in the Code editor. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "An if-statement requires which type of information returned from the condition?",
    "correct_options": ["True or false"]
  },
  {
    "question": "What does the following programming statement mean?  image1 = new GreenfootImage(\"duke12.png\");",
    "correct_options": [
      "The image file, duke12.png, is assigned to the variable image1."
    ]
  },
  {
    "question": "Where can we review the available classes and methods in Greenfoot, including the stop method?",
    "correct_options": ["Greenfoot Application Programmers' Interface (API)"]
  },
  {
    "question": "In Greenfoot, what is the purpose of the variable type?",
    "correct_options": ["Defines what kind of data to store in the variable."]
  },
  {
    "question": "From your Greenfoot lessons, when do infinite loops occur?",
    "correct_options": ["When the end to the act method isn't established."]
  },
  {
    "question": "From your Greenfoot lessons, to save space in the act method, you can write an entirely new method below it, called a _____________.",
    "correct_options": ["Defined method"]
  },
  {
    "question": "In a Greenfoot if-else statement, if the condition is true, the if-statement is executed, and then the else-statement is executed. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "Use you Greenfoot knowledge: What range of numbers does the following method return? Greenfoot.getRandomNumber(30)",
    "correct_options": ["A random number between 0 and 29."]
  },
  {
    "question": "In Alice it is not possible to transfer a class from one animation to another. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "An argument is a value that the procedure uses to complete its task. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Only acting objects have one-shot procedures. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "From your Alice lessons, functional decomposition is the process of taking a complex problem or process and growing it into larger parts that are easier to manage. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "What does a visual storyboard help the reader understand?",
    "correct_options": ["The actions that will take place."]
  },
  {
    "question": "In Alice, procedural abstraction is the concept of making code easier to understand and reuse. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Before you can begin to develop the animation storyboard, what must be defined?",
    "correct_options": ["The scenario"]
  },
  {
    "question": "If you need to repeat a group of Java statements many times, which Java construct should you use?",
    "correct_options": ["while loop"]
  },
  {
    "question": "You want a block of code to be executed only once if certain conditions are met. What type of Java construct would you use?",
    "correct_options": ["if"]
  },
  {
    "question": "When something is broken or doesn't work as intended in a software program, it is referred to as a _________?",
    "correct_options": ["Bug"]
  },
  {
    "question": "A typical application uses various values and these values continuously change while the program is running. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following is not a valid primitive type in Java?",
    "correct_options": ["String"]
  },
  {
    "question": "Alice uses built-in math operators. They are:",
    "correct_options": ["All of the above"]
  },
  {
    "question": "From your Alice lessons, the IF control structure can process one true and one false response. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In Greenfoot, a defined variable is a variable that is defined in an instance. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In Greenfoot, the == operator is used to test if two values are equal. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "When a program is tested once and it works then testing is complete.",
    "correct_options": ["False"]
  },
  {
    "question": "From your Greenfoot lessons, Which of the following statements is most correct?",
    "correct_options": [
      "My program is complete when it runs and I've tested the code."
    ]
  },
  {
    "question": "Which of the following comparison symbols represents equals?",
    "correct_options": ["= ="]
  },
  {
    "question": "From your Greenfoot lessons, what can methods belong to?",
    "correct_options": ["All of the above"]
  },
  {
    "question": "In Greenfoot, which class has methods that allow you to get the status of the mouse?",
    "correct_options": ["Greenfoot"]
  },
  {
    "question": "Which of the following comparison operators represents \"greater than or equal\"?",
    "correct_options": [">="]
  },
  {
    "question": "From your Greenfoot lessons, in an if-statement, the programming statements written in curly brackets are executed simultaneously. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "Which class holds the method that ends a Greenfoot game?",
    "correct_options": ["Greenfoot"]
  },
  {
    "question": "We can use the Actor constructor to automatically create Actor instances when the Greenfoot world is initialized. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "Which Greenfoot control operator is used to test if two values are equal?",
    "correct_options": ["== operator"]
  },
  {
    "question": "In Greenfoot, a way to have all subclasses of a superclass inherit a method is by adding the method to the superclass. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "Which of the following are examples of default superclasses that are present in a new Greenfoot scenario?",
    "correct_options": ["Actor", "World"]
  },
  {
    "question": "An object is an instance of a class. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In Greenfoot, the sound file must be saved in the scenario and written in the source code for it to play. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following Greenfoot logic operators represents \"not\"?",
    "correct_options": ["!"]
  },
  {
    "question": "In the following Greenfoot array, what statement would you write to access the \"a\" key?  Keynames = {\"a\", \"b\", \"c\", \"d\"};",
    "correct_options": ["keynames[\"a\"]"]
  },
  {
    "question": "From your Greenfoot lessons, which of the following logic operators represents \"and\"?",
    "correct_options": ["&&"]
  },
  {
    "question": "When you import a class from another file you have to import the entire class. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "What do moving objects provide to your scene?",
    "correct_options": ["The action"]
  },
  {
    "question": "In Alice, we can avoid object collision using what?",
    "correct_options": ["Using object detection."]
  },
  {
    "question": "The say procedure in Alice plays an audio file. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "From your Alice lessons, which of the following is a tool to show the logic of an animation?",
    "correct_options": ["Flowchart"]
  },
  {
    "question": "Procedural abstraction may need to be implemented if an object in Alice needs to perform an action, but there isn't an inherited procedure that accomplishes that action. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following WHILE control structures commands the fish to move forward repeatedly 0.5 meters at a time, but stop if it collides with the shark?",
    "correct_options": ["None of the above"]
  },
  {
    "question": "From your Alice lessons, the \"Checklist for Animation Completion\" does not ask questions about the scenario and storyboards, because these are not valid parts of the animation creation process. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "A variable is a named location inside the computer's memory; once there, the information can be retrieved and changed. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "What do lines 9 and 11 do in the following code?",
    "correct_options": ["Examine a file and scan the next line."]
  },
  {
    "question": "Main is an example of what in the following code?  public static void main (String[] args) {  System.out.println{\"Hello World!\"); }",
    "correct_options": ["A method"]
  },
  {
    "question": "In Alice, which of the following arguments could be replaced with a random number?",
    "correct_options": ["Distance"]
  },
  {
    "question": "In Alice, which function is used to move an object directly to the center point of another object?",
    "correct_options": ["getDistance"]
  },
  {
    "question": "In Alice, the setVehicle procedure will associate one object to another. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "One type of object property is an object's position in the scene. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In the Greenfoot IDE, an instance's position is on the x and y coordinates. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "What does the following Greenfoot programming statement do? turn(18);",
    "correct_options": ["Turn the object 18 degrees."]
  },
  {
    "question": "In Greenfoot modifying an actor's constructor to accept an initial speed is a form of abstraction?",
    "correct_options": ["True"]
  },
  {
    "question": "Constructors are called automatically when a new instance of a class is created? True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "From your Greenfoot lessons, what is the parameter of the following constructor that creates a new image, and designates it to the Actor class?  setImage (new GreenfootImage(\"Bee01.png\"));",
    "correct_options": ["GreenfootImage"]
  },
  {
    "question": "Use your Greenfoot knowledge to answer the question. One reason to write a defined method in a class is to make it easier to read. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "A collision in Greenfoot is when two actors make contact?",
    "correct_options": ["True"]
  },
  {
    "question": "In Greenfoot, a semicolon is not necessary at the end of a method that uses dot notation. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "From your Greenfoot lessons, which of the following comparison operators represents \"greater than\"?",
    "correct_options": [">"]
  },
  {
    "question": "From your Greenfoot lessons, which axes define an object's position in a world?",
    "correct_options": ["x", "y"]
  },
  {
    "question": "Which Alice execution task corresponds with the following storyboard statement? <br>Cat rolls to the left.",
    "correct_options": ["Cat roll Left 1"]
  },
  {
    "question": "The list below describes variables. All are correct except which one?",
    "correct_options": ["Arranged in rows and columns."]
  },
  {
    "question": "What is the output produced by the following code?",
    "correct_options": ["j is 10 k is 5"]
  },
  {
    "question": "The move procedure in Alice moves an object in how many different possible directions?",
    "correct_options": ["6"]
  },
  {
    "question": "An animation gives the scenario a purpose. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "A flowchart is a useful way to illustrate how your Alice animation's characters will look. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "In Alice, which of the following is the most likely situation where procedural abstraction could be used?",
    "correct_options": ["One fish needs to swim forward 1 meter."]
  },
  {
    "question": "Consider the following: You want to use the BufferedReader and InputStreamReader classes to get user input from the command line. Which one of the following import statements must you use?",
    "correct_options": ["import java.io.*;"]
  },
  {
    "question": "Which of the following is not an example of the logic of an IF control structure?",
    "correct_options": ["Play the video three times."]
  },
  {
    "question": "Creating multiple versions of your Alice project saves time. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "An Alice event is considered what?",
    "correct_options": ["A keystroke or mouse click."]
  },
  {
    "question": "In Alice, what tab would you choose to start a new animation with a pre-populated world?",
    "correct_options": ["Starters"]
  },
  {
    "question": "Identify an example of an Alice expression.",
    "correct_options": ["\"Hello World.\""]
  },
  {
    "question": "Which of the following are ways to open an existing Alice project file after launching Alice?",
    "correct_options": [
      "Double-click on the project file name in the folder it is stored in on your computer.",
      "Select the project from the My Projects tab."
    ]
  },
  {
    "question": "From your Alice lessons, a textual storyboard provides a detailed, ordered list of the actions each object performs in each scene of the animation. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following is not an Alice variable value type?",
    "correct_options": ["Function"]
  },
  {
    "question": "Which is an example of the Boolean variable type?",
    "correct_options": ["True or False"]
  },
  {
    "question": "A loop can be infinite (continue forever) or conditional (stops upon a condition). True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In Alice, the procedures' arguments allow the programmer to adjust the object, motion, distance amount, and time duration. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In Alice, which control statement is used to invoke simultaneous movement?",
    "correct_options": ["Do Together"]
  },
  {
    "question": "In Alice, a computer program requires functions to tell it how to perform the procedure. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "From your Alice lessons, built-in functions provide precise property details for the following areas:",
    "correct_options": ["Proximity, size, spatial relation, and point of view."]
  },
  {
    "question": "In Greenfoot, you will never have to cast as we only ever use 2 classes - World and Actor.",
    "correct_options": ["False"]
  },
  {
    "question": "From your Greenfoot lessons, how do you know the program does not contain syntax errors?",
    "correct_options": ["Compile the code."]
  },
  {
    "question": "A class variable is also known as a ____________.",
    "correct_options": ["Field"]
  },
  {
    "question": "An if-else statement executes its first code block if a condition is true, and its second code block if a condition is false, but not both. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In Greenfoot, which keyword calls the World superclass?",
    "correct_options": ["super"]
  },
  {
    "question": "Which of the following is the default control statement in myFirstMethod?",
    "correct_options": ["Do In Order"]
  },
  {
    "question": "In Alice, a walking motion for a bipedal object can be achieved without the Do Together control statement. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "Which of the following actions would require a control statement to control animation timing?",
    "correct_options": ["A biped object walking."]
  },
  {
    "question": "Which one of the following event listener types is not available at the top-level of the addEvent drop down list in Alice?",
    "correct_options": ["Mouse"]
  },
  {
    "question": "From your Alice lessons, which programming instruction represents the following movement: A cat moves forward double (or twice) the distance to the tree.",
    "correct_options": [
      "this.Cat move Forward this.Cat getDistanceTo this.tree * 2.0"
    ]
  },
  {
    "question": "In Java, a function is a method that returns a value. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following statements about methods is false?",
    "correct_options": [
      "Classes must be defined directly within a method definition."
    ]
  },
  {
    "question": "Which of the following is an example of nesting in an Alice program?",
    "correct_options": [
      "Five Do Together statements are nested inside of a Do In Order statement."
    ]
  },
  {
    "question": "When presenting your Alice animation, it is not important to give the audience a reason to listen to the presentation. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "Saved Alice projects can be opened and edited. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In Java, which symbol is used to assign one value to another?",
    "correct_options": ["="]
  },
  {
    "question": "Which of the following would a clown fish object in Alice inherit from its class?",
    "correct_options": ["All of the above"]
  },
  {
    "question": "From your Alice lessons, what does inheritance mean?",
    "correct_options": [
      "Each subclass inherits the methods and properties of its superclass."
    ]
  },
  {
    "question": "A scenario gives the Alice animation a purpose. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "What type of parameter does the keyDown method expect?",
    "correct_options": ["The name of the key to press on the keyboard."]
  },
  {
    "question": "From your Greenfoot lessons, which of the following methods return the current rotation of the object?",
    "correct_options": ["int getRotation()"]
  },
  {
    "question": "Which of the following features of Greenfoot will locate syntax errors in your program?",
    "correct_options": ["Compilation"]
  },
  {
    "question": "How would the following sentence be written in Greenfoot source code? If Bee is turning, and the keyboard key \"d\" is down...",
    "correct_options": ["if (!isTurning && Greenfoot.isKeyDown(\"d\") )"]
  },
  {
    "question": "In Greenfoot, string concatenation reduces the number of redundant characters or phrases you need to type into each array. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "If an end to a while loop is not established, what happens?",
    "correct_options": ["The code executes and does not stop."]
  },
  {
    "question": "In Greenfoot, what happens if the end to a while loop isn't established?",
    "correct_options": ["The code will keep executing and will never stop."]
  },
  {
    "question": "What type of Greenfoot method would be used to turn an object?",
    "correct_options": ["turn();"]
  },
  {
    "question": "From your Greenfoot lessons, when a method needs additional data to perform a task, this data comes from parameters. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In the following Greenfoot method signature, which is the method name? void turnLeft()",
    "correct_options": ["turnLeft"]
  },
  {
    "question": "In Greenfoot, the class holds the general attributes of an instance, such as the methods it inherits. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In Greenfoot, a subclass is a specialization of a superclass. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In Greenfoot, you can use comparison operators to compare a variable to a random number. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In object oriented programming, programmers analyze a problem and create objects to solve the problem. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "From your Greenfoot lessons, if the condition in an if-statement is true, the first code segment is executed. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In Greenfoot, the Run button repeatedly executes all of the programming statements in the class's act method in sequential order until the pause button is clicked. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In Greenfoot, which of the following are execution controls?",
    "correct_options": ["Act", "Run", "Turn", "Speed", "Move"]
  },
  {
    "question": "Which keyword indicates that Greenfoot needs to create a new object?",
    "correct_options": ["new"]
  },
  {
    "question": "From your Greenfoot lessons, to view the methods that a class inherits, open the code editor and select documentation. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "In Greenfoot, after a subclass is created and compiled, you cannot edit the subclass's source code. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "Using the Greenfoot IDE, only five instances can be added to a scenario. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "The list below provides actions you can perform in the Greenfoot code editor except one. Which one should be removed?",
    "correct_options": [
      "Write source code to tell the class how to act in the scenario."
    ]
  },
  {
    "question": "In Greenfoot, what happens to an instance when the Act button is clicked in the environment?",
    "correct_options": [
      "The instance executes all of the programming statements in their class's act method repeatedly until the scenario is stopped."
    ]
  },
  {
    "question": "The Greenfoot method getRandomNumber is used to create predictable behaviour in your scenario",
    "correct_options": ["False"]
  },
  {
    "question": "Read the following method signature. Using your Greenfoot experience, what does this method do? public static int getRandomNumber (int limit)",
    "correct_options": [
      "Returns a random number between zero and the parameter limit."
    ]
  },
  {
    "question": "In Greenfoot, the properties of an instance can be modified in the documentation. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In Greenfoot, the turn method expects what type of information in its parameters?",
    "correct_options": ["Degrees to turn"]
  },
  {
    "question": "Which of the following Greenfoot methods returns a random number between 0, up to and including 10,000?",
    "correct_options": ["Greenfoot.getRandomNumber(10,000)"]
  },
  {
    "question": "In Alice, there is no way of seeing the code as Java code. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Each parameter is listed with its name first, then its data type. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "If you want one message to display if a user is below the age of 18 and a different message to display if the user is 18 or older, what type of construct would you use?",
    "correct_options": ["if"]
  },
  {
    "question": "In Alice, which of the following programming statements moves the cat backward, half the distance to the bird?",
    "correct_options": [
      "this.Cat move backward {this.Cat getDistanceTo this.Bird / 2}"
    ]
  },
  {
    "question": "What can be used as a guideline to ensure your Alice animation fulfills animation principles?",
    "correct_options": ["An animation checklist"]
  },
  {
    "question": "The Alice IF control structure requires the false statement to be populated. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "When creating an event based on a keypress which event handler would you use?",
    "correct_options": ["Keyboard"]
  },
  {
    "question": "Results of arithmetic operations cannot be stored in a variable. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following programming instructions commands the fish to continuously move forward a random speed between 0.5 and 1.0 meters, minus 0.25 meters, until it collides with the shark?",
    "correct_options": ["", "", "", ""]
  },
  {
    "question": "Which of the following does not describe methods?",
    "correct_options": ["Is associated with an instance variable."]
  },
  {
    "question": "The list below contains method descriptions. All are correct except which one?",
    "correct_options": ["Is associated with an instance variable."]
  },
  {
    "question": "When presenting your Alice animation, ensure that your presentation is thoroughly tested and complete. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "If the value already exists in the variable it is overwritten by the assignment operator (=). True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In Alice, where are arithmetic operators available?",
    "correct_options": ["Amount argument"]
  },
  {
    "question": "In Alice, when using a while loop you can only execute a single line of code within it. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "If a value has been assigned to (is stored in) a variable, that value will be overwritten when another value is assigned to the variable using the assignment \"=\" operator. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "From your Alice lessons, at what point in the animation process do you confirm the items on the \"Checklist for Animation Completion\"?",
    "correct_options": ["After adding each procedure to the Code editor."]
  },
  {
    "question": "In Alice, as part of the recording process you can demonstrate the events that are programmed within your animation. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "What do lines 7, 10 and 13 do in the following code?",
    "correct_options": ["Examine a file and scan the next line."]
  },
  {
    "question": "In Alice, we use the WHILE control statement to implement the conditional loop. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "The Alice animation should be tested throughout development, not just at the end of the animation's development. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Java programs can be simple programs that run from the command line, or they can have complex graphical user interfaces. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Define the value of the variable LapCount based on the following math calculation: LapCount + 10 = 15",
    "correct_options": ["5"]
  },
  {
    "question": "Examine the following code. What are the variables?",
    "correct_options": ["args", "n", "t", "i"]
  },
  {
    "question": "In Alice, functions ask questions about an object. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "To add a procedure to myFirstMethod, right-click on the procedure you wish to add and select the Add button. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "What is the purpose of a function in Alice?",
    "correct_options": ["To compute and answer a question about an object."]
  },
  {
    "question": "Debugging and testing are the process of running the animation one time and adjusting the control statements, procedures, and arguments.",
    "correct_options": ["False"]
  },
  {
    "question": "How do you create a programming instruction in Alice?",
    "correct_options": [
      "Click and drag the desired programming instruction into the Procedures tab."
    ]
  },
  {
    "question": "From your Alice lessons, inheritance means that the superclass inherits its traits from the subclass. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "In Alice, declaring a new procedure to shorten code and make it easier to read is a procedural abstraction technique. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Manually manipulating an Alice object with your cursor is a way to precisely position an object. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Debugging is the process of finding bugs in a software program. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following is not an example of a one-shot procedure?",
    "correct_options": ["Turn"]
  },
  {
    "question": "To access the Alice Code editor from the Scene editor, which button do you click?",
    "correct_options": ["Code Editor"]
  },
  {
    "question": "In Alice, the while control statement executes a set of procedures a specific number of times. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "From your Alice lessons, random numbers are numbers generated by the user with a pattern in their sequence. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "From your Alice lessons, which programming instruction represents the following movement: A turtle moves forward half the distance to the flower.",
    "correct_options": [
      "this.Turtle move Forward this.Turtle getDistanceTo this.Flower / 2.0"
    ]
  },
  {
    "question": "In Alice, functions are dragged into the control statement, not the procedure. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "After objects are positioned in the scene, it is wise to save multiple versions of the project, giving each version the same name. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "In Alice, you can use a function to get the current color of the object. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "In Alice, the computer specifies the low and high range values for the range of numbers from which to pull a randomized number. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "From your Alice lessons, what is a one-shot procedural method?",
    "correct_options": [
      "A procedure that is invoked when the Run button is clicked."
    ]
  },
  {
    "question": "In an Alice program, which code is executed when the Run button is clicked?",
    "correct_options": ["The code entered in myFirstMethod in the Code editor."]
  },
  {
    "question": "The comments you enter in Alice should describe the sequence of actions that take place in the code segment. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which Alice control statement executes a set of procedures simultaneously?",
    "correct_options": ["Do together"]
  },
  {
    "question": "Which Alice execution task corresponds with the following storyboard statement? <br><br>Cat turns to face mouse.",
    "correct_options": ["this.cat turnToFace this.mouse"]
  },
  {
    "question": "Copying programming instructions saves time when programming your Alice project. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In Alice, objects inherit the characteristics of their:",
    "correct_options": ["Class"]
  },
  {
    "question": "In Alice, where can you view the list of functions available for an object?",
    "correct_options": ["Functions tab in the methods panel."]
  },
  {
    "question": "In Alice, there is no way of reordering the function list in the function tab. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "The Alice Scene editor contains tools to rotate the camera view. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "Which of the following is a reason why you might disable programming statements in your Alice code?",
    "correct_options": ["To help isolate portions of code during testing."]
  },
  {
    "question": "Rings will appear around a sub-part indicating how you can reposition it. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In Alice, when a new procedure is declared, all subclasses of the superclass will inherit the procedure. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "It is important to save often while debugging your program. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Functions answer questions about an object, such as its height, width, depth, and even distance to another object. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In Alice, you examine code where a bird moves its wings forward and backward while moving forward simultaneously across the scene. You notice that this set of procedures is repeated in the Code editor ten times to achieve this motion. How could procedural abstraction be used to make the code simpler and easier to read?",
    "correct_options": [
      "Declare a separate \"fly\" procedure for the body moving forward and wings moving up and down."
    ]
  },
  {
    "question": "From your Alice lessons, which of the following are types of storyboards?",
    "correct_options": ["Visual"]
  },
  {
    "question": "All objects in Alice have three-dimensional coordinates on which axes?",
    "correct_options": ["All of the above"]
  },
  {
    "question": "From your Alice lessons, where on an object do an object's axes intersect?",
    "correct_options": ["At the object's center point"]
  },
  {
    "question": "In Alice, each class has a set of pre-defined procedures and functions. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "The delay procedure in Alice halts an object's motion before the next motion begins. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "In Alice, once an instance is added to the scene, it cannot be deleted. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which Alice tool is used to demonstrate the process flow of an animation?",
    "correct_options": ["Flowchart"]
  },
  {
    "question": "In Alice, new procedures are declared in the Scene editor. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "In Alice, what function would you use to get a whole number from the user?",
    "correct_options": ["getIntegerFromUser"]
  },

  {
    "question": "Which two statements are true about the break statement?",
    "correct_options": [
      "When a break statement is executed inside a loop, the loop-statement is terminated immediately and comes out of the program.",
      "The execution of the program will stop at the statement following the loop-statement."
    ]
  },
  {
    "question": "The purpose of adding comments is to increase the ability to understand the logic easily.",
    "correct_options": ["True"]
  },
  {
    "question": "What is the result?  \npublic static void main(String[] args) {   \n for (int var1 = 0; var1 < 2; var1++) {    \n  for (int var2 = 0; var2 < 2; var2++) {     \n   if (var2 == 2) {      \n    continue;     \n   }    \n  System.out.println(\"var1:\" + var1 + \", var2:\" + var2);    \n  }   \n } \n}",
    "correct_options": [
      "var1: 0, var2: 0 var1: 0, var2: 1 var1: 0, var2: 2 var1: 1, var2: 0 var1: 1, var2: 1 var1: 1, var2: 2 var1: 2, var2: 0 var1: 2, var2: 1 var1: 2, var2: 2"
    ]
  },
  {
    "question": "After the loop is terminated, the statement immediately following the loop body is executed.",
    "correct_options": ["True"]
  },
  {
    "question": "A while loop is often used with Scanner input as you don't know many times you'll need to re-prompt the user if they type bad data.",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the two are pre-test loops?",
    "correct_options": ["while"]
  },
  {
    "question": "Which statement is NOT true about do-while loops?",
    "correct_options": [
      "Statements in the loop are executed once until the condition becomes false."
    ]
  },
  {
    "question": "The while loop continually executes a block of statements while a particular condition is false.",
    "correct_options": ["True"]
  },
  {
    "question": "A pre-test loop evaluates the condition prior to execution of the loop.",
    "correct_options": ["True"]
  },
  {
    "question": "Which two are valid syntax to create a for loop?",
    "correct_options": [
      "for(int i = 10; i >= 0; i++ ) {      System.out.println(\"i=\"+i); }",
      "for(int i = 10, i >= 0, i++ ) {      System.out.println(\"i=\"+i); }"
    ]
  },
  {
    "question": "The for loop provides a complicated way to iterate over a range of values.",
    "correct_options": ["True"]
  },
  {
    "question": "Given: for(int i = 0; i > 10; i++){ } What type of variable is i?",
    "correct_options": ["Local"]
  },
  {
    "question": "What is the result? \npublic static void main(String[] args) {      for (;;) {       System.out.println(\"Welcome to Java\");     }  }",
    "correct_options": [
      "Program prints \"Welcome to Java\" an infinite number of times."
    ]
  },
  {
    "question": "You need to calculate the squares of numbers from 1 to 5. Which of the items should be present in your looping statement?",
    "correct_options": ["Initialization Expression , Update Expression"]
  },
  {
    "question": "Which is not a looping statement in Java?",
    "correct_options": ["switch"]
  },
  {
    "question": "The only way to exit a loop is for the loop condition to evaluate to false.",
    "correct_options": ["True"]
  },
  {
    "question": "A continue statement is used to skip the remaining statements in the body of a loop and continue with the next iteration of the loop.",
    "correct_options": ["True"]
  },
  {
    "question": "Which two statements are true about the while loop.",
    "correct_options": [
      "The statements of a while loop will execute one or more times.",
      "If the condition of a pre-test loop is false, the statements in the loop are never executed."
    ]
  },
  {
    "question": "In the given syntax of for loop, which part represents the header section?  \nfor (initialization; condition; update) {  \n  // Code statement(s) \n}",
    "correct_options": ["for (initialization; condition; update)"]
  },
  {
    "question": "Each expression in the header section of a for loop is optional.",
    "correct_options": ["False"]
  },
  {
    "question": "Looping continues as long as the boolean expression in the for loop is false.",
    "correct_options": ["True"]
  },
  {
    "question": "A do-while will always execute statements contained in the loop at least once.",
    "correct_options": ["True"]
  },
  {
    "question": "Which loop type is considered to be a post-test loop?",
    "correct_options": ["do-while"]
  },
  {
    "question": "Which statement is true?",
    "correct_options": [
      "The boolean expression that determines the number of loop iterations is within the parentheses of a while loop."
    ]
  },
  {
    "question": "You want to compute the sum of all the marks of a given subject. Which approach will you choose?",
    "correct_options": ["Looping"]
  },
  {
    "question": "What is the result? \npublic static void main(String[] args) { \n for (;;) { \n  System.out.println(\"Welcome to Java\"); \n } \n}",
    "correct_options": [
      "Program prints \"Welcome to Java\" an infinite number of times."
    ]
  },
  {
    "question": "When is an update expression in a for loop executed?",
    "correct_options": ["After each iteration through the loop."]
  },
  {
    "question": "A for loop is also called a definite loop",
    "correct_options": ["True"]
  },
  {
    "question": "Loops are used in programs for repeated execution of one or more statements until a terminating condition is reached.",
    "correct_options": ["True"]
  },
  {
    "question": "Which statement will produce the output: 2, 4, 6, 8, 10?",
    "correct_options": [
      "for (int i = 2; i <= 10; i += 2) { System.out.print(i + \" \"); }"
    ]
  },
  {
    "question": "The initialization expression initializes the loop and it is executed only once, as the loop begins.",
    "correct_options": ["True"]
  },
  {
    "question": "What is the output? \npublic static void main(String[] args) { \n  int num = 1; \n  while (num >= 200){ \n    System.out.print(num + \" \"); \n    num = num * 5; \n  }\n}",
    "correct_options": ["No output."]
  },
  {
    "question": "Which is used to terminate a loop?",
    "correct_options": ["break"]
  },
  {
    "question": "Which statement is false about an infinite loop?",
    "correct_options": [
      "The body of a while loop eventually must make the condition false to avoid an infinite loop."
    ]
  },
  {
    "question": "A pre-test loop evaluates the condition prior to the execution of the loop.",
    "correct_options": ["True"]
  },
  {
    "question": "A do-while loop will always execute statements contained in the loop at least once.",
    "correct_options": ["True"]
  },
  {
    "question": "A post-test loop evaluates its condition at the end of the loop instead of the beginning.",
    "correct_options": ["True"]
  },
  {
    "question": "During the Testing phase of software development, which of the following are the tasks undertaken by the programmer?",
    "correct_options": [
      "Finding the bugs.",
      "Fixing the bugs.",
      "Planning the order to implement features.",
      "Listing required features."
    ]
  },
  {
    "question": "What is the correct order of steps in the Spiral Model of Development?",
    "correct_options": [
      "Requirements, Design, Test, Develop",
      "Design, Requirements, Develop, Test"
    ]
  },
  {
    "question": "Which of the following are adequate definitions for components of the Spiral Model of Development?",
    "correct_options": [
      "Design: Plan the approach",
      "Develop: Collect all specified instructions",
      "Test: Run the code and verify results",
      "Requirements: Start the development"
    ]
  },
  {
    "question": "When the program runs normally (when not in debug mode), which statement is true about breakpoints?",
    "correct_options": [
      "Breakpoints will not have any effect on program execution."
    ]
  },
  {
    "question": "Which of the following 2 statements are true about whitespace?",
    "correct_options": [
      "Whitespace makes your code more readable.",
      "Whitespace helps to keep your code organized."
    ]
  },
  {
    "question": "You can set any number of breakpoints for your program.",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following language is called a procedural language?",
    "correct_options": ["C"]
  },
  {
    "question": "An object may interact with another object by invoking methods.",
    "correct_options": ["True"]
  },
  {
    "question": "In object-oriented programming, there is an emphasis on which of the following two:",
    "correct_options": [
      "Modeling objects.",
      "Object interaction without a prescribed order."
    ]
  },
  {
    "question": "Assuming x is an int, which of the following are ways to increment the value of x by 1?",
    "correct_options": ["x = x +1;", "x++;", "x += 1;"]
  },
  {
    "question": "What value is assigned to x? int x = 25 - 5 * 4 / 2 - 10 + 4;",
    "correct_options": ["7"]
  },
  {
    "question": "What is the output? public static void main(String args[]) {    int x = 100;   int y = x;   y++;   System.out.println(\"Value of x is \" + x);   System.out.println(\"Value of y is \" + y); }",
    "correct_options": ["Value of x is 100 Value of y is 101"]
  },
  {
    "question": "System.in readies Scanner to collect input from the console.",
    "correct_options": ["False"]
  },
  {
    "question": "These two code fragments perform the same task. // Fragment 1 String inputString = JOptionPane.showInputDialog(\"??\"); int input = Integer.parseInt(inputString); input++;  // Fragment 2 int input = Integer.parseInt(JOptionPane.showInputDialog(\"??\")) + 1;",
    "correct_options": ["True"]
  },
  {
    "question": "You write a statement that assigns a value to a String variable as shown below.String input = \"This is Java Program\";This way of assigning values to variables is known as hard-coding.",
    "correct_options": ["False"]
  },
  {
    "question": "Which two statements are true about String concatenation.",
    "correct_options": [
      "String concatenation can be done with String variables and String Literals.",
      "Strings can be combined using the '+' operator"
    ]
  },
  {
    "question": "In Java, char is a primitive data type, while String is an object data type.",
    "correct_options": ["True"]
  },
  {
    "question": "An Object cannot have String objects as properties.",
    "correct_options": ["False"]
  },
  {
    "question": "Which exception occurs because a String cannot be parsed as an int?",
    "correct_options": ["NumberFormatException"]
  },
  {
    "question": "Which two statements are true about type casting?",
    "correct_options": [
      "Type casting retains the size of the value or the original data type.",
      "Type casting changes the type of the value stored."
    ]
  },
  {
    "question": "The Java compiler automatically promotes byte, short, and chars data type values to int data type.",
    "correct_options": ["True"]
  },
  {
    "question": "What is the output?public class Hello {  public static void main(String args[]) {    String str = \"Hello\";    str = \"World\";   System.out.println(str);  }}",
    "correct_options": ["World"]
  },
  {
    "question": "Which is valid syntax to declare and initialize a String variable?",
    "correct_options": ["String x= \"Java\";"]
  },
  {
    "question": "Which of the following two statements are true about variables?",
    "correct_options": [
      "They make code more flexible.",
      "The value assigned to a variable may never change."
    ]
  },
  {
    "question": "Which is a risk of using fully qualified class names when importing?",
    "correct_options": ["Code readability is reduced."]
  },
  {
    "question": "Given the import statement: import java.awt.font.TextLayout; which is the package name?",
    "correct_options": ["java.awt.font"]
  },
  {
    "question": "Which of the following wild card character is used to import all the classes in a particular package?",
    "correct_options": ["*"]
  },
  {
    "question": "Which package is implicitly imported?",
    "correct_options": ["java.lang"]
  },
  {
    "question": "Object instantiation is done using what keyword?",
    "correct_options": ["new"]
  },
  {
    "question": "Which is a valid way of calling the testMethod in the TestClass? Assume a testInstance has been created. public void testMethod(int x, double y){    System.out.println(x/y); }",
    "correct_options": ["testInstance.testMethod(10, 3.5);"]
  },
  {
    "question": "Methods allow all instance of a class to share same behaviors.",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following are the arguments in the following method? Employee emp = new Employee(); emp.calculateSalary(100000, 3.2, 15);",
    "correct_options": ["100000, 3.2, 15"]
  },
  {
    "question": "Every method of the Math class returns a numerical result.",
    "correct_options": ["True"]
  },
  {
    "question": "What is the approximate value of PI?",
    "correct_options": ["The value varies."]
  },
  {
    "question": "Which method returns the length of a String?",
    "correct_options": ["length()"]
  },
  {
    "question": "A String is a sequence characters.",
    "correct_options": ["True"]
  },
  {
    "question": "What is the output of the following code? public static void main(String args[]) {    String firstString = \"Java\";    firstString = firstString.concat(\"World\");    System.out.println(firstString); }",
    "correct_options": ["JavaWorld"]
  },
  {
    "question": "The indexOf() method returns the index value of a character in the string.",
    "correct_options": ["False"]
  },
  {
    "question": "You need to generate random integer values between 0 and 80 (inclusive). Which statement should you use?",
    "correct_options": ["nextInt(81);"]
  },
  {
    "question": "Which values are returned by the method nextBoolean();",
    "correct_options": ["Either a true or false."]
  },
  {
    "question": "Which class is used to generate random numbers?",
    "correct_options": ["Random"]
  },
  {
    "question": "What is the output? public static void main(String[] args) {    String name = \"Java\";    String language = \"Programming\";    String fullName = name + language;    boolean test = fullName.equals(name + language);    System.out.println(test);  }",
    "correct_options": ["True"]
  },
  {
    "question": "What is the output? public static void main(String[] args) {    int age = 43;    if (age == 43){      System.out.print(\"Bob is 43 \");    }    if (age == 50){      System.out.print(\"Bob is 50 \");     } }",
    "correct_options": ["Bob is 43"]
  },
  {
    "question": "The equal sign (=) is used to make an assignment, whereas the == sign merely makes a comparison and returns a boolean.",
    "correct_options": ["True"]
  },
  {
    "question": "An if/else statement is used when you need to choose between two alternatives.",
    "correct_options": ["True"]
  },
  {
    "question": "What is the output?  public static void main(String args[]) {    char grade ='E';    if (grade == 'A') {       System.out.println(\"Excellent performer\");    }else if (grade == 'B') {       System.out.println(\"Good Performer\");    }else if (grade == 'C') {    System.out.println(\"Average Performer\");    }else {       System.out.println(\"Below Average Performer\");    } }",
    "correct_options": ["Below Average Performer"]
  },
  {
    "question": "The switch statement is a more efficient way to write code when dealing with a large range of unknown values.",
    "correct_options": ["False"]
  },
  {
    "question": "In the OR (||) test, if the first expression on the left hand side is true then there is no need to evaluate the second statement.",
    "correct_options": ["True"]
  },
  {
    "question": "An employee is eligible for a bonus based on certain criteria.Under what conditions does \"Eligible for a bonus\" print?int rating;int experience;if (rating > 1 && experience == 5) {   System.out.println (\"Eligible for a bonus\");}",
    "correct_options": ["5 experience and 1 rating"]
  },
  {
    "question": "Which two are not logical operators?",
    "correct_options": ["%", "+"]
  },
  {
    "question": "The Spiral Model reflects an iterative development process.",
    "correct_options": ["True"]
  },
  {
    "question": "You'd like to see a movie with a few friends. You write an email to confirm plans. Hi Friends, There's a new movie \"Attack of the Duke!\" premiering this Friday at Oracle Cinema at 4:30 PM. The cinema is at the corner of South Street and Walnut Ave. Subway would be the best way to get there. Would any of you be interested in going? Which of the following are requirements for this plan?",
    "correct_options": [
      "Travel via subway.",
      "Watch \"Attack of the Duke!\" on Friday at Oracle Cinema at 4:30 PM.",
      "Double check the location by verifying you're on South Street and Walnut Ave."
    ]
  },
  {
    "question": "During the Design phase of software development, the programmer implements features gathered during the Requirement phase.",
    "correct_options": ["False"]
  },
  {
    "question": "Which of the following three statements are true about breakpoints?",
    "correct_options": [
      "They help with debugging.",
      "They can be used to check the current state of the program",
      "They pause code execution."
    ]
  },
  {
    "question": "In object-oriented programming, an object comprises of properties and behaviors where properties represented as fields of the object and behavior is represented as method.",
    "correct_options": ["True"]
  },
  {
    "question": "Which two are mathematical operators?",
    "correct_options": ["+", "-"]
  },
  { "question": "How many bits are in a byte?", "correct_options": ["8"] },
  {
    "question": "Which data type is most commonly used to represent numeric data?",
    "correct_options": ["int"]
  },
  {
    "question": "char is the primitive textual data type in Java.",
    "correct_options": ["True"]
  },
  {
    "question": "Which two statements are true about the Scanner class?",
    "correct_options": [
      "A Scanner object opens a stream for collecting input.",
      "A Scanner's delimiter can be changed."
    ]
  },
  {
    "question": "It's best-practice to close the Scanner stream when finished",
    "correct_options": ["True"]
  },
  {
    "question": "Identify the names of two variables used in the given code. public class Variables {   public static void main(String args[]) {    String strVal = \"Hello\";   int intVal = 0;    System.out.println(\"Integer: \" +intVal)  } }",
    "correct_options": ["strVal", "intVal"]
  },
  {
    "question": "Which two statements will not compile?",
    "correct_options": ["int break=10;", "double double=10;"]
  },
  {
    "question": "Which two are valid?",
    "correct_options": [
      "double doubleVar1 = 3.1; double doubleVar2 = 3.1;",
      "double doubleVar1, doubleVar2 = 3.1;"
    ]
  },
  {
    "question": "What is parsing?",
    "correct_options": ["Converting text to numeric data"]
  },
  {
    "question": "Which two statements are correct about the usage of an underscore?",
    "correct_options": [
      "Underscores help make large numbers more readable.",
      "Underscores change the value of the number."
    ]
  },
  {
    "question": "When the result of an expression is assigned to a temporary memory location, what is the size of memory allocated?",
    "correct_options": [
      "The size of the smallest data type used in the expression."
    ]
  },
  {
    "question": "You need to generate random integer values in the range 2 through 10. This code fragment will produce the desired result. Random r = new Random(); r.nextInt(9) + 2;",
    "correct_options": ["True"]
  },
  {
    "question": "Using the Random class requires an import statement.",
    "correct_options": ["True"]
  },
  {
    "question": "What is the package name which contains Math class?",
    "correct_options": ["java.lang"]
  },
  {
    "question": "A constant field, like Math.PI is used to represent a fixed value.",
    "correct_options": ["True"]
  },
  {
    "question": "In Java, methods usually hold the properties of an object.",
    "correct_options": ["False"]
  },
  {
    "question": "What is the output? public static void main(String args[]) {    String alphaNumeric = \"Java World!\" + 8;    System.out.println(alphaNumeric); }",
    "correct_options": ["Java World!8"]
  },
  {
    "question": "The String class must be imported using java.lang.String;",
    "correct_options": ["False"]
  },
  {
    "question": "Import statements are placed above the class definition.",
    "correct_options": ["True"]
  },
  {
    "question": "The JFrame and JOptionPane classes are in the javax.swing package. Which two will import those classes?",
    "correct_options": [
      "import javax.swing.*;",
      "import javax.swing.JOptionPane; import javax.swing.JFrame;"
    ]
  },
  {
    "question": "In the AND (&&) test, if the first expression on the left hand side is false, then there is no need to evaluate the second statement.",
    "correct_options": ["True"]
  },
  {
    "question": "A customer is eligible for a discount based on certain criteria. Under what conditions does \"You qualify for a discount\" print? (Hint: There may be more than one correct answer)int purchase;int rewardPoints;if (purchase >= 2000 || rewardPoints >= 4000) {   System.out.println(\"You qualify for discount\");}",
    "correct_options": ["When purchase is 4000 and rewardPoints is 2000"]
  },
  {
    "question": "What are the possible values of a boolean data type in Java?",
    "correct_options": ["true/false"]
  },
  {
    "question": "Which are used in a boolean expression?",
    "correct_options": ["Operators", "Variables"]
  },
  {
    "question": "What is the output? char grade = 'A'; switch (grade) {    case 'A':       System.out.println(\"Congratulations!\");    case 'B':       System.out.println(\"Good work\");    case 'C':       System.out.println(\"Average\");    case 'D':       System.out.println(\"Barely passing\");    case 'F':       System.out.println(\"Failed\"); }",
    "correct_options": [
      "Congratulations!",
      "Good work",
      "Average",
      "Barely passing",
      "Failed"
    ]
  },
  {
    "question": "A breakpoint can be set by clicking a number in the left margin of the IDE. Clicking again removes the breakpoint.",
    "correct_options": ["True"]
  },
  {
    "question": "What is the purpose of adding comments in the code?",
    "correct_options": [
      "Provide an explanation about the code to the programmer."
    ]
  },
  {
    "question": "A software feature may allow the user to perform a specific task.",
    "correct_options": ["True"]
  },
  {
    "question": "If the requirement step of the Spiral Model of development is forgotten, which of the following could occur?",
    "correct_options": [
      "Required software features are missing from the program."
    ]
  },
  {
    "question": "You design a Circle class with various fields and methods. Which of the following could be fields in this class? Distinguish which of these are between the properties and behavior.",
    "correct_options": ["color", "radius"]
  },
  {
    "question": "You have a beautiful garden at home. On Sunday, you start budding your rose plant to make few more samples of rose plants to plant in the garden. Can you categorize how this scenario could be represented by classes and instances?",
    "correct_options": [
      "Rose plant is the class and the samples generated from the rose plant are instances of that class."
    ]
  },
  {
    "question": "What is the range of the byte data type?",
    "correct_options": ["-27 to 27-1"]
  },
  {
    "question": "Which two data types are appropriate for their variable?",
    "correct_options": [
      "double checkingAmount = 1500;",
      "String firstName = \"Alex\";"
    ]
  },
  {
    "question": "What is the output?\n```java\npublic class Welcome {\n  public static void main(String args[]) {\n    System.out.println(\"This is my first program\");\n    int a = 2;\n    System.out.println(\"a is \" + a);\n  }\n}\n```",
    "correct_options": ["This is my first program", "a is 2"]
  },
  {
    "question": "What is the correct way to cast a long to an int?",
    "correct_options": ["int longToInt = (int)20L;"]
  },
  {
    "question": "The Scanner class accepts input in which form?",
    "correct_options": ["Tokens"]
  },
  {
    "question": "A character preceded by backslash is called an escape sequence.",
    "correct_options": ["True"]
  },
  {
    "question": "Char data types cannot handle multiple characters.",
    "correct_options": ["False"]
  },
  {
    "question": "A String can be created by combining multiple String Literals.",
    "correct_options": ["True"]
  },
  {
    "question": "An argument is a value that's passed during a method call",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following two operations are appropriate for the main method?",
    "correct_options": [
      "Calling local variables declared within a class's method",
      "Assigning memory to the variables"
    ]
  },
  {
    "question": "Which is a valid way of calling the testMethod in the TestClass? Assume a testInstance has been created. public void testMethod(int x, double y){ System.out.println(x/y); }",
    "correct_options": ["testInstance.testMethod(10, 3.5);"]
  },
  {
    "question": "Which of the following statements are true?",
    "correct_options": [
      "Methods can be written with any number of parameters.",
      "Parameter values can be used within the method code block."
    ]
  },
  {
    "question": "The classes of the Java class library are organized into packages.",
    "correct_options": ["True"]
  },
  {
    "question": "Which statement is true about packages?",
    "correct_options": ["A package contains a group of related classes."]
  },
  {
    "question": "The import statement consists of two parts. import package.className; One is the package name and the other is the classname.",
    "correct_options": ["False"]
  },
  {
    "question": "Which two are valid import statements of the Scanner class?",
    "correct_options": ["import java.util.*;", "import java.util.Scanner;"]
  },
  {
    "question": "What is the output?\n```java\npublic static void main(String args[]) {\n  String greeting = \"Java World!\";\n  String w = greeting.substring(7, 11);\n  System.out.println(w);\n}\n```",
    "correct_options": ["orld!"]
  },
  {
    "question": "The String concat() method concatenates only String data types.",
    "correct_options": ["False"]
  },
  {
    "question": "String objects are immutable.",
    "correct_options": ["True"]
  },
  {
    "question": "Which two of the following data types can be used in a switch statement?",
    "correct_options": ["String", "int"]
  },
  {
    "question": "What is the output?\n```java\npublic static void main(String args[]) {\n  char grade ='E';\n  if (grade == 'A') {\n    System.out.println(\"Excellent performer\");\n  } else if (grade == 'B') {\n    System.out.println(\"Good Performer\");\n  } else if (grade == 'C') {\n    System.out.println(\"Average Performer\");\n  } else {\n    System.out.println(\"Below Average Performer\");\n  }\n}\n```",
    "correct_options": ["Below Average Performer"]
  },
  {
    "question": "What is the output?\n```java\npublic static void main(String[] args) {\n  int age = 43;\n  if (age == 43){\n    System.out.print(\"Bob is 43 \");\n  }\n  if (age == 50){\n    System.out.print(\"Bob is 50 \");\n  }\n}\n```",
    "correct_options": ["Bob is 43 "]
  },
  {
    "question": "Which operator is used to test if both sides of a boolean expression are equal?",
    "correct_options": ["=="]
  },
  {
    "question": "How should Strings be compared?",
    "correct_options": ["The equals() method"]
  },
  {
    "question": "In a boolean expression which uses the && operator, what would make this expression evaluate to true? boolean x = (firstCondition && secondCondition);",
    "correct_options": [
      "If both the first condition and second condition are true"
    ]
  },
  {
    "question": "Which of the following three statements are true about breakpoint?",
    "correct_options": [
      "They can be used to check the current state of the program",
      "They pause code execution.",
      "They help with debugging."
    ]
  },
  {
    "question": "Code within curly braces is called a \"Block of code\".",
    "correct_options": ["True"]
  },
  {
    "question": "Which keyword makes a variable's value unchangeable?",
    "correct_options": ["final"]
  },
  {
    "question": "What is the output?\n```java\npublic class Person {\n   public static void main(String args[]) {\n      int age = 20;\n      System.out.println(\"Value of age: \" + age);\n      age = 5 + 3;\n      System.out.println(\"Value of age: \" + age);\n      age = age + 1;\n      age++;\n      System.out.println(\"Value of age: \" + age);\n   }\n}\n```\n",
    "correct_options": ["Value of age: 20 Value of age: 8 Value of age: 10"]
  },
  {
    "question": "What value is assigned to x?\n```java\nint x = 25 - 5 * 4 / 2 - 10 + 4;\n```",
    "correct_options": ["7"]
  },
  {
    "question": "You write a statement that assigns a value to a String variable as shown below.\n```java\nString input = \"This is Java Program\";\n```\nThis way of assigning values to variables is known as hard-coding.",
    "correct_options": ["True"]
  },
  {
    "question": "These two code fragments perform the same task.\n```java\n// Fragment 1\nString inputString = JOptionPane.showInputDialog(\"??\");\nint input = Integer.parseInt(inputString);\ninput++; \n// Fragment 2\nint input = Integer.parseInt(JOptionPane.showInputDialog(\"??\")) + 1;\n```",
    "correct_options": ["True"]
  },
  {
    "question": "The print() method prints to the console and automatically creates a line.",
    "correct_options": ["False"]
  },
  {
    "question": "Which two statements compile?",
    "correct_options": ["char size = 'm';", "String size = \"M\";"]
  },
  {
    "question": "Assigning a value to the variable is called \"initialization\".",
    "correct_options": ["True"]
  },
  {
    "question": "Which two are valid assignments of a?",
    "correct_options": ["int a = 10;", "int a; a = 10;"]
  },
  {
    "question": "All the methods in the Math class are static methods.",
    "correct_options": ["True"]
  },
  {
    "question": "What is the output of the following code?\n```java\npublic static void main(String args[]) {\n   String firstString = \"Java\";\n   firstString = firstString.concat(\"World\");\n   System.out.println(firstString);\n}\n```",
    "correct_options": ["JavaWorld"]
  },
  {
    "question": "Which of the following are the arguments in the following method?\n```java\nEmployee emp = new Employee();\nemp.calculateSalary(100000, 3.2, 15);\n```",
    "correct_options": [
      "calculateSalary(100000, 3.2, 15);",
      "emp.calculateSalary(100000, 3.2, 15);"
    ]
  },
  {
    "question": "void type methods don't return any values",
    "correct_options": ["True"]
  },
  {
    "question": "You need to generate random integer values in the range 2 through 10. This code fragment will produce the desired result.\n```java\nRandom r = new Random();\nr.nextInt(9) + 2;\n```",
    "correct_options": ["True"]
  },
  {
    "question": "What is the output?\n```java\npublic static void main(String args[]) {\n   char grade ='E';\n   if (grade == 'A') {\n      System.out.println(\"Excellent performer\");\n   }else if (grade == 'B') {\n      System.out.println(\"Good Performer\");\n   }else if (grade == 'C') {\n   System.out.println(\"Average Performer\");\n   }else {\n      System.out.println(\"Below Average Performer\");\n   }\n}\n```",
    "correct_options": ["Below Average Performer"]
  },
  {
    "question": "Which three are conditional statements?",
    "correct_options": ["if/else statement", "switch statement", "if statement"]
  },
  {
    "question": "In Java, an if statement can be nested inside another if statement.",
    "correct_options": ["True"]
  },
  {
    "question": "In object-oriented programming, an object comprises of properties and behaviors where properties represented as fields of the object and behavior is represented as a method.",
    "correct_options": ["True"]
  },
  {
    "question": "There are several fields and methods in a Shirt class. Which of the following could be a method in the Shirt class?",
    "correct_options": ["getShirtSize()"]
  },
  {
    "question": "Which of the following three statements are true about a breakpoint?",
    "correct_options": [
      "They can be used to check the current state of the program",
      "They pause code execution.",
      "They help with debugging."
    ]
  },
  {
    "question": "A Java program can be written in a single line.",
    "correct_options": ["False"]
  },
  {
    "question": "Double quotes may be used with char literal values.",
    "correct_options": ["False"]
  },
  {
    "question": "A character preceded by a backslash is called an escape sequence.",
    "correct_options": ["True"]
  },
  {
    "question": "The Scanner class considers space as the default delimiter while reading the input.",
    "correct_options": ["False"]
  },
  {
    "question": "What is the output?public class Welcome {  public static void main(String args[]) {   System.out.println(\"This is my first program\");   int a = 2;   System.out.println(\"a is \" + a);  }}",
    "correct_options": ["This is my first program", "a is 2"]
  },
  {
    "question": "Identify the variable declared in the given code. public class Welcome {   public static void main(String args[]) {    int a = 2;    System.out.println(\"a is \" + a);   } }",
    "correct_options": ["a"]
  },
  {
    "question": "What is the output? public static void main(String args[]) {    String greeting = \"Java World!\";    String w = greeting.substring(7, 11);    System.out.println(w); }",
    "correct_options": ["World"]
  },
  {
    "question": "What is the output? public static void main(String args[]) {     String greeting = \"Java World!\";    String w = greeting.replace(\"a\", \"A\");    System.out.println(w); }",
    "correct_options": ["JAvA World!"]
  },
  {
    "question": "Which is NOT true?",
    "correct_options": ["Static methods must be of return void."]
  },
  {
    "question": "The Math class methods can be called without creating an instance of a Math object.",
    "correct_options": ["True"]
  },
  {
    "question": "A break statement causes control to transfer to the end of the switch statement.",
    "correct_options": ["True"]
  },
  {
    "question": "What is the output? public static void main(String args[]) { char ch ='c'; switch(ch) { case 'a': case 'e': case 'i': case 'o': case 'u': System.out.println(\"Vowels\"); break; default: System.out.println(\"Consonants\"); } }",
    "correct_options": ["Consonants"]
  },
  {
    "question": "A String comparison with == compares the Strings' locations in memory and not the content of the String.",
    "correct_options": ["True"]
  },
  {
    "question": "What is the output? public static void main(String[] args) { int age = 43; if (age == 43){ System.out.print(\"Bob is 43 \"); } if (age == 50){ System.out.print(\"Bob is 50 \"); } }",
    "correct_options": ["Bob is 43"]
  },
  {
    "question": "What is the output? public static void main(String[] args) { String name = \"Java\"; String language = \"Programming\"; String fullName = name + language; boolean test = fullName.equals(name + language); System.out.println(test); }",
    "correct_options": ["True"]
  },
  {
    "question": "A customer is eligible for a discount based on certain criteria. Under what conditions does \"You qualify for a discount\" print? (Hint: There may be more than one correct answer)int purchase;int rewardPoints;if (purchase >= 2000 || rewardPoints >= 4000) { System.out.println(\"You qualify for discount\");}",
    "correct_options": [
      "When purchase is 4000 and rewardPoints is 2000",
      "When purchase is 2000 regardless of the value of rewardPoints"
    ]
  },
  {
    "question": "What is the result? public static void main(String[] args) { int point = 10; String s = (point == 1 ? \"point\" : \"points\"); System.out.println(\"I scored \" +point +\" \" +s ); }",
    "correct_options": ["I scored 10 points"]
  },
  {
    "question": "Which two statements are true about the default statement?",
    "correct_options": [
      "When the input does not match any of the cases, the default statement is executed.",
      "A default statement is executed by default when the program is executed."
    ]
  },
  {
    "question": "What is the output? public static void main(String args[]) { char grade ='E'; if (grade == 'A') { System.out.println(\"Excellent performer\"); }else if (grade == 'B') { System.out.println(\"Good Performer\"); }else if (grade == 'C') { System.out.println(\"Average Performer\"); }else { System.out.println(\"Below Average Performer\"); } }",
    "correct_options": ["Below Average Performer"]
  },
  {
    "question": "What is the output? char grade = 'A'; switch (grade) { case 'A': System.out.println(\"Congratulations!\"); case 'B': System.out.println(\"Good work\"); case 'C': System.out.println(\"Average\"); case 'D': System.out.println(\"Barely passing\"); case 'F': System.out.println(\"Failed\"); }",
    "correct_options": [
      "Congratulations! Good Work Average Barely Passing Failed"
    ]
  },
  {
    "question": "The replaceFirst() method replaces only the first occurrence of matching character pattern in a string.",
    "correct_options": ["True"]
  },
  {
    "question": "What is the output? public static void main(String args[]) { String alphaNumeric = \"Java World!\" + 8; System.out.println(alphaNumeric); }",
    "correct_options": ["Java World!8"]
  },
  {
    "question": "What is the output? public static void main(String args[]) { String greeting = \"Java World!\"; String w = greeting.substring(7, 11); System.out.println(w); }",
    "correct_options": ["rld!"]
  },
  {
    "question": "What is the output? public static void main(String args[]) { String greeting = \"Java World!\"; String w = greeting.replace(\"a\", \"A\"); System.out.println(w); }",
    "correct_options": ["JAva World!"]
  },
  {
    "question": "What is the output of the following code? public static void main(String args[]) { String firstString = \"Java\"; firstString = firstString.concat(\"World\"); System.out.println(firstString); }",
    "correct_options": ["JavaWorld"]
  },
  {
    "question": "Which two are the features of the Math class?",
    "correct_options": [
      "Common math functions like square root are taken care of in the language.",
      "The Math methods can be invoked without creating an instance of a Math object."
    ]
  },
  {
    "question": "A String is a sequence of characters.",
    "correct_options": ["True"]
  },
  {
    "question": "How many arguments does the following method accept?public void simpleInterest(double principal, int noofYears, double interestRate){ System.out.println(\"The interest rate is \" +interestRate );}",
    "correct_options": ["3"]
  },
  {
    "question": "Methods allow all instances of a class to share the same behaviors.",
    "correct_options": ["True"]
  },
  {
    "question": "You're designing banking software and need to store 10000 customer accounts with information on the accountholder's name, balance, and interest rate. The best approach is to store 30000 separate variables in the main method.",
    "correct_options": ["False"]
  },
  {
    "question": "Which of the following wild card characters is used to import all the classes in a particular package?",
    "correct_options": ["*"]
  },
  {
    "question": "Once an object is instantiated, how might its fields and methods be accessed in Java?",
    "correct_options": ["Using the dot(.) operator"]
  },
  {
    "question": "Which of the following scenarios would be ideal for writing a method?",
    "correct_options": ["To group similar data types together"]
  },
  {
    "question": "You're designing banking software and need to store 10000 customer accounts with information on the accountholder's name, balance, and interest rate. The best approach is store 30000 separate variables in the main method.",
    "correct_options": ["False"]
  },
  {
    "question": "Given the expression:String message = \"Hello World\";Which is the String Literal?",
    "correct_options": ["Hello World"]
  },
  {
    "question": "What is the output? public static void main(String args[]) {   String greet1 = \"Hello\";   String greet2 = \"World\";   String message2 = greet1 +\" \" +greet2 +\" \" +2016 +\"!\";   System.out.println(message2); }",
    "correct_options": ["Hello World 2016 !"]
  },
  {
    "question": "A double with the value of 20.5 is cast to an int. What is the value of the int?",
    "correct_options": ["20"]
  },
  {
    "question": "Which is a valid way to parse a String as an int?",
    "correct_options": ["int intVar1 = Integer.parseInt(\"100\");"]
  },
  {
    "question": "Which is the correct declaration for a char data type?",
    "correct_options": ["char size = 'M';"]
  },
  {
    "question": "A short data type can be promoted to which of the following types?",
    "correct_options": ["int"]
  },
  {
    "question": "Automatic promotion from smaller data type to a larger data type is not allowed in Java.",
    "correct_options": ["False"]
  },
  {
    "question": "Which of the following data types is the largest?",
    "correct_options": ["long"]
  },
  {
    "question": "What is the output?\n\n```java\npublic class Person {\n   public static void main(String args[]) {\n      int age = 20;\n      System.out.println(\"Value of age: \" + age);\n      age = 5 + 3;\n      System.out.println(\"Value of age: \" + age);\n      age = age + 1;\n      age++;\n      System.out.println(\"Value of age: \" + age);\n   }\n}\n```",
    "correct_options": ["Value of age: 20 Value of age: 8 Value of age: 9"]
  },
  {
    "question": "This declaration represents a long data type. long a = 123L;",
    "correct_options": ["True"]
  },
  {
    "question": "Identify the variable declared in the given code.\n\n```java\npublic class Welcome {\n   public static void main(String args[]) {\n      int a = 2;\n      System.out.println(\"a is \" + a);\n   }\n}\n```",
    "correct_options": ["a"]
  },
  {
    "question": "What is the output?\n\n```java\npublic class Hello {\n  public static void main(String args[]) {\n    String str = \"Hello\";\n    str = \"World\";\n    System.out.println(str);\n  }\n}\n```",
    "correct_options": ["World"]
  },
  {
    "question": "Identify the names of two variables used in the given code.\n\n```java\npublic class Variables {\n   public static main(String args[]) {\n      String strVal = \"Hello\";\n      int intVal = 0;\n      System.out.println(\"Integer: \" + intVal)\n   }\n}\n```",
    "correct_options": ["strVal", "intVal"]
  },
  {
    "question": "Java is a strongly typed language; therefore you must declare a data type for all variables.",
    "correct_options": ["True"]
  },
  {
    "question": "Which two are recommended practices for naming final variables?",
    "correct_options": [
      "Capitalize first letter",
      "Separate words with an underscore"
    ]
  },
  {
    "question": "What is the output?\n\n```java\npublic class Person {\n   public static main(String args[]) {\n      int age = 20;\n      System.out.println(\"Value of age: \" + age);\n      age = 5 + 3;\n      System.out.println(\"Value of age: \" + age);\n      age = age + 1;\n      age++;\n      System.out.println(\"Value of age: \" + age);\n   }\n}\n```",
    "correct_options": ["Value of age: 20 Value of age: 8 Value of age: 9"]
  },
  {
    "question": "Identify the variable declared in the given code.\n\n```java\npublic class Welcome {\n   public static main(String args[]) {\n      int a = 2;\n      System.out.println(\"a is \" + a);\n   }\n}\n```",
    "correct_options": ["a"]
  },
  {
    "question": "What is the output?\n\n```java\npublic static void main(String args[]) {\n   int x = 100;\n   int y = x;\n   y++;\n   System.out.println(\"Value of x is \" + x);\n   System.out.println(\"Value of y is \" + y);\n}\n```",
    "correct_options": ["Value of x is 100 Value of y is 101"]
  },
  {
    "question": "What value is assigned to x?\n\n```java\nint x = 25 - 5 * 4 / 2 - 10 + 4;\n```",
    "correct_options": ["8"]
  },
  {
    "question": "This declaration represents a long data type. `long a = 123L;`",
    "correct_options": ["True"]
  },
  {
    "question": "What is the output?\n\n```java\npublic class Welcome {\n   public static void main(String args[]) {\n      System.out.println(\"This is my first program\");\n      int a = 2;\n      System.out.println(\"a is \" + a);\n   }\n}\n```",
    "correct_options": ["This is my first program", "a is 2"]
  },
  {
    "question": "What is the output?\n\n```java\npublic class Hello {\n   public static void main(String args[]) {\n      String str = \"Hello\";\n      str = \"World\";\n      System.out.println(str);\n   }\n}\n```",
    "correct_options": ["World"]
  },
  {
    "question": "What is the output?\n\n```java\npublic class Person {\n   public static void main(String args[]) {\n      int age = 20;\n      System.out.println(\"Value of age: \" +age);\n      age = 5 + 3;\n      System.out.println(\"Value of age: \" +age);\n      age = age + 1;\n      age++;\n      System.out.println(\"Value of age: \" +age);\n   }\n}\n```",
    "correct_options": ["Value of age: 20 Value of age: 8 Value of age: 10"]
  },
  {
    "question": "Java is a strongly typed language; therefore, you must declare a data type for all variables.",
    "correct_options": ["True"]
  },
  {
    "question": "Identify the names of two variables used in the given code.\n\n```java\npublic class Variables {\n   public static void main(String args[]) {\n      String strVal = \"Hello\";\n      int intVal = 0;\n      System.out.println(\"Integer: \" + intVal)\n   }\n}\n```",
    "correct_options": ["strVal", "intVal"]
  },
  {
    "question": "Which two are the correct syntax for adding comments?",
    "correct_options": [
      "Start with a slash-star (/*). End with a star-slash (*/).",
      "Start with two slashes (//). End when the line ends."
    ]
  },
  {
    "question": "Java mostly reads code line-by-line.",
    "correct_options": ["True"]
  },
  {
    "question": "A Java program can be written in the single line.",
    "correct_options": ["False"]
  },
  {
    "question": "In the code example below, identify any methods: public class Employee { public String name = \" Duke\"; public int empId = 12105; public float salary; public void displaySalary(){ System.out.println(\"Employee Salary: \"+salary); } }",
    "correct_options": ["displaySalary()"]
  },
  {
    "question": "In object-oriented programming, an object comprises properties and behaviors where properties are represented as fields of the object and behavior is represented as a method.",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following three statements is true about breakpoints?",
    "correct_options": [
      "They help with debugging.",
      "They can be used to check the current state of the program",
      "They pause code execution."
    ]
  },
  {
    "question": "Which of the following languages is called a procedural language?",
    "correct_options": ["C"]
  },
  {
    "question": "You have a beautiful garden at home. On Sunday, you start budding your rose plant to make a few more samples of rose plants to plant in the garden. Can you categorize how this scenario could be represented by classes and instances?",
    "correct_options": [
      "Rose plant is the class, and the samples generated from the rose plant are instances of that class."
    ]
  },
  {
    "question": "You design a Circle class with various fields and methods. Which of the following could be fields in this class? Distinguish which of these are between properties and behavior.",
    "correct_options": [
      "calculateDiameter()",
      "calculateCircumference()",
      "radius",
      "color",
      "calculateArea()"
    ]
  },
  {
    "question": "Which of the following are considered Whitespace?",
    "correct_options": [
      "Space between the [ ] braces.",
      "Blank lines in the code.",
      "Space in the print statements.",
      "Indentation before the code.",
      "Space between words."
    ]
  },
  {
    "question": "Which of the following 2 statements is true about whitespace?",
    "correct_options": [
      "Whitespace helps to keep your code organized.",
      "Whitespace makes your code more readable."
    ]
  },
  {
    "question": "In the code example below, identify any methods: public class Employee { public String name = \"Duke\"; public int empId = 12105; public float salary; public void displaySalary(){ System.out.println(\"Employee Salary: \"+salary); } }",
    "correct_options": ["displaySalary()"]
  },
  {
    "question": "In the code example below, identify any methods: public class Employee { public String name = \" Duke\"; public int empId = 12105; public float salary; public void displaySalary(){ System.out.println(\"Employee Salary: \"+salary); }  }",
    "correct_options": ["name", "salary", "displaySalary()"]
  },
  {
    "question": "In object oriented programming, an object comprises of properties and behaviors where properties represented as fields of the object and behavior is represented as method.",
    "correct_options": ["True"]
  },
  {
    "question": "In object oriented programming, there is an emphasis on which of the following two:",
    "correct_options": [
      "Object interaction without a prescribed order.",
      "Modeling objects."
    ]
  },
  {
    "question": "What is the output of the following lines of code? int j=6,k=4,m=12,result; result=j/m*k; System.out.println(result);",
    "correct_options": ["24"]
  },
  {
    "question": "What is the result when the following code segment is compiled and executed? int x = 22, y = 10; double p = Math.sqrt( ( x + y ) /2); System.out.println(p);",
    "correct_options": ["5.656854249492381 is displayed"]
  },
  {
    "question": "Write a declaration statement that will hold a number like 2.541.",
    "correct_options": ["float number;"]
  },
  {
    "question": "You need to _______________ Java code to generate a .class file",
    "correct_options": ["Compile"]
  },
  {
    "question": "The ______________ is the location into which you will store and save your files.",
    "correct_options": ["Workspace"]
  },
  {
    "question": "In a Java IDE, when you run a Java Application, the results may be displayed in the Console View. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "Multiple windows are used when more than one file is open in the edit area. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "What symbols are required for a compiler to ignore a comment?",
    "correct_options": ["//", "/*"]
  },
  {
    "question": "Consider the following code snippet.\n\n \n\n What is printed?",
    "correct_options": ["Cayrbniz"]
  },
  {
    "question": "Consider the following code snippet  String forest = new String(\"Black\");  System.out.println(forest.length());  What is printed?",
    "correct_options": ["5"]
  },
  {
    "question": "The following program prints \"Not Equal\". True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Given the code below, which of the following would equate to true?  String s1 = \"yes\"; String s2 = \"yes\"; String s3 = new String(s1);",
    "correct_options": ["s1 == s2", "s1.equals(s2)"]
  },
  {
    "question": "Which of the following creates a String reference named s and instantiates it?",
    "correct_options": [
      "String s=\"\";",
      "s=\"s\";",
      "String s=new String(\"s\");",
      "String s;"
    ]
  },
  {
    "question": "The following defines a class keyword:",
    "correct_options": [
      "Defines where this class lives relative to other classes, and provides a level of access control."
    ]
  },
  {
    "question": "The following defines an import keyword:",
    "correct_options": [
      "Provides the compiler information that identifies outside classes used within the current class."
    ]
  },
  {
    "question": "Which of the following could be a reason to use a switch statement in a Java program?",
    "correct_options": [
      "Because it allows the program to run certain segments of code and neglect to run others based on the input given."
    ]
  },
  {
    "question": "The following code fragment properly implements the switch statement. True or false? default(input) switch '+': answer+=num; break; case '-': answer-=num; break; !default System.out.println(\"Invalid input\");",
    "correct_options": ["False"]
  },
  {
    "question": "Determine whether this boolean expression evaluates to true or false: !(3 < 4 && 6 > 6 || 6 <= 6 && 7 - 2 == 6)",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following are types of loops in Java?",
    "correct_options": ["for", "while", "do-while"]
  },
  {
    "question": "In a for loop, the counter is automatically incremented after each loop iteration. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "In the code fragment below, the syntax for the for loop's initialization is correct. True or false?public class ForLoop { public static void main (String args[]) { for ((int 1=10) (i<20) (i++)) {  System.out.println (\"i: \" + i);  } } }",
    "correct_options": ["False"]
  },
  {
    "question": "Suppose you are writing a program where the user is prompted to the give coordinates where they believe the princess is inside of the castle. Your program moves the prince to the coordinates that the user specified. If the princess is not found at those coordinates, the user is given a clue that helps them guess coordinates closer to the princess. The user is allowed to enter their new guess of where the princess is. Assume your program does not take into consideration the possibility that the user may enter coordinates outside of the castle where the princess could not be. What would be the result of the user entering coordinates outside of the castle? How could this be handled in your code?",
    "correct_options": [
      "An exception would occur. This could be handled by throwing the exception in your code if the user enters invalid coordinates. When the exception is caught, the prince could be moved to the coordinate inside the castle that is closest to those that the user specified."
    ]
  },
  {
    "question": "If an exception is thrown by a method, where can the catch for the exception be?",
    "correct_options": [
      "The catch can be in the method that threw the exception or in any other method that called the method that threw the exception."
    ]
  },
  {
    "question": "A logic error occurs if an unintentional semicolon is placed at the end of a loop initiation because the interpreter reads this as the only line inside the loop, a line that does nothing. Everything that follows the semicolon is interpreted as code outside of the loop. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "What exception message indicates that a variable may have been mispelled somewhere in the program?",
    "correct_options": [
      "variableName cannot be resolved to a variable",
      "All of the above"
    ]
  },
  {
    "question": "What will array arr contain after the following code segment has been executed?  int [] arr = {5, 4, 2, 1, 0}; for (int i = 1; i < arr.length; i++) { arr[i - 1] += arr[i]; }",
    "correct_options": ["7, 3, 2, 1, 0"]
  },
  {
    "question": "After execution of the following statement, which of the following are true? int number[] = new int[5];",
    "correct_options": ["number[2] is 0"]
  },
  {
    "question": "The following creates a reference in memory named k that can refer to six different integers via an index. True or false? int k[]= int[6];",
    "correct_options": ["False"]
  },
  {
    "question": "Which of the following declares and initializes a one dimensional array named values of size 5 so that all entries contain 1?",
    "correct_options": ["int[] values={1,1,1,1,1};"]
  },
  {
    "question": "Abstract classes cannot implement interfaces. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following are true about an abstract class?",
    "correct_options": [
      "It is identified by the Java keyword abstract.",
      "It is possible to create references of this type."
    ]
  },
  {
    "question": "Which of the following is a goal of the object model?",
    "correct_options": [
      "Data abstraction.",
      "Concealing implementation.",
      "Providing modular code that can be reused by other programs or classes."
    ]
  },
  {
    "question": "If a variable in a superclass is private, could it be directly accessed or modified by a subclass? Why or why not?",
    "correct_options": [
      "No. A private variable can only be modified by the same class with which it is declared regardless of its inheritance."
    ]
  },
  {
    "question": "Which of the following show the correct UML representation of the super class Planet and its subclass Earth?",
    "correct_options": ["None of the above."]
  },
  {
    "question": "Which is the most accurate description of the code reuse philosophy?",
    "correct_options": [
      "A programming philosophy that promotes simpler, more efficient coding by using existing code for new applications."
    ]
  },
  {
    "question": "Which of the following is the proper way to set the public variable length of the super class equal to 5 from inside the subclass?",
    "correct_options": ["super.length = 5"]
  },
  {
    "question": "What is garbage collection in the context of Java?",
    "correct_options": [
      "When all references to an object are gone, the memory used by the object is automatically reclaimed."
    ]
  },
  {
    "question": "Which of the following adds a constructor to the class below?",
    "correct_options": ["None of the above"]
  },
  {
    "question": "Complete the sentence. A constructor...",
    "correct_options": [
      "is used to create objects.",
      "may be declared public.",
      "is all of the above."
    ]
  },
  {
    "question": "The following statement compiles and executes. What do you know for certain? tree.grows(numFeet);",
    "correct_options": ["tree must be the name of the class."]
  },
  {
    "question": "Which constructor code populates the instance variables of the class correctly?",
    "correct_options": ["None of the above"]
  },
  {
    "question": "The following code is a good example of using the this reference. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "Which of the following is the definition for a variable argument method?",
    "correct_options": [
      "A type of argument that enables calling the same method with a different number of arguments.",
      "Having more than one constructor with the same name but different arguments."
    ]
  },
  {
    "question": "Identify the error(s) in the class below. Choose all that apply.",
    "correct_options": [
      "Private cannot be used as an access modifier.",
      "Final cannot be used as an access modifier.",
      "No method named min is defined."
    ]
  },
  {
    "question": "It is possible to have more than one constructor with the same name in a class, but they must have different parameters. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following shows the correct way to initialize a method DolphinTalk that takes in 2 integers, dol1 and dol2, and returns the greater int between the two?",
    "correct_options": [
      "int DolphinTalk(int dol1,int dol2){ if(dol1 > dol2) return dol1; else return dol2;}",
      "All of the above"
    ]
  },
  {
    "question": "Which segment of code correctly defines a method that contains two objects of class Tree as parameters?",
    "correct_options": ["void bloom(Tree pine, Tree oak) {//code here }"]
  },
  {
    "question": "Static methods can read static variables. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Static methods can return any object type. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "Any instance of the same class can assign a new value to a static variable. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "What will be the content of array variable table after executing the following code?",
    "correct_options": ["1 0 0  0 0 0", "1 0 01 1 01 0 1"]
  },
  {
    "question": "Which of the following statements is a valid array declaration?",
    "correct_options": [
      "double[] marks;",
      "float[] average;",
      "int[] number;",
      "int[] counter;"
    ]
  },
  {
    "question": "What is the output of the following segment of code if the command line arguments are \"a b c d e f\"?",
    "correct_options": ["6"]
  },
  {
    "question": "The following array declaration is valid. True or false? int[] y = new int[5];",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following declares and initializes a two-dimensional array?",
    "correct_options": ["int[][] array={{1,1,1},{1,1,1},{1,1,1}};"]
  },
  {
    "question": "Which of the following declares and initializes a one-dimensional array named words of size 10 so that all entries can be Strings?",
    "correct_options": [
      "String[] words=new String[10];",
      "String[] words=new String[10];"
    ]
  },
  {
    "question": "Which of the following declares and initializes a one-dimensional array named words of size 3 so that all entries can be Strings?",
    "correct_options": ["String[] words={\"Over\",\"the\",\"mountain\"};"]
  },
  {
    "question": "The following segment of code prints all five of the command line arguments entered into this program. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following declares and initializes a one-dimensional array that can hold 5 Object reference types?",
    "correct_options": ["Object[] array=new Object[5];"]
  },
  {
    "question": "What is the output of the following segment of code? int array[][] = {{1,2,3},{3,2,1}}; for(int i=0;i<2;i++) for(int j=0;j<3;j++) System.out.print(2*array[1][1]);",
    "correct_options": ["4"]
  },
  {
    "question": "Which of the following would be a correct way to handle an index out of bounds exception?",
    "correct_options": [
      "Rewrite your code to avoid the exception by not permitting the use of an index that is not inside the array.",
      "Throw the exception and catch it. In the catch, set the index to the index of the array closest to the one that was out of bounds."
    ]
  },
  {
    "question": "Which of the following correctly matches the symbol with its function?",
    "correct_options": [
      "== (two equal signs) compares values of primitive types such as int or char.",
      ".equals() compares the value of non-primitive objects.",
      "== (two equal signs) compares the values of non-primitive objects."
    ]
  },
  {
    "question": "What exception message indicates that a variable may have been misspelled somewhere in the program?",
    "correct_options": [
      "variableName cannot be resolved to a variable",
      "All of the above"
    ]
  },
  {
    "question": "Static methods can't change any class variable values at run-time. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "You can assign new values to static variables by prefacing them with the this keyword and a dot or period. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "You can return an instance of a private class through a static method of a different class. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following is the correct way to call an overridden method needOil() of a super class Robot in a subclass SqueakyRobot?",
    "correct_options": ["super.needOil();"]
  },
  {
    "question": "What is encapsulation?",
    "correct_options": [
      "A programming philosophy that promotes protecting data and hiding implementation in order to preserve the integrity of data and methods."
    ]
  },
  {
    "question": "If it is possible to inherit from an abstract class, what must you do to prevent a compiler error from occurring?",
    "correct_options": ["Override all abstract methods from the parent class."]
  },
  {
    "question": "It is possible to override methods such as equals() and toString() in a subclass of Object to fit the needs of the objects of the subclass. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "If an abstract class does not have implemented constructors or methods, it should be implemented as an interface instead. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "It is possible to return an object from a method. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "What type(s) would work for a variable argument method?",
    "correct_options": ["All of the above"]
  },
  {
    "question": "How is it possible for overloading to work?",
    "correct_options": [
      "Java Virtual Machine searches until it finds a constructor name and argument type match."
    ]
  },
  {
    "question": "The constructor method must always have at least one parameter. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "Consider public class YourClass{ public YourClass(int i){/*code*/} // more code...} To instantiate YourClass, what would you write?",
    "correct_options": ["YourClass y = new YourClass(3);"]
  },
  {
    "question": "What operator do you use to call an object's constructor method and create a new object?",
    "correct_options": ["new"]
  },
  {
    "question": "It is possible to throw and catch a second exception inside a catch block of code. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Suppose you are writing a program where the user is prompted to give coordinates where they believe the princess is inside of the castle...",
    "correct_options": [
      "An exception would occur. This could be handled by throwing an exception in your code if the user enters invalid coordinates. When the exception is caught, the user could be prompted to enter coordinates within the given range of the castle.",
      "An error would occur. Errors cannot be handled by code.",
      "An exception would occur. This could be handled by throwing the exception in your code if the user enters invalid coordinates. When the exception is caught, the prince could be moved to the coordinate inside the castle that is closest to those that the user specified.",
      "An exception would occur but could not be handled inside your code. The user would have to restart the program and enter proper coordinates."
    ]
  },
  {
    "question": "Which of the following correctly matches the switch statement keyword to its function?",
    "correct_options": [
      "switch: tells the compiler the value to compare the input against"
    ]
  },
  {
    "question": "In an if-else construct, the condition to be evaluated must be contained within parentheses. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "How would you use the ternary operator to rewrite this if statement?if (skillLevel > 5) numberOfEnemies = 10;else numberOfEnemies = 5;",
    "correct_options": ["numberOfEnemies = (skillLevel > 5) ? 10 : 5;"]
  },
  {
    "question": "Which of the two diagrams below illustrate the correct syntax for variables used in an if-else statement?",
    "correct_options": ["Example A"]
  },
  {
    "question": "How would you use the ternary operator to rewrite this if statement?  if (gender == \"female\") System.out.print(\"Ms.\"); else System.out.print(\"Mr.\");",
    "correct_options": [
      "System.out.print((gender == \"female\") ? \"Ms.\" : \"Mr.\");"
    ]
  },
  {
    "question": "What is the difference between the symbols = and == ?",
    "correct_options": [
      "The = is used to assign values to variables and the == compares values."
    ]
  },
  {
    "question": "One advantage to using a while loop over a for loop is that a while loop always has a counter. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "Which of the following is true about a do-while loop?",
    "correct_options": [
      "It is a modified while loop that allows the program to run through the loop once before testing the boolean condition."
    ]
  },
  {
    "question": "The syntax below represents a valid initialization of a for loop counter. True or False?\npublic class ForLoop { public static void main (String args[]) {  for (int i=10; i <20; i++)  {System.out.println(\"i: \"+i); } }}",
    "correct_options": ["True"]
  },
  {
    "question": "What is one significant difference between a while loop and a do-while loop?",
    "correct_options": [
      "A DO-WHILE loop will always execute the code at least once, even if the conditional statement for the WHILE is never true. A WHILE loop is only executed if the conditional statement is true."
    ]
  },
  {
    "question": "What should replace the comment \"//your answer here\" in the code below if the code is meant to take no action when i % 2 is 0 (in other words when i is even)?\nfor(int i = 0; i < 10; i++){\n  if(i%2 == 0)\n    //your answer here\n  else\n    k+=3;\n}",
    "correct_options": ["continue;"]
  },
  {
    "question": "Identify which situation could be an example of a while loop.",
    "correct_options": [
      "Taking coins out of a pile one at a time and adding their value to the total until there are no more coins in the pile to add."
    ]
  },
  {
    "question": "What will the following code segment output?  String s=\"\";  System.out.println(s);",
    "correct_options": ["\"\""]
  },
  {
    "question": "Suppose that str1 and str2 are two strings. Which of the statements or expressions are valid?",
    "correct_options": ["str1 += str2;"]
  },
  {
    "question": "In a project, 2 of the classes must contain a main method. True or False?",
    "correct_options": ["False"]
  },
  {
    "question": "A _______________ is used to organize Java related files.",
    "correct_options": ["Package"]
  },
  {
    "question": "Given the following declaration:  int z=5,m=6; Which line of Java code properly casts one type into another without data loss?",
    "correct_options": ["double x=(double)z/m;"]
  },
  {
    "question": "Which line of Java code will assign the value of the square root of 11 to a variable named a?",
    "correct_options": ["double a=Math.sqrt(11);"]
  },
  {
    "question": "Examine the following code:\n\n\nWhat is the value of variable x?",
    "correct_options": ["2.5"]
  },
  {
    "question": "Review the code below.\n\n\n\nSelect the result from the following statements about what happens when the loopVal >= 5 .",
    "correct_options": [
      "The message \"Printing Some Text\" will be printed until loopVal is no longer less than 5."
    ]
  },
  {
    "question": "Which of the following statements about what happens when the following code is executed is false?",
    "correct_options": [
      "The condition loopVal < 5 is tested before the block is executed."
    ]
  },
  {
    "question": "In Alice, where does an instance's axes intersect?",
    "correct_options": ["At the instance's center point."]
  },
  {
    "question": "In Alice, if a procedure is declared for a clownFish class, which classes can use the procedure?",
    "correct_options": ["The clownFish class and Swimmer class"]
  },
  {
    "question": "In Alice, you could identify when new procedures need to be declared by reviewing the textual storyboard for the animation. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following is a reason why procedural abstraction may be used in programming an animation?",
    "correct_options": ["The programmer wants to reuse the code."]
  },
  {
    "question": "Which of the following elements of the Alice animation should be tested before the animation is considered complete?",
    "correct_options": ["All of the above."]
  },
  {
    "question": "As the Alice programmer, you render the animation on your own. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "Functions answer questions about an object, such as its height, width, depth and even distance to another object. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In Alice, which of the following programming statements moves the fish forward, the distance to the rock, minus the depth of the rock?",
    "correct_options": [
      "this.Fish move forward {this.Fish getDistanceTo this.Rock - this.Rock getDepth}"
    ]
  },
  {
    "question": "In Alice, which of the following programming statements moves the cat forward the distance to the bird?",
    "correct_options": [
      "this.Cat move forward {this.Cat getDistanceTo this.Bird}"
    ]
  },
  {
    "question": "With keyboard controls, you can create Alice animations where the user controls an object that interacts with other objects. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following is not a type of event listener in Alice?",
    "correct_options": ["Cursor"]
  },
  {
    "question": "Expressions with relational operators produce true and false values. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following is not a relational operator?",
    "correct_options": ["//"]
  },
  {
    "question": "The initializer of a variable with a TextString value type could be (select all that apply):",
    "correct_options": ["None of the above."]
  },
  {
    "question": "In Java code the { } brackets are used to represent what statements?",
    "correct_options": ["begin", "end"]
  },
  {
    "question": "In Alice, when two objects are synchronized and move together, this means that one object is:",
    "correct_options": ["An object of another"]
  },
  {
    "question": "In Alice, Do In Order and Do Together:",
    "correct_options": ["Are control statements"]
  },
  {
    "question": "In Alice, which of the following is not a control statement?",
    "correct_options": ["Move"]
  },
  {
    "question": "In Alice, you must place the control structure in the code editor before adding any code that will go within it. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "The first step to using a top-down approach to programming is to create a table to align the storyboard steps to the programming instructions. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following is not a reason for why comments are helpful in an Alice program?",
    "correct_options": ["Comments change the functionality of the program."]
  },
  {
    "question": "In Alice, where are objects added and positioned in the scene?",
    "correct_options": ["The Scene editor"]
  },
  {
    "question": "Use your Greenfoot knowldege: Abstraction occurs in many different ways in programming. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In Greenfoot, the body of the method is located in between which of the following characters?",
    "correct_options": ["Curly brackets { }"]
  },
  {
    "question": "In Greenfoot, methods can be called in the act method. When the Act button is clicked in the environment, the methods in the method body of the act method are executed. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "From your Greenfoot lessons, which of the following is an example of a type of data passed through a parameter?",
    "correct_options": ["Integers"]
  },
  {
    "question": "From your Greenfoot lessons, instances do not have any memory. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In Greenfoot, which method body correctly adds an instance of the World to a scenario, with size x = 300 y = 300 and a resolution of 2 pixels per cell?",
    "correct_options": ["super(300,300,2);"]
  },
  {
    "question": "In Greenfoot, an if-statement is used to alternate between displaying two images in an instance. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "Using the Greenfoot IDE, when is a constructor automatically executed?",
    "correct_options": ["When a new instance of the class is created."]
  },
  {
    "question": "In Greenfoot, you will not receive an error message if your code is incorrect. It will simply not work, and you will have to determine why the code doesn't work. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "From your Greenfoot lessons, a problem statement defines the purpose for your game. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In Greenfoot, a subclass is created by right-clicking on a superclass. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "Which of the following Java syntax is used to correctly create a Bee subclass?",
    "correct_options": ["public class Bee extends Animal"]
  },
  {
    "question": "Defined methods are methods that are only created by the Greenfoot development team?",
    "correct_options": ["False"]
  },
  {
    "question": "In Greenfoot, which of the following statement is true about Defined Methods?",
    "correct_options": [
      "A defined method must be called by your source code, normally in the Act method."
    ]
  },
  {
    "question": "Which of the following is not a component of a while loop?",
    "correct_options": ["Control operator"]
  },
  {
    "question": "An array is an object that holds multiple methods. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "In Greenfoot, a local variable is declared at the beginning of a class. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "In Greenfoot, what type of symbol is used to connect boolean expressions?",
    "correct_options": ["Logic operators"]
  },
  {
    "question": "From your Greenfoot lessons, when does an if-else statement execute it's second code segment?",
    "correct_options": ["If a condition is false."]
  },
  {
    "question": "The list below displays characteristics of a Greenfoot world constructor, except for one. Which one should be removed?",
    "correct_options": ["Has a void return type."]
  },
  {
    "question": "Use your Greenfoot knowledge: What range of numbers does the following method return? Greenfoot.getRandomNumber(30)",
    "correct_options": ["A random number between 0 and 29."]
  },
  {
    "question": "In Greenfoot, which of the following is the correct notation for calling a method for an instance of a class?",
    "correct_options": ["object-name.method-name(parameters);"]
  },
  {
    "question": "From your Greenfoot lessons, what are the ways that you can view a class's methods?",
    "correct_options": ["In the class's documentation"]
  },
  {
    "question": "In Greenfoot, what happens if the condition is false in an if-statement?",
    "correct_options": ["The programming statements are not executed."]
  },
  {
    "question": "In Greenfoot, you can only interact with the scenario using a keyboard.",
    "correct_options": ["False"]
  },
  {
    "question": "What type of parameter does the Greenfoot playSound method expect?",
    "correct_options": ["name of a sound file (as String)"]
  },
  {
    "question": "When you re-initialize a scenario, Greenfoot automatically displays an instance of the World subclass in the scenario. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following answers have the correct syntax for declaring a class variable in Greenfoot?",
    "correct_options": [
      "private variable-type variable-name;",
      "public variable-type variable-name;"
    ]
  },
  {
    "question": "In Greenfoot you can only access the methods of the current class?",
    "correct_options": ["True"]
  },
  {
    "question": "In Greenfoot, you can cast an Actor class to a World class?",
    "correct_options": ["False"]
  },
  {
    "question": "Writing more generic statements to handle the creation and positioning of many objects is one Abstraction technique?",
    "correct_options": ["True"]
  },
  {
    "question": "In Greenfoot you can interact with the scenario using a mouse.",
    "correct_options": ["True"]
  },
  {
    "question": "In Greenfoot what command would you use to detect if a mouse has been clicked on an actor?",
    "correct_options": ["Greenfoot.mouseClicked(this)"]
  },
  {
    "question": "In Greenfoot, what type of parameter does the isKeyDown method expect?",
    "correct_options": ["String"]
  },
  {
    "question": "To execute a method in your Greenfoot game, where is it called from?",
    "correct_options": ["The act method"]
  },
  {
    "question": "In Greenfoot a collision is when 2 actors touch?",
    "correct_options": ["True"]
  },
  {
    "question": "Which one of the following can be used to detect when 2 actors collide?",
    "correct_options": ["isTouching()"]
  },
  {
    "question": "In Greenfoot, which of the following statements could prevent an infinite loop from occurring?",
    "correct_options": ["i = i + 1"]
  },
  {
    "question": "Which of the following is an example of string concatenation?",
    "correct_options": [
      "Instead of entering \".png\" after each image file name, add + \".png\" after the imageName value in the programming statement."
    ]
  },
  {
    "question": "Variable values can be changed as often as you like. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "From your Alice lessons, variables are fixed and cannot be changed. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "Alice provides pre-populated worlds through which new menu tab?",
    "correct_options": ["Blank Slates", "Starters", "Recent", "File System"]
  },
  {
    "question": "Which of the following IF control structures command the blue tang fish to roll and simultaneously move down if it collides with a shark, or move forward if it does not collide with a shark?",
    "correct_options": [""]
  },
  {
    "question": "Main is an example of what in the following code? public static void main (String[] args) { System.out.println{\"Hello World!\"); }",
    "correct_options": ["A method"]
  },
  {
    "question": "From your Alice lessons, when testing your animation, you should test that comments were added below each sequence of instructions in the code. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following are examples of elements you would test in your Alice animation?",
    "correct_options": [
      "Event listeners trigger the correct responses.",
      "All of the procedures display in alphabetical order in the Procedures tab.",
      "Objects move with smooth timing.",
      "Math expressions calculate as expected."
    ]
  },
  {
    "question": "The animation checklist helps you confirm that all elements of the Alice animation are operating as expected. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following is not a valid arithmetic operator in Java?",
    "correct_options": ["$", "None of the above"]
  },
  {
    "question": "The list below displays valid primitive types in Java, except which one?",
    "correct_options": ["int"]
  },
  {
    "question": "Alice uses built-in math operators; they are:",
    "correct_options": ["All of the above"]
  },
  {
    "question": "In Alice, which of the following programming statements moves the butterfly forward, double the distance to the tree?",
    "correct_options": [
      "this.Butterfly move forward {this.Butterfly getDistanceTo this.Tree * 2}"
    ]
  },
  {
    "question": "In Alice, there is no way of reordering the function list in the function tab. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "In Alice, where would you get access to the specific joints of an object that are not available through the object drop-down menu?",
    "correct_options": [
      "code editor",
      "scene editor",
      "functions tab",
      "procedures tab"
    ]
  },
  {
    "question": "In Alice, the Functions tab will display the pre-defined functions for the selected instance. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "In Alice, each class has a set of pre-defined procedures and functions. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "To add a procedure to myFirstMethod, right-click on the procedure you wish to add and select the Add button. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "In Alice, a computer program requires functions to tell it how to perform the procedure. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "From your Alice lessons, what is the purpose of nesting?",
    "correct_options": [
      "To add visual structure to your program.",
      "To add random movements to your program.",
      "To add more procedures to your program.",
      "To add text to your program that tells the viewer what the code does."
    ]
  },
  {
    "question": "From your Alice lessons, which control statement executes instructions simultaneously?",
    "correct_options": ["Do together"]
  },
  {
    "question": "In Alice, how is a one-shot procedure different from procedures in the Code editor?",
    "correct_options": [
      "One-shot procedures are only available for acting objects, while procedures are available for all objects.",
      "One-shot procedures are available in the Code editor, while procedures are available in the Scene editor.",
      "A one-shot procedure executes only one time to re-position the object, while procedures in the Code editor execute every time the Run button is clicked.",
      "All of the above"
    ]
  },
  {
    "question": "Which handle style would be used to rotate an object's sub-part about the x, y, and z axes?",
    "correct_options": ["Rotation"]
  },
  {
    "question": "In Alice, when a new procedure is declared, all subclasses of the superclass will inherit the procedure. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "Defining the scenario, and the Alice animation to represent the scenario, is the first step to programming your animation. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "In Alice, procedural abstraction is the concept of making code easier to understand and reuse. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "Which button is selected in the Alice file menu to save a different version of an animation?",
    "correct_options": ["Save As..."]
  },
  {
    "question": "Identify the variable declared in the given code. public class Welcome { public static void main(String args[]) { int a = 2; System.out.println(\"a is \" + a); } }",
    "correct_options": ["a"]
  },
  {
    "question": "What is the output? public class Hello { public static void main(String args[]) { String str = \"Hello\"; str = \"World\"; System.out.println(str); }}",
    "correct_options": ["World"]
  },
  {
    "question": "Read the following method signature. Using your Greenfoot experience, what does this method do?  public static int getRandomNumber (int limit)",
    "correct_options": [
      "Returns a random number between zero and the parameter limit."
    ]
  },
  {
    "question": "From your Greenfoot lessons, dot notation allows you to use a method from a different class, if the class you are programming does not possess the method. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In Greenfoot, the origin of the world coordinate system (0,0) starts in the center of the world. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "In Greenfoot, the instance has a source code editor. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "From the Greenfoot IDE, where are inherited methods located?",
    "correct_options": ["In the documentation"]
  },
  {
    "question": "In the Greenfoot IDE, which of the following are components of a parameter?",
    "correct_options": ["Parameter name", "Parameter type"]
  },
  {
    "question": "From your Greenfoot lessons, which of the following are properties of an instance?",
    "correct_options": ["Size", "Color", "Image file", "Methods"]
  },
  {
    "question": "From your Greenfoot lessons, source code is written in the Code editor. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In a Greenfoot if-statement, the programming statements that the if-statement executes are written in curly brackets. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "When designing a game in Greenfoot, it helps to define the actions that will take place in a textual storyboard. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following demonstrates a Greenfoot subclass/superclass relationship?",
    "correct_options": ["A rose is a subclass of the flower superclass."]
  },
  {
    "question": "From your Greenfoot lessons, the reset button resets the scenario back to its initial position. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "A subclass has what kind of relationship to a superclass?",
    "correct_options": ["\"is-a\""]
  },
  {
    "question": "In Greenfoot to create a new instance of a class, you right-click on the class, then select which of the following commands in the class menu?",
    "correct_options": ["new Duke()"]
  },
  {
    "question": "What is the output?public class Welcome { public static void main(String args[]) { System.out.println(\"This is my first program\"); int a = 2; System.out.println(\"a is \" + a); }}",
    "correct_options": ["This is my first program a is 2"]
  },
  {
    "question": "What is the output?public class Hello { public static void main(String args[]) { String str = \"Hello\"; str = \"World\"; System.out.println(str); }}",
    "correct_options": ["World"]
  },
  {
    "question": "What is the output? public static void main(String args[]) { int x = 100; int y = x; y++; System.out.println(\"Value of x is \" + x); System.out.println(\"Value of y is \" + y); }",
    "correct_options": ["Value of x is 100 Value of y is 101"]
  },
  {
    "question": "What is the output? public class Person { public static void main(String args[]) { int age = 20; System.out.println(\"Value of age: \" +age); age = 5 + 3; System.out.println(\"Value of age: \" +age); age = age + 1; age++; System.out.println(\"Value of age: \" +age); } }",
    "correct_options": ["Value of age: 20 Value of age: 8 Value of age: 9"]
  },
  {
    "question": "In object-oriented programming, an object comprises properties and behaviors where properties are represented as fields of the object and behavior is represented as methods.",
    "correct_options": ["True"]
  },
  {
    "question": "The transformations that have occurred in the computing world progressing in this order:",
    "correct_options": [
      "Mainframe Computing, Desktop Computing, Grid Computing, Client/Server Computing."
    ]
  },
  {
    "question": "Which of the following transformations in computing led to the increase in graphical user interface (GUI) applications?",
    "correct_options": ["Desktop Computing"]
  },
  {
    "question": "A database is a centralized and structured set of data stored on a computer system and provides facilities for retrieving, adding, modifying, and deleting the data when required.",
    "correct_options": ["True"]
  },
  {
    "question": "What is the difference between \"information\" and \"data\"?",
    "correct_options": [
      "Data turns into useful information. It is stored in a database and accessed by systems and users."
    ]
  },
  {
    "question": "Which of the following is not a stage in the Database Development Process?",
    "correct_options": ["Reporting"]
  },
  {
    "question": "A ___________ model describes a database in terms of tables, columns, and joins between tables.",
    "correct_options": ["Relational"]
  },
  {
    "question": "A network database comprises of a collection of records connected to one another through links.",
    "correct_options": ["False"]
  },
  {
    "question": "The advantages of an object-oriented data model are:",
    "correct_options": ["Both A and B."]
  },
  {
    "question": "When completing the conceptual modeling process we must take into account the following:",
    "correct_options": ["All of the above"]
  },
  {
    "question": "All Business Rules can be modeled.",
    "correct_options": ["False"]
  },
  {
    "question": "The reason or drive for using databases rather than files has been ...  (Choose 3)",
    "correct_options": [
      "Integration of data for easier access and modification for complex transactions",
      "Availability of data to a diverse set of users",
      "Reduced redundancy of data"
    ]
  },
  {
    "question": "Business ______ are used to understand business processes, and the nature, role, and scope of the data.",
    "correct_options": ["Rules"]
  },
  {
    "question": "Business rules help you understand the standardization procedure an organization follows when handling huge data.",
    "correct_options": ["True"]
  },
  {
    "question": "Which one of the following is not a goal of this course:",
    "correct_options": ["Database performance tuning."]
  },
  {
    "question": "The Oracle Academy courses are intended for self-study. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "A unique identifier must be made up of more than one attribute. True or False?",
    "correct_options": ["False"]
  },
  {
    "question": "What is the purpose of a Unique Identifier?",
    "correct_options": [
      "To identify one unique instance of an entity by using one or more attributes and/or relationships."
    ]
  },
  {
    "question": "The primary key uniquely identifies each row in a table and is based on the __________ from the logical design.",
    "correct_options": ["Primary UID"]
  },
  {
    "question": "People are not born with \"numbers\", but a lot of systems assign student numbers, customer IDs, etc.  A shoe has a color, a size, a style, but may not have a descriptive \"number\". So, to be able to uniquely and efficiently identify one instance of the entity SHOE, a/an ______________ UID can be created.",
    "correct_options": ["Artificial"]
  },
  {
    "question": "Which of the following is not an advantage of a relational database?",
    "correct_options": ["One table with all the data."]
  },
  {
    "question": "In the relational model, relationships between relations or tables are created by using?",
    "correct_options": ["Foreign Keys"]
  },
  {
    "question": "The physical model shows all table structures. True or False.",
    "correct_options": ["True"]
  },
  {
    "question": "The logical model determines relationship optionality and cardinality",
    "correct_options": ["False"]
  },
  {
    "question": "Many reasons exist for creating a conceptual model. Choose three appropriate reasons from the options below.",
    "correct_options": [
      "They model functional and informational needs.",
      "They capture current and future needs.",
      "They capture the data values."
    ]
  },
  {
    "question": "Entity names are always singular. True or False?",
    "correct_options": ["False"]
  },
  {
    "question": "Which of the following statements about attributes are true? (Choose Two)",
    "correct_options": [
      "They describe, qualify, quantify, classify, or specify an entity.",
      "They are the primary container for data."
    ]
  },
  {
    "question": "A/an _________ is a piece of information that in some way describes an entity. It is a property of the entity and it quantifies, qualifies, classifies, or specifies the entity.",
    "correct_options": ["Attribute"]
  },
  {
    "question": "When creating entities in a logical model you must follow these rules: (Choose Two)",
    "correct_options": ["Name them in Singular", "Include Attributes"]
  },
  {
    "question": "A relationship is transformed from logical to a physical model using _________.",
    "correct_options": ["Foreign Keys"]
  },
  {
    "question": "Which of the following is NOT a relationship type?",
    "correct_options": ["Some to None"]
  },
  {
    "question": "Which of the following is NOT an example of cardinality?",
    "correct_options": ["All are examples of cardinality."]
  },
  {
    "question": "The optionality of a relationship must be either _______ or _______.",
    "correct_options": ["Mandatory or Optional"]
  },
  {
    "question": "A model is considered to be Implementation-Free if it can be implemented using ____ of the database software models such as hierarchical, network or relational.",
    "correct_options": ["any"]
  },
  {
    "question": "In an ERD diagram how is cardinality represented ? (Choose two)",
    "correct_options": ["With a crow's foot", "With a solid line"]
  },
  {
    "question": "Using ERDish, which wording represents optionality? (Choose Two)",
    "correct_options": ["may", "mandatory"]
  },
  {
    "question": "In an ERD diagram how is an optional relationship represented ?",
    "correct_options": ["With a crows foot"]
  },
  {
    "question": "Table names can contain all of the following except:",
    "correct_options": ["Spaces"]
  },
  {
    "question": "In a physical data model, an attribute is represented as a/an",
    "correct_options": ["Column"]
  },
  {
    "question": "When converting attribute names to columns __________ are frequently used.",
    "correct_options": ["Abbreviations"]
  },
  {
    "question": "The Rule of 3rd Normal Form states that No Non-UID attribute can be dependent on another non-UID attribute. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "An entity without repeated values is said to be in __________.",
    "correct_options": ["2nd normal form"]
  },
  {
    "question": "A table is in 2NF if",
    "correct_options": ["Both A and B must be true."]
  },
  {
    "question": "\"Only teachers may supervise exams\" is an example of which of the following?",
    "correct_options": [
      "An attribute that is not inherited from the PERSON supertype and is unique to the TEACHER subtype"
    ]
  },
  {
    "question": "A table is in 1NF if ...(Choose 2)",
    "correct_options": [
      "There is only one data value.",
      "Each row contains different columns"
    ]
  },
  {
    "question": "You can only create relationships to a Supertype, not to a Subtype. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "Intersection Entities often have the relationships participating in the UID, so the relationships are often barred. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "All instances of the supertype _____ be an instance of one of the subtypes.",
    "correct_options": ["may"]
  },
  {
    "question": "A ___________ relationship is created when the UID for an entity includes the relationship with another entity.",
    "correct_options": ["recursive"]
  },
  {
    "question": "Which of the following pairs of entities is most likely to be modeled as a M:M relationship?",
    "correct_options": ["PERSON and FINGERPRINT"]
  },
  {
    "question": "Which of the following scenarios should be modeled so that historical data is kept? (Choose two)",
    "correct_options": ["BABY and AGE", "CUSTOMER and PAYMENTS"]
  },
  {
    "question": "The strategies for learning used in this course include:",
    "correct_options": ["Project driven curriculum", "All of the above"]
  },
  {
    "question": "Documenting Business Requirements helps developers control the scope of the system and prevents users from claiming that the new system does not meet their business requirements. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "Business rules are important because_________.",
    "correct_options": [
      "They allow the developer to understand the relationship and constraints of the participating entities",
      "They can become outdated quickly."
    ]
  },
  {
    "question": "If information requirements are clearly communicated during conceptual modeling the following will result:",
    "correct_options": ["A well-designed conceptual model"]
  },
  {
    "question": "A flat file may contain many fields, often, with duplicate data that are prone to data corruption.",
    "correct_options": ["True"]
  },
  {
    "question": "In a _______ database model the data is organized into a tree-like structure and to retrieve data the whole tree needs to be traversed starting from the root node.",
    "correct_options": ["Hierarchical"]
  },
  {
    "question": "In the relational database model, each table name must be unique. The column names in the table must be unique too. You can have two different tables that have column names that are the same.",
    "correct_options": ["True"]
  },
  {
    "question": "Which is the first step in the Database Development Process?",
    "correct_options": ["Strategy and Analysis"]
  },
  {
    "question": "Information is the result of combining, comparing and performing calculations on data.",
    "correct_options": ["True"]
  },
  {
    "question": "Which transformation in computing allows for storage and delivery of applications and data over the internet?",
    "correct_options": ["Cloud Computing"]
  },
  {
    "question": "Today, all industries have a need for database systems. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "A relational database stores information in tables with rows and columns.",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following statements are true? (Choose two)",
    "correct_options": [
      "Relational database systems are the main thrust behind SQL since it provides the language elements needed to tie together the information in the database.",
      "Flat file database structures help eliminate redundant information."
    ]
  },
  {
    "question": "In an ERD, optionality is depicted using __________.",
    "correct_options": ["single toe or crows foot"]
  },
  {
    "question": "Which of the following are true about Cardinality? (Choose two)",
    "correct_options": [
      "Cardinality tells \"how many\".",
      "Cardinality specifies whether something is required or not."
    ]
  },
  {
    "question": "One-to-One relationships have _____________ of one to one in both directions.",
    "correct_options": ["Cardinality"]
  },
  {
    "question": "Which of the following statements does not apply to relational databases?",
    "correct_options": [
      "Relational databases have a strong procedural orientation."
    ]
  },
  {
    "question": "The Physical Model is derived from the Logical Model. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "In a relational database system, the next step after creating a conceptual data model is to convert it to a _________.",
    "correct_options": ["Logical data model"]
  },
  {
    "question": "Unique Identifiers...",
    "correct_options": [
      "Distinguish one instance of an entity from all other instances of that entity"
    ]
  },
  {
    "question": "The conceptual model does all of the following except:",
    "correct_options": ["Documents type of operating system to be used."]
  },
  {
    "question": "Capturing all required data is the only goal of entity relationship modeling.",
    "correct_options": ["False"]
  },
  {
    "question": "An entity may have which of the following?",
    "correct_options": ["Instances"]
  },
  {
    "question": "Which of the attributes is a volatile attribute?",
    "correct_options": ["Date of birth"]
  },
  {
    "question": "Which of the following would be a logical constraint when modeling time for a City entity?",
    "correct_options": [
      "Cites may change their names and/or country association if the borders of a country change."
    ]
  },
  {
    "question": "Attribute names are converted to column names by ________________.",
    "correct_options": ["Replacing spaces with underscores."]
  },
  {
    "question": "The transformation from an ER diagram to a physical design involves changing terminology. Secondary Unique Identifiers become _____.",
    "correct_options": ["Columns"]
  },
  {
    "question": "In a physical data model, a relationship is represented as a combination of: (Choose Two)",
    "correct_options": ["Column", "Foreign Key"]
  },
  {
    "question": "A business rule such as \"We only ship goods after customers have completely paid any outstanding balances on their account\" is best enforced by:",
    "correct_options": [
      "Hiring a programmer to create additional programming code to verify no goods are shipped until the account has been settled in full."
    ]
  },
  {
    "question": "As a database designer, you do not need to worry about where in the datamodel you store a particular attribute; as long as you get it onto the ERD, your job is done. True or False?",
    "correct_options": ["False"]
  },
  {
    "question": "According to ___________, an attribute must be dependent on its entity's entire unique identifier.",
    "correct_options": ["2nd normal form"]
  },
  {
    "question": "If a relationship can NOT be moved between instances of the entities it connects, it is said to be:",
    "correct_options": ["Non-Transferable"]
  },
  {
    "question": "Which of the following statements about subtypes is not true?",
    "correct_options": ["Must have subtypes of its own."]
  },
  {
    "question": "When you resolve a M:M, you simply re-draw the relationships between the two original entities; no new entities are created. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "An arc can also be modeled as Supertype and Subtypes. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "Many to many relationships must be left in the Model. It is important to have them documented as M-M. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "How many subtypes can a supertype have?",
    "correct_options": ["any number"]
  },
  {
    "question": "All ER diagrams must have one of each of the following: (Choose two)",
    "correct_options": [
      "One or more Entities",
      "Relationships between entities"
    ]
  },
  {
    "question": "A ______________ is frequently used to track information about a relationship that changes over time.",
    "correct_options": ["intersection entity"]
  },
  {
    "question": "Modeling historical data is optional. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "Would it be a good idea to model age as an attribute of STUDENT?",
    "correct_options": ["No - it is a volatile attribute"]
  },
  {
    "question": "Normalizing an Entity to 1st Normal Form is done by removing any attributes that contain muliple values. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "Can all constraints be modeled on an ER diagram?",
    "correct_options": [
      "No, and those that cannot be modeled should be listed on a separate document to be handled programmatically"
    ]
  },
  {
    "question": "Why is it important to follow the rules of normalization?",
    "correct_options": ["All of the above."]
  },
  {
    "question": "Attribute names are converted to column names by _________________.",
    "correct_options": ["Replacing spaces with underscores."]
  },
  {
    "question": "In a relational database system, the next step after creating a conceptual data model is to convert it to a _________ .",
    "correct_options": ["Logical data model"]
  },
  {
    "question": "A logical model includes :",
    "correct_options": [
      "Entities, Attributes, Unique Identifiers and Relationships"
    ]
  },
  {
    "question": "Using ERDish, which wording represents cardinality? (Choose Two)",
    "correct_options": ["one or more", "one only"]
  },
  {
    "question": "Which of the following are suitable Entity names? (Choose Two)",
    "correct_options": ["ANIMALS", "DOGS"]
  },
  {
    "question": "Which symbol is used to show that a particular attribute is mandatory?",
    "correct_options": ["*"]
  },
  {
    "question": "Attributes have Instances. True or False?",
    "correct_options": ["False"]
  },
  {
    "question": "The candidate UID that is chosen to identify an entity is called the Primary UID; other candidate UIDs are called Secondary UIDs.",
    "correct_options": [
      "No, each Entity can only have one UID, the secondary one."
    ]
  },
  {
    "question": "A candidate UID that does not get chosen to become the primary UID is called a _________ .",
    "correct_options": ["Secondary UID"]
  },
  {
    "question": "If there is a column missing in an entity - normalization should identify this problem.",
    "correct_options": ["True"]
  },
  {
    "question": "Normalization is the process of organizing the attributes and entities of a relational database to minimize ______________",
    "correct_options": ["All of the above."]
  },
  {
    "question": "Another name for a \"barred relationship\" is ________________.",
    "correct_options": ["Identifying Relationship"]
  },
  {
    "question": "A non-transferable relationship means the detail _____ be changed to point to a new master.",
    "correct_options": ["can not"]
  },
  {
    "question": "The \"Other\" subtype is mandatory. True or False?",
    "correct_options": ["False"]
  },
  {
    "question": "A recursive relationship has cardinality of ___________.",
    "correct_options": ["Cannot be determined without more information."]
  },
  {
    "question": "When mapping arcs a __________ constraint can be written to enforce mutual exclusivity.",
    "correct_options": ["check"]
  },
  {
    "question": "A database interacts with the data and provides the following facilities:",
    "correct_options": ["All of the above."]
  },
  {
    "question": "The technical software requirements for this course include all of the following except:",
    "correct_options": ["All are requirements."]
  },
  {
    "question": "Using a database solution instead of a flat file eliminates all of the following issues except:",
    "correct_options": ["Inconsistency"]
  },
  {
    "question": "A conceptual model includes :",
    "correct_options": [
      "Entities, Attributes, Unique Identifiers and Relationships"
    ]
  },
  {
    "question": "The logical model becomes the blueprint for designing the ________ model",
    "correct_options": ["Physical"]
  },
  {
    "question": "An ERD is an example of a ______ Model.",
    "correct_options": ["Conceptual"]
  },
  {
    "question": "Flat file databases are generally in plain-text form, where each line holds only one record. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "A _____ is a type of database that stores data in a single table.",
    "correct_options": ["Flat file"]
  },
  {
    "question": "All entities must be given a new artificial UID. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following would be good as a Unique Identifier for its Entity? (Choose Three)",
    "correct_options": [
      "Date of birth for Baby",
      "Vehicle Registration Number for Car",
      "ISBN Number for Book"
    ]
  },
  {
    "question": "Which of the following is not a goal of ER modeling:",
    "correct_options": [
      "It is acceptable to include information that is derivable."
    ]
  },
  {
    "question": "Data modeling is performed for the following reasons: (Choose Two)",
    "correct_options": [
      "It helps discussions and reviews.",
      "The ERD becomes a blueprint for designing the actual system."
    ]
  },
  {
    "question": "When mapping a relationship for an ERD relationship names must be included.",
    "correct_options": ["False"]
  },
  {
    "question": "The __________ model includes entities, attributes, UIDs, relationships as well as optionality and cardinality of these items.",
    "correct_options": ["Logical"]
  },
  {
    "question": "Attributes that can be divided into smaller subparts are called________________.",
    "correct_options": ["Composite Attribute"]
  },
  {
    "question": "One-to-Many relationships have cardinality of one or more in both directions. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "The cardinality of a relationship can be _____________. (Choose two)",
    "correct_options": ["one or more", "one to one"]
  },
  {
    "question": "Matrix Diagrams should be developed BEFORE the ERD. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "When is an entity in 2nd Normal Form?",
    "correct_options": [
      "When attributes with repeating or multi-values are removed."
    ]
  },
  {
    "question": "The following statement displays all the rows in the departments table: SELECT ____ FROM departments;",
    "correct_options": ["*"]
  },
  {
    "question": "Which statement displays the last name, salary, and annual compensation of employees where the annual compensation is calculated by multiplying the monthly salary with 15, plus a one-time bonus of $200.",
    "correct_options": [
      "SELECT last_name, salary, 15*salary+200 FROM employees;"
    ]
  },
  {
    "question": "Which SQL key word is used to do ranking in top-n-analysis",
    "correct_options": ["ROWNUM"]
  },
  {
    "question": "Top-n-analysis is used when you want to retrieve only the top number of records from a result set.",
    "correct_options": ["True"]
  },
  {
    "question": "A _______________ is a join condition containing something other than an equality operator.",
    "correct_options": ["NONEQUIJOIN"]
  },
  {
    "question": "Joining tables with the NATURAL JOIN, USING, or ON clauses results in an __________ join. (Choose 2)",
    "correct_options": ["INNER", "OUTER"]
  },
  {
    "question": "The CARTESIAN or CROSS join gets created when a join condition is omitted.",
    "correct_options": ["True"]
  },
  {
    "question": "The ___________ JOIN clause produces the cross-product of two tables.",
    "correct_options": ["CROSS"]
  },
  {
    "question": "Character strings and dates in the WHERE clause must be enclosed with single quotation marks (' ').",
    "correct_options": ["True"]
  },
  {
    "question": "The _______ condition tests for nulls.",
    "correct_options": ["IS NULL"]
  },
  {
    "question": "A database transaction consists of the following except :",
    "correct_options": ["SELECT queries"]
  },
  {
    "question": "A transaction begins when the first DML statement is encountered and ends when one of the following occurs .....",
    "correct_options": ["Either of the above statements"]
  },
  {
    "question": "In a hierarchical database model the data is stored as records that are connected to one another through ________.",
    "correct_options": ["links"]
  },
  {
    "question": "Which is the first step in the Database Development Process ?",
    "correct_options": ["Strategy and Analysis"]
  },
  {
    "question": "A DBMS comprises of the following elements: (Choose 3)",
    "correct_options": [
      "Query language",
      "Data Dictionary",
      "Memory and Storage Management"
    ]
  },
  {
    "question": "Select the business or industry that would not have a need for a database.",
    "correct_options": [
      "All these businesses could benefit from using a database."
    ]
  },
  {
    "question": "Which of the following are reasons we create conceptual models?",
    "correct_options": [
      "It facilitates discussion; a picture is worth a thousand words",
      "It forms important ideal system documentation",
      "It takes into account government regulations and laws",
      "It forms a sound basis for physical database design",
      "All of the above"
    ]
  },
  {
    "question": "When mapping a relationship for an ERD diagram both sides of the relationship have to be mapped.",
    "correct_options": ["True"]
  },
  {
    "question": "A relationship can be between ____________.",
    "correct_options": ["All of the above."]
  },
  {
    "question": "In a relationship , _________ are used to helped describe the meaning of the connection between the entities.",
    "correct_options": ["names"]
  },
  {
    "question": "A foreign key is a column or combination of columns in one table that uniquely identifies a row of another table.",
    "correct_options": ["False"]
  },
  {
    "question": "Each column in a relation is called an entity. True or False?",
    "correct_options": ["False"]
  },
  {
    "question": "Which symbol is used to show that a particular attribute is optional?",
    "correct_options": ["#"]
  },
  {
    "question": "In this course, we use the __________ notation for ERD modeling.",
    "correct_options": ["Barker"]
  },
  {
    "question": "To identify an attribute as part of a unique identifier on an ER diagram, the # symbol goes in front of it. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "ERDish is a language used to create database structures in SQL",
    "correct_options": ["False"]
  },
  {
    "question": "In the relational model, data is organized in a basic storage structure called a ____________.",
    "correct_options": ["Table"]
  },
  {
    "question": "In a business that sells pet food, choose the best relationship name between FOOD TYPE and ANIMAL (e.g. dog, horse, or cat). (Choose Two)",
    "correct_options": [
      "Each FOOD TYPE may be given to one or more ANIMALs.",
      "Each FOOD TYPE may be made from one or more ANIMALs."
    ]
  },
  {
    "question": "The components of a relationship include all of the following except :",
    "correct_options": ["Relational Integrity"]
  },
  {
    "question": "A new system would have a mixture of both Procedural and Structural Business Rules as part of the documentation of that new system. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "Intersection Entities are at the ______ end of the newly created 1:M (Parent:Child) relationship;",
    "correct_options": ["Child"]
  },
  {
    "question": "What do you call the entity created when you resolve a M:M relationship?",
    "correct_options": ["Intersection entity"]
  },
  {
    "question": "Which of the following would best be represented by an arc?",
    "correct_options": ["STUDENT (Grade A student, Average Student)"]
  },
  {
    "question": "We take the primary key from the \"one\" table and place it on the \"many\" table to create a foreign key.",
    "correct_options": ["True"]
  },
  {
    "question": "When mapping a barred relationship a primary key and foreign key can be the same field.",
    "correct_options": ["True"]
  },
  {
    "question": "Primary key constraints should have a suffix of PKEY.",
    "correct_options": ["False"]
  },
  {
    "question": "We can apply naming abbreviations using the .csv file containing the abbreviations",
    "correct_options": ["True"]
  },
  {
    "question": "Foreign key constraints are named using the ______________ of both tables.",
    "correct_options": ["UID suffix"]
  },
  {
    "question": "In Oracle SQL Developer Data Modeler you can select select how you want to map your subtypes.",
    "correct_options": ["True"]
  },
  {
    "question": "You must first select the Logical model you want to work with to Engineer it to a Relational model.",
    "correct_options": ["True"]
  },
  {
    "question": "The main subject areas taught by the Oracle Academy are:",
    "correct_options": ["Data Modeling, SQL, and PL/SQL"]
  },
  {
    "question": "Candidate UIDs must be made up of only one attribute.",
    "correct_options": ["False"]
  },
  {
    "question": "A candidate UID that does not get chosen to become the primary UID is called a _________.",
    "correct_options": ["Secondary UID"]
  },
  {
    "question": "Which of the following entities most likely contains invalid attributes?",
    "correct_options": [
      "Entity: Car. Attributes: Owner Occupation, Owner Salary, Speed"
    ]
  },
  {
    "question": "The logical model's entities, attributes, unique identifiers, and relationships map to the physical model's _________________.",
    "correct_options": ["Tables, columns, primary keys, and foreign keys"]
  },
  {
    "question": "In a relational database, a table is referred to as ..",
    "correct_options": ["A basic storage structure"]
  },
  {
    "question": "Data models are drawn to show users the actual Data that their new system will contain; only Data listed on the Diagram can be entered into the Database. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following statements about entity relationship diagrams (ERD) is true?",
    "correct_options": [
      "Used to communicate the logical structure of the database to users."
    ]
  },
  {
    "question": "In a relationship , _________ are used to help describe the meaning of the connection between the entities.",
    "correct_options": ["descriptions"]
  },
  {
    "question": "_____________ are converted to rows in the physical design.",
    "correct_options": ["attributes"]
  },
  {
    "question": "Business rules are important to data modelers. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "A table is in 3NF if it has met all database requirements for both 1NF and 2NF and all transitive dependencies are eliminated.",
    "correct_options": ["True"]
  },
  {
    "question": "A _________ on a relationship line indicates the Relationship as Non-Tranferable.",
    "correct_options": ["Circle"]
  },
  {
    "question": "Converting a Relational model to a Logical model is called reverse engineering.",
    "correct_options": ["False"]
  },
  {
    "question": "Top-Down Modeling is the approach taken for designing a new database.",
    "correct_options": ["True"]
  },
  {
    "question": "When creating a database based on extracting metadata from an existing database or using the DDL code obtained from an implementation of an existing database, which data modeling approach would you choose?",
    "correct_options": ["Bottom-Up Modeling"]
  },
  {
    "question": "A ______________ in Oracle SQL Developer Data Modeler is a set of accepted terms that can be used in the design.",
    "correct_options": ["glossary"]
  },
  {
    "question": "The glossary can be used as the naming standard for your Logical Model.",
    "correct_options": ["True"]
  },
  {
    "question": "You can define naming standards in Oracle SQL Developer Data Modeler using _______________.",
    "correct_options": [
      "All of the above can be used to define naming standards in Oracle SQL Data Modeler."
    ]
  },
  {
    "question": "Each attribute in an entity maps to a _________ in a table.",
    "correct_options": ["column"]
  },
  {
    "question": "The Oracle SQL Data Modeler enables you to do all of the following except:",
    "correct_options": ["Store application data"]
  },
  {
    "question": "In Oracle SQL Data Modeler, the attribute that you assign as primary UID is automatically set to a mandatory attribute and will be engineered to a primary key in the relational model.",
    "correct_options": ["True"]
  },
  {
    "question": "When building a model in Oracle SQL Data Modeler you begin in the ________ tab.",
    "correct_options": ["Conceptual"]
  },
  {
    "question": "Which of the following is not true regarding normalization:",
    "correct_options": ["It does not impact the performance of the database."]
  },
  {
    "question": "Which of the following is true about subtypes?",
    "correct_options": [
      "One instance of a supertype may belong to two subtypes."
    ]
  },
  {
    "question": "Modeling historical data can produce a unique identifier that includes dates. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "Primary key constraints are named using the __________________.",
    "correct_options": ["UID suffix"]
  },
  {
    "question": "To use the Oracle SQL Developer Data Modeler to apply naming standards :",
    "correct_options": [
      "Use a .csv file containing table names and abbreviations"
    ]
  },
  {
    "question": "In Oracle SQL Developer Data Modeler you can select how you want to map your subtypes.",
    "correct_options": ["True"]
  },
  {
    "question": "A column or combination of columns in one table that refers to a primary key in the same or another table.",
    "correct_options": ["Foreign Key"]
  },
  {
    "question": "The steps to create a glossary from an existing Logical model are :",
    "correct_options": [
      "Right click Logical model, select Create Glossary from Logical Model"
    ]
  },
  {
    "question": "The steps to convert a Logical model to a Relational model using the Oracle SQL Developer Data Modeler are :",
    "correct_options": [
      "Click the Engineer to Relational Model icon, Select the Logical model, Click Engineer, Accept defaults."
    ]
  },
  {
    "question": "Which of the following cannot be modeled using the Oracle SQL Data Modeler ?",
    "correct_options": ["Entities, attributes, UIDs"]
  },
  {
    "question": "The UPDATE statement modifies the values of a specific row or rows if the _______ clause is specified.",
    "correct_options": ["WHERE"]
  },
  {
    "question": "You can delete a row that contains a primary key that is used as a foreign key in another table.",
    "correct_options": ["False"]
  },
  {
    "question": "A collection of DML statements that form a logical unit of work is called a ______________.",
    "correct_options": ["transaction"]
  },
  {
    "question": "If a table already contains rows when a column is added, the new column is initially null or takes the default value for all the rows. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "Table names and column names must begin with a number and should be 1-30 characters long.",
    "correct_options": ["False"]
  },
  {
    "question": "To create a table you must identify all of the following except :",
    "correct_options": ["Field values"]
  },
  {
    "question": "The Data Definition Language performs all of the following except :",
    "correct_options": ["Insert data into tables"]
  },
  {
    "question": "A primary key must contain a value and the value must be _______.",
    "correct_options": ["unique"]
  },
  {
    "question": "All of the following are stages of SQL Processing except:",
    "correct_options": ["Row Source Generation"]
  },
  {
    "question": "You can logically relate data from multiple tables using ___________.",
    "correct_options": ["foreign keys"]
  },
  {
    "question": "Which software is used to manage reading and manipulating a relational database ?",
    "correct_options": ["DBMS software"]
  },
  {
    "question": "You can upload and save a SQL Script from the _____________ option.",
    "correct_options": ["SQL Scripts"]
  },
  {
    "question": "To see selected records from a table we will need to add a ___________ clause to the query.",
    "correct_options": ["WHERE"]
  },
  {
    "question": "Oracle Application Express is an application platform used to share and learn _____ and __________.",
    "correct_options": ["SQL, PL/SQL"]
  },
  {
    "question": "You can use Application Express (APEX) for ...",
    "correct_options": ["APEX can be used for both of the above functions"]
  },
  {
    "question": "The ORDER BY clause must be placed before the WHERE clause in a SQL statement.",
    "correct_options": ["True"]
  },
  {
    "question": "Which statements are not true? (Choose 2)",
    "correct_options": [
      "You cannot use a column alias in the ORDER BY clause.",
      "You cannot sort query results by more than one column."
    ]
  },
  {
    "question": "An automatic commit occurs when _________ . (Choose 2)",
    "correct_options": [
      "A DDL statement is executed.",
      "A DML statement is executed."
    ]
  },
  {
    "question": "The Oracle server ensures data consistency based on transactions.",
    "correct_options": ["True"]
  },
  {
    "question": "Which two statements are correct?",
    "correct_options": [
      "Keywords cannot be abbreviated or split across lines.",
      "Keywords can be abbreviated or split across lines."
    ]
  },
  {
    "question": "The DESCRIBE command describes the results of a query.",
    "correct_options": ["False"]
  },
  {
    "question": "You can display all columns of data in a table by following the SELECT keyword with an asterisk (*).",
    "correct_options": ["True"]
  },
  {
    "question": "You can display selected columns of a table by listing them in the __________ clause.",
    "correct_options": ["SELECT"]
  },
  {
    "question": "Will the following statement execute successfully (True or False)? SELECT e.employee_id, e.last_name, e.department_id, d.department_id, d.location_id FROM employees e JOIN departments d ON (e.department_id = d.department_id);",
    "correct_options": ["True"]
  },
  {
    "question": "We must use the ON clause to join three tables.",
    "correct_options": ["True"]
  },
  {
    "question": "The __________ clause can be used to match columns with the same name, but different data types.",
    "correct_options": ["USING"]
  },
  {
    "question": "Which of the following is the wildcard used for any number of characters in SQL?",
    "correct_options": ["%"]
  },
  {
    "question": "According to the rules of precedence which operator will be evaluated first?",
    "correct_options": ["Both are on the same level of precedence."]
  },
  {
    "question": "In Oracle SQL Data Modeler, the attribute that you assign as the primary UID is automatically set to a mandatory attribute and will be engineered to a primary key in the relational model.",
    "correct_options": ["True"]
  },
  {
    "question": "When building a model in Oracle SQL Data Modeler, you begin in the ________ tab.",
    "correct_options": ["Relational"]
  },
  {
    "question": "The steps to convert a Relational model to a Logical model using the Oracle SQL Developer Data Modeler are :",
    "correct_options": [
      "Select the Relational model, Accept defaults, Click the Engineer to Logical Model icon, Click Engineer"
    ]
  },
  {
    "question": "When mapping subtypes to tables, we can ________",
    "correct_options": ["Either one or multiple tables are valid options."]
  },
  {
    "question": "An Entity Relationship model does not highlight the physical and database constraints. It is essential to transform the ER model into a relational model which can serve as the basis for defining the physical implementation of the database.",
    "correct_options": ["True"]
  },
  {
    "question": "Which constraint specifies that the column (or combination of columns) must contain a unique value AND IS NOT NULL for all rows?",
    "correct_options": ["UNIQUE KEY"]
  },
  {
    "question": "Columns without the NOT NULL constraint can contain null values by default.",
    "correct_options": ["True"]
  },
  {
    "question": "What does the following statement do:  ALTER TABLE DEPT_TEST  ADD CONSTRAINT unq_dept_det UNIQUE (DEPT_ID, DEPARTMENT_NAME) ;",
    "correct_options": [
      "It alters the DEPT_TEST table to add a composite unique key comprising of the DEPT_ID and DEPARTMENT_NAME."
    ]
  },
  {
    "question": "You use the __________ option to mark one or more columns as unused.",
    "correct_options": ["SET UNUSED"]
  },
  {
    "question": "Which operator is used to display rows based on an ordered range of values?",
    "correct_options": ["BETWEEN"]
  },
  {
    "question": "The ______ operator requires either of the component conditions to be true.",
    "correct_options": ["OR"]
  },
  {
    "question": "According to the rules of precedence, which operator will be evaluated first?",
    "correct_options": ["Both are on the same level of precedence."]
  },
  {
    "question": "You can override the default order by using parentheses around the expressions that you want to calculate first.",
    "correct_options": ["True"]
  },
  {
    "question": "To see selected records from a table, we will need to add a ___________ clause to the query.",
    "correct_options": ["WHERE"]
  },
  {
    "question": "In the SQL Commands option of APEX, you can run more than one SQL command at a time.",
    "correct_options": ["True"]
  },
  {
    "question": "In the SQL Workshop/SQL Commands ___________ tab, you can view and retrieve previously run queries.",
    "correct_options": ["History"]
  },
  {
    "question": "If an arithmetic expression contains more than one operator, __________ are evaluated first.",
    "correct_options": ["exponentiation"]
  },
  {
    "question": "Null is the same as zero or a blank space. True or False?",
    "correct_options": ["False"]
  },
  {
    "question": "Selecting specific columns from a table to be displayed in a query is called _____________.",
    "correct_options": ["projection"]
  },
  {
    "question": "A literal can be all of the following except :",
    "correct_options": ["a calculation"]
  },
  {
    "question": "You can create a marker in the current transaction by using the SAVEPOINT statement.",
    "correct_options": ["True"]
  },
  {
    "question": "With the __________ and ROLLBACK statements, you have control over making changes to the data permanent",
    "correct_options": ["COMMIT"]
  },
  {
    "question": "Which of the following statements is an example of a SELF JOIN?",
    "correct_options": [
      "SELECT worker.last_name emp, manager.last_name mgr FROM employees worker JOIN employees manager ON (worker.manager_id = manager.employee_id);"
    ]
  },
  {
    "question": "Why will the following statement result in an error? SELECT l.city, d.department_name FROM locations l JOIN departments d USING (location_id) WHERE d.location_id = 1400;",
    "correct_options": [
      "The field in the USING clause cannot have a qualifier."
    ]
  },
  {
    "question": "The __________ JOIN clause produces the cross-product of two tables.",
    "correct_options": ["CROSS"]
  },
  {
    "question": "What type of join is the following statement? SELECT e.EMPLOYEE_ID, e.LAST_NAME, d.DEPARTMENT_ID, d.DEPARTMENT_NAME, d.LOCATION_ID FROM EMPLOYEES e, DEPARTMENTS d;",
    "correct_options": ["CROSS JOIN"]
  },
  {
    "question": "A foreign key value must match an existing primary key value; otherwise, it must be null.",
    "correct_options": ["True"]
  },
  {
    "question": "The stages of SQL processing are Parsing, Optimization, Row Source Generation, and ____________ .",
    "correct_options": ["Execution"]
  },
  {
    "question": "Which software is used to manage reading and manipulating a relational database?",
    "correct_options": ["DBMS software"]
  },
  {
    "question": "The type of SQL Command used to define database structures is :",
    "correct_options": ["DDL"]
  },
  {
    "question": "Which is the correct order of execution for statements in a SELECT query ?",
    "correct_options": ["FROM, WHERE, SELECT, ORDER BY"]
  },
  {
    "question": "Which SQL keyword is used to do ranking in top-n-analysis",
    "correct_options": ["ROWNUM"]
  },
  {
    "question": "In a SELECT statement, the ________ clause can be used to sort the rows.",
    "correct_options": ["ORDER BY"]
  },
  {
    "question": "___________________ is used to add, modify and delete data.",
    "correct_options": ["Data Manipulation Language"]
  },
  {
    "question": "The command that always removes all rows from a table, leaving the table empty and the table structure intact is ...",
    "correct_options": ["TRUNCATE"]
  },
  {
    "question": "It is not mandatory to specify the column list in the INSERT statement. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "Data Manipulation Language includes all of the following except :",
    "correct_options": ["COMMIT"]
  },
  {
    "question": "SQL *Plus is being used in the Oracle Academy courses to run SQL code. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "When mapping a many to many relationship it must first be resolved using _____________.",
    "correct_options": ["An intermediary entity"]
  },
  {
    "question": "________ Engineering is the process of transforming a Logical Data Model to a Relational Model.",
    "correct_options": ["Forward"]
  },
  {
    "question": "Constraints should be given meaningful names to make them easier to reference.",
    "correct_options": ["True"]
  },
  {
    "question": "When mapping subtypes to tables we can ________",
    "correct_options": ["Either one or multiple tables are valid options."]
  },
  {
    "question": "To define naming templates in Oracle SQL Data Modeler:",
    "correct_options": ["Right click the name of the design in object browser"]
  },
  {
    "question": "Literals can be used within a SELECT statement .",
    "correct_options": ["True"]
  },
  {
    "question": "Which column alias will cause an error?",
    "correct_options": ["SELECT last_name \"Last Name\" FROM employees;"]
  },
  {
    "question": "To eliminate duplicate rows in the result, include the _________ keyword in the SELECT clause.",
    "correct_options": ["DISTINCT"]
  },
  {
    "question": "The following statement will execute successfully (true or false): SELECT employee_id, last_name, salary*12 annsal FROM employees ORDER BY annsal ;",
    "correct_options": ["True"]
  },
  {
    "question": "A join between two tables that returns the results of an INNER join as well as the results of a left and right join is a ______________ join.",
    "correct_options": ["FULL OUTER"]
  },
  {
    "question": "Will the following statement execute successfully (True or False)? SELECT employee_id, city, department_name FROM employees e JOIN departments d ON d.department_id = e.department_id JOIN locations l ON d.location_id = l.location_id;",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following statements is syntactically correct?",
    "correct_options": ["Both statements are syntactically correct."]
  },
  { "question": "A row is called a record.", "correct_options": ["False"] },
  {
    "question": "Which of the following statements is true regarding Implementation-Free logical models?",
    "correct_options": [
      "The model stays the same regardless of the DBMS or operating system used."
    ]
  },
  {
    "question": "An ERD created using ERDish is a __________ representation of entities and their relationships to each other.",
    "correct_options": ["graphical"]
  },
  {
    "question": "Primary UIDs are:",
    "correct_options": [
      "Useful as an alternative means of identifying instances of an entity, independent of their datatype"
    ]
  },
  {
    "question": "A table must have a primary key. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "ERDish includes the following except:",
    "correct_options": ["Data Values."]
  },
  {
    "question": "Entity Boxes are drawn on an ERD using what type of shape?",
    "correct_options": ["Rectangles"]
  },
  {
    "question": "Entities are usually _____________.",
    "correct_options": ["Nouns"]
  },
  {
    "question": "Matrix Diagrams are used to verify that all ____________ have been identified for an ERD.",
    "correct_options": ["entities"]
  },
  {
    "question": "A _________ on a relationship line indicates the Relationship as Non-Transferable.",
    "correct_options": ["Diamond"]
  },
  {
    "question": "Arcs are used to visually represent _________ between two or more relationships in an ERD.",
    "correct_options": ["Exclusivity"]
  },
  {
    "question": "Sources of business rules include all of the following except:",
    "correct_options": ["Word of mouth"]
  },
  {
    "question": "Normalizing an Entity to 1st Normal Form is done by removing any attributes that contain multiple values. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "An entity name is converted to a table name by making it plural.",
    "correct_options": ["True"]
  },
  {
    "question": "All relationships participating in an arc must be mandatory. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "Transferable relationships can only be mandatory, not optional. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "When mapping a barred relationship, a primary key and foreign key can be the same field.",
    "correct_options": ["True"]
  },
  {
    "question": "The UIDs for a set of hierarchical entities can be propagated through multiple ________ relationships.",
    "correct_options": ["recursive"]
  },
  {
    "question": "The transformation from an ER diagram to a physical design involves changing terminology. Primary Unique Identifiers in the ER diagram become __________ and relationships become ____________.",
    "correct_options": ["Unique Keys, Primary keys"]
  },
  {
    "question": "_______ Engineering is the process of creating a conceptual or logical model by extracting the information from an existing data source.",
    "correct_options": ["Reverse"]
  },
  {
    "question": "A Relational model is closer to the implementation solution, facilitates discussion and forms the basis for the physical database design.",
    "correct_options": ["True"]
  },
  {
    "question": "A ___________ model is the blueprint to the actual database implementation and can be used as the basis for implementing any type of Database Management System (DBMS).",
    "correct_options": ["Logical"]
  },
  {
    "question": "When you _______ a table, the database loses all the data in the table.",
    "correct_options": ["DROP"]
  },
  {
    "question": "Once you have created a table, you can use the ________________ command to confirm that it was created. (Choose 2)",
    "correct_options": ["DESCRIBE", "SELECT"]
  },
  {
    "question": "You can name a constraint or the Oracle server generates a name by using the SYS_Cn format.",
    "correct_options": ["True"]
  },
  {
    "question": "Any column that is not listed explicitly obtains a null value in the new row unless we have _________ values for the missing columns that are used.",
    "correct_options": ["DEFAULT"]
  },
  {
    "question": "The TRUNCATE statement is a data definition language (DDL) statement and generates no rollback information.",
    "correct_options": ["True"]
  },
  {
    "question": "In a basic query, following the word FROM comes the fields to be displayed.",
    "correct_options": ["True"]
  },
  {
    "question": "To see all the fields and records in the employees table you can run the following query :",
    "correct_options": ["SELECT * FROM employees;"]
  },
  {
    "question": "In APEX SQL Workshop and Object Browser options you can view table layouts.",
    "correct_options": ["True"]
  },
  {
    "question": "A __________ can be found at the intersection of a row and column and contains one value.",
    "correct_options": ["field"]
  },
  {
    "question": "Functions of SQL are:",
    "correct_options": ["Both of the above options are functions of SQL"]
  },
  {
    "question": "Relational Databases store data in a two-dimensional matrix known as a _________.",
    "correct_options": ["table"]
  },
  {
    "question": "The stages of SQL processing are Parsing, Optimization, Row Source Generation and _____________ .",
    "correct_options": ["Execution"]
  },
  {
    "question": "A foreign key value must match an existing primary key value otherwise, it must be null.",
    "correct_options": ["True"]
  },
  {
    "question": "The _________ clause in a query comes immediately after the SELECT and FROM.",
    "correct_options": ["WHERE"]
  },
  {
    "question": "In the SQL Workshop/SQL Commands ___________ tab you can view and retrieve previously run queries.",
    "correct_options": ["History"]
  },
  {
    "question": "Constraints cannot be added to a table after its creation.",
    "correct_options": ["True"]
  },
  {
    "question": "When altering a table, you can decrease the width of a column if ...(Choose 3)",
    "correct_options": [
      "The table has no rows",
      "The column contains numeric values",
      "The column contains only null values"
    ]
  },
  {
    "question": "DDL means :",
    "correct_options": ["Data Definition Language"]
  },
  {
    "question": "Which column alias is invalid?",
    "correct_options": [
      "First Name",
      "First_Name",
      "\"FIRST NAME\"",
      "\"First Name\""
    ]
  },
  {
    "question": "What is the result?\n\npublic static void main(String[] args) {\n  for (;;) {\n    System.out.println(\"Welcome to Java\");\n  }\n}",
    "correct_options": [
      "Program prints \"Welcome to Java\" an infinite number of times."
    ]
  },
  {
    "question": "All overloaded methods share the same name.",
    "correct_options": ["True"]
  },
  {
    "question": "Given the method: void add(double a, double b) Which method signature would not overload this method?",
    "correct_options": ["void add(String a, String b)"]
  },
  {
    "question": "How would you complete this code so that one add method calls the other add method?\n\npublic int add(int a, int b, int c) {\n  return(a+b+c);\n}\npublic int add(int a, int b){\n  //Complete this line.\n}",
    "correct_options": ["return add(a, b, c);"]
  },
  {
    "question": "Access and visibility of a class should be limited as much as possible.",
    "correct_options": ["True"]
  },
  {
    "question": "To make fields directly accessible to all other classes, the class fields must be marked public.",
    "correct_options": ["False"]
  },
  {
    "question": "The fields and methods of the Math class cannot be directly accessed as they are static.",
    "correct_options": ["True"]
  },
  {
    "question": "You never need to instantiate a Math object.",
    "correct_options": ["True"]
  },
  {
    "question": "Which two statements are true about objects of the same class?",
    "correct_options": [
      "Each new instance of an object will have a different location in memory.",
      "All objects of the same class have the same methods."
    ]
  },
  {
    "question": "Java automatically clears the memory once occupied by an object using garbage collection.",
    "correct_options": ["True"]
  },
  {
    "question": "Objects are accessed using reference variables.",
    "correct_options": ["True"]
  },
  {
    "question": "What will happen when you try to access an object reference with a null value?",
    "correct_options": ["NullPointerException."]
  },
  {
    "question": "If fields aren't initialized, they take on a default value.",
    "correct_options": ["True"]
  },
  {
    "question": "How could you write the Employee constructor so that its parameters are named the same as the fields they're initializing?\n\npublic class Employee{\n  private String name;\n  private double salary;\n  public Employee(String name, double salary){\n    //initialize name\n    //initialize salary\n  }\n}",
    "correct_options": [
      "public Employee(String name, double salary){\n  this.name = name;\n  this.salary = salary;\n}"
    ]
  },
  {
    "question": "Which has a default value of null?",
    "correct_options": ["String"]
  },
  {
    "question": "An object reference with a null value points to an empty location in memory.",
    "correct_options": ["False"]
  },
  {
    "question": "Which two statements are true about the main method?",
    "correct_options": [
      "The main method should be as simple as possible.",
      "The main method is commonly used to instantiate objects."
    ]
  },
  {
    "question": "How can you retrieve a value from a method?",
    "correct_options": [
      "Use a return statement and define the method's return type as non-void"
    ]
  },
  {
    "question": "Variables created within a method can be accessed outside that method.",
    "correct_options": ["False"]
  },
  {
    "question": "You can access elements in an ArrayList by their index.",
    "correct_options": ["True"]
  },
  {
    "question": "Which two are limitations of an array of primitives (ie: int[] x)?",
    "correct_options": [
      "You cannot overwrite the contents of an array once initialized.",
      "The size of the array is fixed during array creation and cannot grow once initialized."
    ]
  },
  {
    "question": "How could you declare an ArrayList so that it can store true or false values?",
    "correct_options": ["ArrayList<Boolean> arrList = new ArrayList<>();"]
  },
  {
    "question": "The size of an ArrayList can grow as needed.",
    "correct_options": ["True"]
  },
  {
    "question": "What are two disadvantages of adding print statements for debugging?",
    "correct_options": [
      "Print statements cannot print the values of variables.",
      "Too many print statements lead to information overload."
    ]
  },
  {
    "question": "Which is not a compilation error?",
    "correct_options": ["int x=2"]
  },
  {
    "question": "Identify where there is a potential bug in this code:\n\nint radiusOfCircle = 10;\nint areaOfCircle = Math.PI * radiusOfCircle * radiusOfCircle;",
    "correct_options": ["A semi-colon is missing."]
  },
  {
    "question": "What are two advantages of adding print statements for debugging?",
    "correct_options": [
      "You can identify which methods have been called.",
      "You can identify the order in which methods have been called."
    ]
  },
  {
    "question": "What happens when you don't handle an exception?",
    "correct_options": ["The execution of the program is terminated abruptly."]
  },
  {
    "question": "What is the danger of catching a generic Exception type as shown below?\n\nint[] array = {10, 20, 30};\nint b = 0;\ntry{\n  System.out.println(\"1\");\n  int c = (array[3] / b);\n  System.out.println(\"2\");\n}\ncatch(Exception ex){\n  System.out.println(ex.toString());\n}",
    "correct_options": [
      "The details of the Exception object ex are too general to be useful."
    ]
  },
  {
    "question": "The Java compiler does not check for an ArrayIndexOutOfBoundsException during the compilation of a program containing arrays.",
    "correct_options": ["False"]
  },
  {
    "question": "An array allows you to create a single identifier that can be used to organize many items of the same data type.",
    "correct_options": ["True"]
  },
  {
    "question": "Arrays are like variables which must be declared prior to use.",
    "correct_options": ["True"]
  },
  {
    "question": "Given: int x[]; What is the value of x?",
    "correct_options": ["null"]
  },
  {
    "question": "How would you set the title of the Stage primaryStage?",
    "correct_options": ["primaryStage.setTitle(\"New Title!\");"]
  },
  {
    "question": "JavaFX is used to create GUI applications.",
    "correct_options": ["True"]
  },
  {
    "question": "Which is not a JavaFX Node?",
    "correct_options": ["Object"]
  },
  {
    "question": "Which method is used to for mouse click events?",
    "correct_options": ["setOnMouseClicked()"]
  },
  {
    "question": "When you write code for MouseEvents, you are telling a Node to listen for a particular event.",
    "correct_options": ["True"]
  },
  {
    "question": "Lambda Expressions provide much more effective and cleaner syntax for working with GUI applications and sorting lists.",
    "correct_options": ["True"]
  },
  {
    "question": "Which is the correct syntax to instantiate a JavaFX Rectangle?",
    "correct_options": ["Rectangle rect = new Rectangle(20, 20, 100, 200);"]
  },
  {
    "question": "The JavaFX API contains descriptions of Java FX features.",
    "correct_options": ["True"]
  },
  {
    "question": "The Java compiler automatically promotes byte, short, and char data type values to int data type.",
    "correct_options": ["True"]
  },
  {
    "question": "You write a statement that assigns a value to a String variable as shown below.String input = \"This is Java Program\"; This way of assigning values to variables is known as hard-coding.",
    "correct_options": ["False"]
  },
  {
    "question": "How many arguments does the following method accept?public void simpleInterest(double principal, int noofYears, double interestRate){  System.out.println(\"The interest rate is \" +interestRate );}",
    "correct_options": ["3"]
  },
  {
    "question": "In the code example below, identify any methods:\n\npublic class Employee {\n  public String name = \" Duke\";\n  public int empId = 12105;\n  public float salary;\n  public void displaySalary(){\n    System.out.println(\"Employee Salary: \"+salary);\n  }\n}",
    "correct_options": ["displaySalary()"]
  },
  {
    "question": "These two code fragments perform the same task.\n\n// Fragment 1\nString inputString = JOptionPane.showInputDialog(\"??\");\nint input = Integer.parseInt(inputString);\ninput++;\n\n// Fragment 2\nint input = Integer.parseInt(JOptionPane.showInputDialog(\"??\")) + 1;",
    "correct_options": ["True"]
  },
  {
    "question": "Identify the variable declared in the given code.\n\npublic class Welcome {\n   public static void main(String args[]) {\n    int a = 2;\n    System.out.println(\"a is \" + a);\n   }\n}",
    "correct_options": ["a"]
  },
  {
    "question": "What is the output?\n\npublic static void main(String args[]) {\n    int x = 100;\n    int y = x;\n    y++;\n    System.out.println(\"Value of x is \" + x);\n    System.out.println(\"Value of y is \" + y);\n}",
    "correct_options": ["Value of x is 100 Value of y is 101"]
  },
  {
    "question": "You need to generate random integer values in the range 2 through 10. This code fragment will produce the desired result.\n\nRandom r = new Random();\n r.nextInt(9) + 2;",
    "correct_options": ["True"]
  },
  {
    "question": "What is the output?\n\npublic static void main(String args[]) {\n    String greeting = \"Java World!\";\n    String w = greeting.substring(7, 11);\n    System.out.println(w);\n}",
    "correct_options": ["orld!"]
  },
  {
    "question": "What is the output?\n\npublic static void main(String args[]) {\n    char ch ='c';\n    switch(ch) {\n      case 'a':\n      case 'e':\n      case 'i':\n      case 'o':\n      case 'u':\n        System.out.println(\"Vowels\");\n        break;\n      default:\n        System.out.println(\"Consonants\");\n    }\n}",
    "correct_options": ["Consonants"]
  },
  {
    "question": "In the OR (||) test, if the first expression on the left-hand side is true then there is no need to evaluate the second statement.",
    "correct_options": ["True"]
  },
  {
    "question": "A customer is eligible for a discount based on certain criteria. Under what conditions does \"You qualify for a discount\" print? (Hint: There may be more than one correct answer)\n\nint purchase;\nint rewardPoints;\nif (purchase >= 2000 || rewardPoints >= 4000) {\n   System.out.println(\"You qualify for discount\");\n}",
    "correct_options": [
      "When purchase is 2000 regardless of the value of rewardPoints",
      "When rewardPoints is more than 2000 or purchase is greater than 1000"
    ]
  },
  {
    "question": "What is the output? public class Person {    public static void main(String args[]) {   int age = 20;   System.out.println(\"Value of age: \" +age);   age = 5 + 3;   System.out.println(\"Value of age: \" +age);   age = age + 1;   age++;   System.out.println(\"Value of age: \" +age);   } }",
    "correct_options": ["Value of age: 20 Value of age: 8 Value of age: 9"]
  },
  {
    "question": "Identify the names of two variables used in the given code. public class Variables { public static void main(String args[]) { String strVal = \"Hello\"; int intVal = 0; System.out.println(\"Integer: \" +intVal) } }",
    "correct_options": ["strVal", "intVal"]
  },
  {
    "question": "What is the output? public class Welcome { public static void main(String args[]) { System.out.println(\"This is my first program\"); int a = 2; System.out.println(\"a is \" + a); }}",
    "correct_options": [
      "This is my first program",
      "This is my first program a is 2"
    ]
  },
  {
    "question": "Automatic promotion from a smaller data type to a larger data type is not allowed in Java.",
    "correct_options": ["False"]
  },
  {
    "question": "The import statement consists of two parts.  import package.className; One is the package name and the other is the classname.",
    "correct_options": ["True"]
  },
  {
    "question": "An employee is eligible for a bonus based on certain criteria. Under what conditions does \"Eligible for a bonus\" print?int rating;int experience;if (rating > 1 && experience == 5) {   System.out.println (\"Eligible for a bonus\");}",
    "correct_options": ["5 experience and 1 rating"]
  },
  {
    "question": "What is the result? public static void main(String[] args) {    int point = 10;    String s = (point == 1 ? \"point\" : \"points\");    System.out.println(\"I scored \" +point +\" \" +s );  }",
    "correct_options": ["I scored 10 points"]
  },
  {
    "question": "In the given syntax of for loop, which part represents the header section?  for (initialization; condition; update) {  // Code statement(s) }",
    "correct_options": ["for (initialization; condition; update)"]
  },
  {
    "question": "What is the result? public static void main(String[] args) {      for (;;) {       System.out.println(\"Welcome to Java\");     }  }",
    "correct_options": [
      "Program prints \"Welcome to Java\" an infinite number of times."
    ]
  },
  {
    "question": "What is the output?\n\npublic static void main(String[] args) {\n     int num = 1;\n     while (num >= 200){\n       System.out.print(num + \" \");\n       num = num * 5;\n     }\n  }",
    "correct_options": ["No output."]
  },
  {
    "question": "What is the result?\n\npublic static void main(String[] args) {\n      for (;;) {\n       System.out.println(\"Welcome to Java\");\n     }\n  }",
    "correct_options": [
      "Program prints \"Welcome to Java\" an infinite number of times."
    ]
  },
  {
    "question": "Which two operators cannot be used as the conditional expression in a for loop?",
    "correct_options": ["!>", "!<"]
  },
  {
    "question": "What is the result?  public static void main(String[] args) {   for (int var1 = 0; var1 < 2; var1++) {    for (int var2 = 0; var2 < 2; var2++) {     if (var2 == 2) {      continue;     }    System.out.println(\"var1:\" + var1 + \", var2:\" + var2);    }   } }",
    "correct_options": [
      "var1: 0, var2: 0",
      "var1: 0, var2: 1",
      "var1: 1, var2: 0",
      "var1: 1, var2: 1"
    ]
  },
  {
    "question": "What is the output? public static void main(String[] args) {     int num = 1;     while (num >= 200){       System.out.print(num + \"\" \"\");       num = num * 5;     }  }",
    "correct_options": ["No output."]
  },
  {
    "question": "When you write your own constructor, the default constructor is no longer available.",
    "correct_options": ["True"]
  },
  {
    "question": "A constructor is a special method which is commonly used to set the initial values of an object's fields.",
    "correct_options": ["True"]
  },
  {
    "question": "How would you instantiate the Employee class from a main method located in another class? public class Employee{ private String name; private double salary; public Employee(String n, double s){ name = n; salary = s; } }",
    "correct_options": ["Employee emp1 = new Employee(\"Syam\", 50000);"]
  },
  {
    "question": "How could you write the Employee constructor so that its parameters are named the same as the fields they're initializing? public class Employee{ private String name; private double salary; public Employee(String name, double salary){ //initialize name //initialize salary } }",
    "correct_options": [
      "public Employee(String name, double salary){ this.name = name; this.salary = salary; }"
    ]
  },
  {
    "question": "Java developers don't need to know an object's location in memory.",
    "correct_options": ["True"]
  },
  {
    "question": "Which type of memory is allocated for the code below? int x = 1; int y = 2; x=y;",
    "correct_options": ["Stack memory"]
  },
  {
    "question": "What is the output of the following code? String s1 = \"Hello\"; String s2 = \"Welcome!\"; s1 = s2; System.out.println(\"s1: \" +s1); System.out.println(\"s2: \" +s2);",
    "correct_options": ["s1: Welcome! s2: Welcome!"]
  },
  {
    "question": "Objects are stored within the heap memory.",
    "correct_options": ["True"]
  },
  {
    "question": "Which two statements are NOT true about constructors?",
    "correct_options": [
      "A constructor method may return a value.",
      "A constructor method has a void return type."
    ]
  },
  {
    "question": "The structure of a class consists of properties and behaviors.",
    "correct_options": ["True"]
  },
  {
    "question": "You have created an Employee class with all required fields and methods. 10 employees join the company. Should you copy and paste the Employee class for all 10 employees?",
    "correct_options": ["False"]
  },
  {
    "question": "In the following statements, how many employee objects are created? Employee e1 = new Employee(); Employee e2 = new Employee(); Employee e3 = new Employee();",
    "correct_options": ["3"]
  },
  {
    "question": "Static variables of a class can be accessed, even if the class has not been instantiated.",
    "correct_options": ["True"]
  },
  {
    "question": "An object must be instantiated before its non-static fields and methods can be accessed.",
    "correct_options": ["True"]
  },
  {
    "question": "Method overloading can be a useful technique for defining methods with similar functionality or calculations.",
    "correct_options": ["True"]
  },
  {
    "question": "Methods can call other methods in the same class.",
    "correct_options": ["True"]
  },
  {
    "question": "How would you complete this code so that one add method calls the other add method? public int add(int a, int b, int c) { return(a+b+c); } public int add(int a, int b){ //Complete this line. }",
    "correct_options": ["return add(a, b, 0);"]
  },
  {
    "question": "Which two statements are true?",
    "correct_options": [
      "An object can access another object's public constructor.",
      "An object can access another object's public methods."
    ]
  },
  {
    "question": "Which two statements are true about getter methods?",
    "correct_options": [
      "Getters usually accept no arguments.",
      "Getters have a public access modifier."
    ]
  },
  {
    "question": "Setters are void return type methods.",
    "correct_options": ["True"]
  },
  {
    "question": "Which three can vary in overloaded methods?",
    "correct_options": [
      "Types of parameters.",
      "Order of parameters.",
      "Number of parameters."
    ]
  },
  {
    "question": "Which two statements are true about private access modifier?",
    "correct_options": [
      "Class fields marked private are most secure.",
      "Class fields are typically marked private."
    ]
  },
  {
    "question": "An object reference directs you from one object to another.",
    "correct_options": ["True"]
  },
  {
    "question": "Which two are access modifiers?",
    "correct_options": ["private", "public"]
  },
  {
    "question": "If you need to make a particular variable belong to a class rather than any individual instance, what type of variable should you use?",
    "correct_options": ["A static variable."]
  },
  {
    "question": "If the try block succeeds then no exception has occurred.",
    "correct_options": ["True"]
  },
  {
    "question": "What is the danger of catching a generic Exception type as shown below? int[] array = {10, 20, 30}; int b = 0; try{ System.out.println(\"1\"); int c = (array[3] / b); System.out.println(\"2\"); } catch(Exception ex){ System.out.println(ex.toString()); }",
    "correct_options": [
      "The details of the Exception object ex are too general to be useful."
    ]
  },
  {
    "question": "Each catch block is an exception handler that handles the type of exception indicated by its argument.",
    "correct_options": ["True"]
  },
  {
    "question": "Which is not used to traverse an ArrayList?",
    "correct_options": ["for-each loop"]
  },
  {
    "question": "Identify where there is a potential bug in this code: int radiusOfCircle = 10; int areaOfCircle = Math.PI * radiusOfCircle * radiusOfCircle;",
    "correct_options": ["A datatype is incorrect."]
  },
  {
    "question": "Using a Java debugger, you can set breakpoints and trace through a program one line at a time.",
    "correct_options": ["True"]
  },
  {
    "question": "Testing and debugging are important activities in software development.",
    "correct_options": ["True"]
  },
  {
    "question": "Which two are valid array declarations?",
    "correct_options": ["int[] size;", "int size[];"]
  },
  {
    "question": "Which loop type is specially designed to traverse an array?",
    "correct_options": ["for loop"]
  },
  {
    "question": "You can access the size of any array by using the array's \"length\" property.",
    "correct_options": ["True"]
  },
  {
    "question": "Which method helps to set the width of a rectangle's outline?",
    "correct_options": ["setStrokeWidth(double d)"]
  },
  {
    "question": "How would you create a custom color that is pure cyan (equal parts green and blue)?",
    "correct_options": ["Color customColor = Color.rgb(0, 255, 255);"]
  },
  {
    "question": "Which color is not directly used when creating custom Color.rgb()?",
    "correct_options": ["Yellow"]
  },
  {
    "question": "JavaFX doesn't provide you with UI elements, shapes and text. So you must always create your own graphics.",
    "correct_options": ["False"]
  },
  {
    "question": "An Image is an object that describes the location of a graphics file.",
    "correct_options": ["True"]
  },
  {
    "question": "Which method is used for mouse click events?",
    "correct_options": ["setOnMouseClicked()"]
  },
  {
    "question": "A layout Pane dictates how Nodes must be positioned",
    "correct_options": ["True"]
  },
  {
    "question": "The start() method is the entry point for all JavaFX applications.",
    "correct_options": ["True"]
  },
  {
    "question": "Code within curly braces is called a 'Block of code'",
    "correct_options": ["True"]
  },
  {
    "question": "In the code example below, identify any methods: public class Employee { public String name = ' Duke'; public int empId = 12105; public float salary; public void displaySalary(){ System.out.println('Employee Salary: '+salary); } }",
    "correct_options": ["displaySalary()"]
  },
  {
    "question": "Identify the variable declared in the given code. public class Welcome {   public static main(String args[]) {    int a = 2;    System.out.println(\"a is \" + a);   } }",
    "correct_options": ["a"]
  },
  {
    "question": "Assigning a value to the variable is called 'initialization'.",
    "correct_options": ["True"]
  },
  {
    "question": "What is the output? public class Hello {  public static void main(String args[]) {    String str = \"Hello\";    str = \"World\";   System.out.println(str);  }}",
    "correct_options": ["World"]
  },
  {
    "question": "What is the output? public static void main(String args[]) {    char ch ='c';    switch(ch) {      case 'a':      case 'e':      case 'i':      case 'o':      case 'u':        System.out.println(\"Vowels\");        break;      default:        System.out.println(\"Consonants\");    } }",
    "correct_options": ["Consonants"]
  },
  {
    "question": "What is the output? public static void main(String[] args) {    int age = 43;    if (age == 43){      System.out.print(\"Bob is 43 \");    }    if (age == 50){      System.print(\"Bob is 50 \");     } }",
    "correct_options": ["Bob is 43"]
  },
  {
    "question": "Which is stored within the stack memory?",
    "correct_options": ["Local variables"]
  },
  {
    "question": "A wrapper class encapsulates, or wraps, the primitive types within an object.",
    "correct_options": ["True"]
  },
  {
    "question": "Which exception is thrown when an application attempts to use null when an object is required?",
    "correct_options": ["NullPointerException"]
  },
  {
    "question": "In the given syntax of for loop, which part represents the header section? for (initialization; condition; update) { // Code statement(s) }",
    "correct_options": ["for (initialization; condition; update)"]
  },
  {
    "question": "Which statement is false about infinite loop?",
    "correct_options": [
      "An infinite loop is a code which will execute until the user interrupts the program"
    ]
  },
  {
    "question": "What is the output? int[] arr = new int[2]; for(int i=0; i < arr.length; i++){ System.out.print(\"hai \"); }",
    "correct_options": ["hai hai "]
  },
  {
    "question": "What is the output? int[] array = {10, 20, 30}; int b = 0; try{ System.out.println(\"1\"); int c = (array[3] / b); System.out.println(\"2\"); } catch(ArithmeticException ex){ System.out.println(\"Arithmetic Exception\"); } catch(ArrayIndexOutOfBoundsException ex){ System.out.println(\"Array index out of bounds\"); }",
    "correct_options": ["1 Arithmetic Exception"]
  },
  {
    "question": "Which of the following is not a wrapper class?",
    "correct_options": ["String"]
  },
  {
    "question": "Which is NOT a benefit of ArrayList class?",
    "correct_options": [
      "You can use an ArrayList list to store Java primitive values (like int)."
    ]
  },
  {
    "question": "Which code goes in the try block?",
    "correct_options": ["Any code that is likely to cause an exception."]
  },
  {
    "question": "What is the output? int[] arr = new int[1]; arr[0] = 10; System.out.println(arr[0]);",
    "correct_options": ["10"]
  },
  {
    "question": "What is an array?",
    "correct_options": [
      "An array is an indexed container that holds a set of values of a single type."
    ]
  },
  {
    "question": "What is the starting index of an array?",
    "correct_options": ["0"]
  },
  {
    "question": "What is the result? public static void main(String[] args) { for (;;) { System.out.println(\"Welcome to Java\"); } }",
    "correct_options": [
      "Compilation error as expressions are missing in the for loop."
    ]
  },
  {
    "question": "Which statement is true about the default constructor of a class?",
    "correct_options": [
      "You must write at least one constructor in your class."
    ]
  },
  {
    "question": "Which keyword is used to allocate memory for a newly created object?",
    "correct_options": ["new"]
  },
  {
    "question": "You can write more than one constructor in a class.",
    "correct_options": ["True"]
  },
  {
    "question": "An exception is an error that occurs during the execution of a program at run-time that disrupts the normal flow of the Java program.",
    "correct_options": ["True"]
  },
  {
    "question": "What is the output?int[] arr = new int[5]; for(int i=0; i<arr.length; i++){ arr[i] = i; } for(int i=0; i<arr.length; i++) { System.out.print(arr[i]); }",
    "correct_options": ["01234"]
  },
  {
    "question": "Which two cannot be stored in an ArrayList?",
    "correct_options": ["int", "float"]
  },
  {
    "question": "What is the output? public static void main(String[] args) { int num = 1; while (num >= 200){ System.out.print(num + \" \" \"); num = num * 5; } }",
    "correct_options": ["1 5 25 125"]
  },
  {
    "question": "What is the result?  public static void main(String[] args) { for (int var1 = 0; var1 < 2; var1++) { for (int var2 = 0; var2 < 2; var2++) { if (var2 == 2) { continue; } System.out.println(\"var1:\" + var1 + \", var2:\" + var2); } } }",
    "correct_options": [
      "var1: 0, var2: 0 var1: 0, var2: 1 var1: 1, var2: 0 var1: 1, var2: 1"
    ]
  },
  {
    "question": "Audio can be played by referencing the AudioClip object directly.",
    "correct_options": ["False"]
  },
  {
    "question": "Which type of Root Node allows Nodes to be placed anywhere?",
    "correct_options": ["Group"]
  },
  {
    "question": "JavaFX doesn't provide you with UI elements, shapes, and text. So you must always create your own graphics.",
    "correct_options": ["True"]
  },
  {
    "question": "First, you decide the radius of each circle in the logo. Then using the same radius you draw 5 circles of the same size. All these circles will have properties like radius and color. All circles share behaviors to calculate circumference and area. Can you identify which of the following is an object?",
    "correct_options": ["circle"]
  },
  {
    "question": "Which type of memory is allocated for the code below? int x = 1; int y = 2;  x=y;",
    "correct_options": ["No memory is allocated"]
  },
  {
    "question": "In this statement, identify the type of the variable s. Student s = new Student();",
    "correct_options": ["Student"]
  },
  {
    "question": "You create an Employee object with a String employeeName field. What is the default value for employeeName?",
    "correct_options": ["null"]
  },
  {
    "question": "A constructor is a special method that is commonly used to set the initial values of an object's fields.",
    "correct_options": ["True"]
  },
  {
    "question": "In Java, the this keyword can be used to reference the current object's fields and methods.",
    "correct_options": ["True"]
  },
  {
    "question": "Given the following code, why does your IDE complain that 'non-static variable name cannot be referenced from a static context'? public class Employee{ public static int employeeID; public String name; public static void display(){ System.out.println(employeeID); System.out.println(name); } }",
    "correct_options": [
      "It would be possible to call the display() method and attempt to reference an object's name before any object exists."
    ]
  },
  {
    "question": "Runtime errors can be caught by Java's exception handling mechanism.",
    "correct_options": ["True"]
  },
  {
    "question": "What is the output? int[] array = {10, 20, 30}; int b = 0; try{    System.out.println(\"1\");    int c = (array[3] / b);    System.out.println(\"2\"); }  catch(ArithmeticException ex){    System.out.println(\"Arithmetic Exception\"); }  catch(ArrayIndexOutOfBoundsException ex){    System.out.println(\"Array index out of bounds\"); }",
    "correct_options": ["1 Array index out of bounds"]
  },
  {
    "question": "What is the danger of catching a generic Exception type as shown below? int[] array = {10, 20, 30}; int b = 0; try{    System.out.println(\"1\");    int c = (array[3] / b);    System.out.println(\"2\"); }  catch(Exception ex){    System.out.println(ex.toString()); }",
    "correct_options": [
      "The details of the Exception object ex are too general to be useful."
    ]
  },
  {
    "question": "What is the output? int[] arr = new int[2]; for(int i=0; i < arr.length; i++){    System.out.print(\"hai \"); }",
    "correct_options": ["hai hai "]
  },
  {
    "question": "What is the output?int[] arr = new int[5]; for(int i=0; i<arr.length; i++){     arr[i] = i; } for(int i=0; i<arr.length; i++) {     System.out.print(arr[i]); }",
    "correct_options": ["01234"]
  },
  {
    "question": "Identify where there is a potential bug in this code: int radiusOfCircle = 10;  int areaOfCircle = Math.PI * radiusOfCircle * radiusOfCircle;",
    "correct_options": ["A variable name is misspelled."]
  },
  {
    "question": "How could you write the Employee constructor so that its parameters are named the same as the fields they're initializing? public class Employee{    private String name;    private double salary;    public Employee(String name, double salary){      //initialize name      //initialize salary    } }",
    "correct_options": [
      "public Employee(String name, double salary){    this.name = name;    this.salary = salary; }"
    ]
  },
  {
    "question": "How would you instantiate the Employee class from a main method located in another class? public class Employee{    private String name;    private double salary;    public Employee(String n, double s){      name = n;      salary = s;    } }",
    "correct_options": ["Employee emp1 = new Employee(\"Syam\", 50000);"]
  },
  {
    "question": "How would you complete this code so that one add method calls the other add method? public int add(int a, int b, int c) {   return(a+b+c); } public int add(int a, int b){   //Complete this line. }",
    "correct_options": ["return add(a, b, 0);"]
  },
  {
    "question": "Given the following code, why does your IDE complain that \"non-static variable name cannot be referenced from a static context\"? public class Employee{    public static int employeeID;    public String name;    public static void display(){      System.out.println(employeeID);      System.out.println(name);    } }",
    "correct_options": [
      "It would be possible to call the display() method and attempt to reference an object's name before any object exists."
    ]
  },
  {
    "question": "What is the output? public static void main(String[] args) {     int num = 1;     while (num >= 200){       System.out.print(num + \" \" );       num = num * 5;     }  }",
    "correct_options": ["No output."]
  },
  {
    "question": "First, you decide the radius of each circle in the logo. Then using the same radius, you draw 5 circles of the same size. All these circles will have properties like radius and color. All circles share behaviors to calculate circumference and area. Can you identify which of the following is an object?",
    "correct_options": ["circle"]
  },
  {
    "question": "A for loop is also called a definite loop.",
    "correct_options": ["True"]
  },
  {
    "question": "Loops are used in programs for the repeated execution of one or more statements until a terminating condition is reached.",
    "correct_options": ["True"]
  },
  {
    "question": "Which two statements are true about the while loop?",
    "correct_options": [
      "The statements of a while loop will execute one or more times.",
      "The statement in a while loop will execute zero or more times."
    ]
  },
  {
    "question": "In object-oriented programming, an object comprises of properties and behaviors where properties are represented as fields of the object and behavior is represented as methods.",
    "correct_options": ["True", "False"]
  },
  {
    "question": "Which two statements are true about String concatenation?",
    "correct_options": [
      "Strings can be combined using the '+' operator.",
      "String concatenation can be done with String variables and String Literals."
    ]
  },
  {
    "question": "What is the output? public class Welcome {  public static void main(String args[]) {   System.out.println(\"This is my first program\");   int a = 2;   System.out.println(\"a is \" + a);  }}",
    "correct_options": ["This is my first program", "a is 2"]
  },
  {
    "question": "A customer is eligible for a discount based on certain criteria. Under what conditions does \"You qualify for a discount\" print? (Hint: There may be more than one correct answer) int purchase; int rewardPoints; if (purchase >= 2000 || rewardPoints >= 4000) { System.out.println(\"You qualify for discount\");}",
    "correct_options": [
      "When rewardPoints is more than 2000 or purchase greater than 1000"
    ]
  },
  {
    "question": "Which is a valid syntax to declare and initialize a String variable?",
    "correct_options": ["String x= \"Java\";"]
  },
  {
    "question": "Identify the variable declared in the given code. public class Welcome { public static void main(String args[]) { int a = 2; System.out.println(\"a is \" + a); }}",
    "correct_options": ["int", "a"]
  },
  {
    "question": "Identify the names of two variables used in the given code. public class Variables { public static void main(String args[]) { String strVal = \"Hello\"; int intVal = 0; System.out.println(\"Integer: \" +intVal) }}",
    "correct_options": ["strVal", "intVal"]
  },
  {
    "question": "What is the output? public class Person { public static void main(String args[]) { int age = 20; System.out.println(\"Value of age: \" +age); age = 5 + 3; System.out.println(\"Value of age: \" +age); age = age + 1; age++; System.out.println(\"Value of age: \" +age); }}",
    "correct_options": ["Value of age: 20 Value of age: 8 Value of age: 9"]
  },
  {
    "question": "You write a statement that assigns a value to a String variable as shown below. String input = \"This is Java Program\"; This way of assigning values to variables is known as hard-coding.",
    "correct_options": ["False"]
  },
  {
    "question": "What is the output? public static void main(String args[]) { String greet1 = \"Hello\"; String greet2 = \"World\"; String message2 = greet1 +\" \" +greet2 +\" \" +2016 +\"!\"; System.out.println(message2); }",
    "correct_options": ["Hello World 2016 !"]
  },
  {
    "question": "These two code fragments perform the same task. // Fragment 1 String inputString = JOptionPane.showInputDialog(\"??\"); int input = Integer.parseInt(inputString); input++; // Fragment 2 int input = Integer.parseInt(JOptionPane.showInputDialog(\"??\")) + 1;",
    "correct_options": ["True"]
  },
  {
    "question": "Given the expression: String message = \"Hello World\"; Which is the String Literal?",
    "correct_options": ["Hello World"]
  },
  {
    "question": "How many arguments does the following method accept? public void simpleInterest(double principal, int noofYears, double interestRate){ System.out.println(\"The interest rate is \" +interestRate );}",
    "correct_options": ["3"]
  },
  {
    "question": "Which two statements compile? (Choose all correct answers)",
    "correct_options": ["String name = 'Java';", "String name = \"Java\";"]
  },
  {
    "question": "Which two statements are true about type casting? (Choose all correct answers)",
    "correct_options": [
      "Type casting cannot be performed on equations.",
      "Type casting retains the size of the value or the original data type."
    ]
  },
  {
    "question": "What is the output? public static void main(String args[]) {    String alphaNumeric = \"Java World!\" + 8;    System.out.println(alphaNumeric); }",
    "correct_options": ["rld!"]
  },
  {
    "question": "What is the result? public static void main(String[] args) {  for (int var1 = 0; var1 < 2; var1++) {   for (int var2 = 0; var2 < 2; var2++) {    if (var2 == 2) {     continue;    }   System.out.println(\"var1:\" + var1 + \", var2:\" + var2);   }  }}",
    "correct_options": [
      "var1: 0, var2: 0 var1: 0, var2: 1 var1: 1, var2: 0 var1: 1, var2: 1"
    ]
  },
  {
    "question": "What is the output? public static void main(String[] args) {     int num = 1;     while (num >= 200){       System.out.print(num + \" \");       num = num * 5;     }  }",
    "correct_options": ["No output."]
  },
  {
    "question": "What is the result? public static void main(String[] args) { for (int var1 = 0; var1 < 2; var1++) { for (int var2 = 0; var2 < 2; var2++) { if (var2 == 2) { continue; } System.out.println(\"var1:\" + var1 + \", var2:\" + var2); } } }",
    "correct_options": [
      "var1: 0, var2: 0 var1: 0, var2: 1 var1: 1, var2: 0 var1: 1, var2: 1"
    ]
  },
  {
    "question": "Which of the following would give you an array index out of bounds exception?",
    "correct_options": [
      "Refering to an element of an array that is at an index greater than the length of that array minus one."
    ]
  },
  {
    "question": "The following segment of code initializes a 2 dimensional array of references. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "Which of the following declares a one dimensional array name scores of type int that can hold 14 values?",
    "correct_options": ["int[] scores=new int[14];"]
  },
  {
    "question": "Which of the following statements adds 5 to every element of the one dimensional array prices and then prints it to the screen?",
    "correct_options": [
      "for(int i=0;i<prices.length;i++)  System.out.println(prices[i]+5);"
    ]
  },
  {
    "question": "Which of the following declares and initializes a one dimensional array named words of size 3 so that all entries can be Strings?",
    "correct_options": ["String[] words=new String[3];"]
  },
  {
    "question": "What is the output of the following segment of code?",
    "correct_options": ["987654321"]
  },
  {
    "question": "The following segment of code initializes a 2 dimensional array of primitive data types. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "What is the output of the following segment of code if the command line arguments are \"apples oranges pears\"?",
    "correct_options": ["3"]
  },
  {
    "question": "Which of the following declares and initializes a two dimensional array that can hold 6 Object reference types?",
    "correct_options": ["Object[][] array=new Object[2][3];"]
  },
  {
    "question": "The following array declaration is valid. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "What does the interpreter look for when an exception is thrown?",
    "correct_options": ["A catch statement in the code."]
  },
  {
    "question": "Suppose you misspell a method name when you call it in your program. Which of the following explains why this gives you an exception?",
    "correct_options": [
      "Because the interpreter does not recognize this method since it was never initialized, the correct spelling of the method was initialized."
    ]
  },
  {
    "question": "If an exception has already been thrown, what will the interpreter read next in the program?",
    "correct_options": [
      "The next line of the program even if it is not the catch block of code."
    ]
  },
  {
    "question": "What is the output of the following segment of code if the command line arguments are \"a b c d e f g\"?",
    "correct_options": ["This code doesn't compile."]
  },
  {
    "question": "The following creates a reference in memory named q that can refer to six different integers via an index. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following statements print every element of the one dimensional array prices to the screen?",
    "correct_options": [
      "for(int i=0; i < prices.length; i++){System.out.println(prices[i]);}"
    ]
  },
  {
    "question": "The following creates a reference in memory named z that can refer to seven different doubles via an index. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "Which of the following declares a one dimensional array named names of size 8 so that all entries can be Strings?",
    "correct_options": ["String[] names=new String[8];"]
  },
  {
    "question": "The following creates a reference in memory named y that can refer to five different integers via an index. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Suppose you are writing a program where the user is prompted to give coordinates where they believe the princess is inside of the castle. Your program moves the prince to the coordinates that the user specified. If the princess is not found at those coordinates, the user is given a clue that helps them guess coordinates closer to the princess. The user is allowed to enter their new guess of where the princess is. Assume your program does not take into consideration the possibility that the user may enter coordinates outside of the castle where the princess could not be. What would be the result of the user entering coordinates outside of the castle? How could this be handled in your code?",
    "correct_options": [
      "An exception would occur. This could be handled by throwing an exception in your code if the user enters invalid coordinates. When the exception is caught, the user could be prompted to enter coordinates within the given range of the castle."
    ]
  },
  {
    "question": "Which line of code shows the correct way to throw an exception?",
    "correct_options": [
      "throw new Exception(\"Array index is out of bounds\");"
    ]
  },
  {
    "question": "Which of the following could be a reason to throw an exception?",
    "correct_options": ["You have a fatal error in your program."]
  },
  {
    "question": "Which of the following declares a one dimensional array named \"score\" of type int that can hold 9 values?",
    "correct_options": ["int[] score=new int[9];"]
  },
  {
    "question": "Which of the following declares and initializes a two dimensional array where each element is a reference type?",
    "correct_options": ["String[][] words=new String[10][3];"]
  },
  {
    "question": "Which of the following declares and initializes a one dimensional array named words of size 10 so that all entries can be Strings?",
    "correct_options": ["String[] words=new String[10];"]
  },
  {
    "question": "What is wrong with this code?",
    "correct_options": ["It does not compile."]
  },
  {
    "question": "What are exceptions used for in Java?",
    "correct_options": [
      "Making the program easier to use for the user and reducing the possibilities of errors occuring."
    ]
  },
  {
    "question": "Which of the following statements is not a valid array declaration?",
    "correct_options": ["counter int[];"]
  },
  {
    "question": "Which of the following declares and initializes a two dimensional array?",
    "correct_options": ["int[][] array={{1,1,1},{1,1,1},{1,1,1}};"]
  },
  {
    "question": "Which of the following declares and initializes a two dimensional array named values with 2 rows and 3 columns where each element is a reference to an Object?",
    "correct_options": ["String[][] values=new String[2][3];"]
  },
  {
    "question": "double array[] = new double[8]; After execution of this statement, which of the following are true?",
    "correct_options": ["array.length is 8"]
  },
  {
    "question": "The following creates a reference in memory named k that can refer to six different integers via an index. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "Which of the following declares and initializes a one dimensional array that can hold 5 Object reference types?",
    "correct_options": ["Object[] array=new Object[4];"]
  },
  {
    "question": "What will array arr contain after the following code segment has been executed?",
    "correct_options": ["9, 6, 3, 1, 0"]
  },
  {
    "question": "Choose the best response to this statement: An error can be handled by throwing it and catching it just like an exception.",
    "correct_options": [
      "False. An error is much more severe than an exception and cannot be dealt with adequately in a program."
    ]
  },
  {
    "question": "Which of the following defines an Exception?",
    "correct_options": [
      "A problem that can be corrected or handled by your code."
    ]
  },
  {
    "question": "Which of the following is the correct way to call an overriden method needOil() of a super class Robot in a subclass SqueakyRobot?",
    "correct_options": ["super.needOil();"]
  },
  {
    "question": "A constructor must have the same name as the class where it is declared. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "What is the output of the following code segment: int n = 13; System.out.print(doNothing(n)); System.out.print(\" \", n); where the code from the method doNothing is: public double doNothing(int n) { n = n + 8; return (double) 12/n; }",
    "correct_options": ["1.75, 13"]
  },
  {
    "question": "The final keyword makes a static variable act like a constant. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Public static variables can't have their value reset by other classes. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Static classes can't return instances of the parent class when the parent class uses a private constructor. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "What allows Java to correctly and automatically determine which method to invoke based on the type of object being referred to at the time the method is called?",
    "correct_options": ["Dynamic Method Dispatch"]
  },
  {
    "question": "Identify the step (s) in creating a Triangle Applet that displays two triangles.",
    "correct_options": [
      "Extend Applet class to inherit all methods including paint.",
      "Override the paint method to include the triangles.",
      "Draw the 2nd triangle using the inherited fillPolygon method."
    ]
  },
  {
    "question": "Which of the following would be most beneficial for this scenario? Joe is a college student who has a tendency to lose his books. Replacing them is getting costly. In an attempt to get organized, Joe wants to create a program that will store his textbooks in one group of books, but he wants to make each book type the subject of the book (i.e. MathBook is a book). How could he store these different subject books into a single array?",
    "correct_options": ["Using polymorphism."]
  },
  {
    "question": "Which of the following is the correct definition of a parameter?",
    "correct_options": [
      "A variable in a method declaration that gets passed into the method."
    ]
  },
  {
    "question": "Which of the following is the definition of a constructor?",
    "correct_options": [
      "A special method that is used to assign initial values to instance variables in a class."
    ]
  },
  {
    "question": "Which of the following is the correct way to code a method with a return type an object Automobile?",
    "correct_options": [
      "Automobile upgrade(Automobile carA){ carA.setTurbo(\"yes\"); return carA;}"
    ]
  },
  {
    "question": "Where should the constructor for a superclass be called?",
    "correct_options": ["The first line of the constructor in the subclass."]
  },
  {
    "question": "Which of the following correctly describes an \"is-a\" relationship?",
    "correct_options": [
      "A programming philosophy that promotes simpler, more efficient coding by using existing code for new applications."
    ]
  },
  {
    "question": "You can create static classes as independent classes. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Static variables can't use which of the following modifiers?",
    "correct_options": ["default"]
  },
  {
    "question": "Which of the following could be a reason to return an object?",
    "correct_options": [
      "The method makes changes to the object and you wish to continue to use the updated object outside of the method."
    ]
  },
  {
    "question": "You are assigned to write a method that compares two objects of type Career. One requirement of your assignment is to have your method compare the \"greatestPossibleSalary\" instance data of Career objects. The \"greatestPossibleSalary\" field is data type int. What would be the best return type from your compare method?",
    "correct_options": ["Integer, because it is the easiest to code with."]
  },
  {
    "question": "If Sandal extends Shoe, it is possible to declare an object such that Sandal s = new Shoe();",
    "correct_options": ["False"]
  },
  {
    "question": "Which of the following is true?",
    "correct_options": [
      "A class always has a constructor (possibly automatically supplied by the java compiler)."
    ]
  },
  {
    "question": "A class can have multiple constructors. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following creates a method that compiles with no errors in the class?",
    "correct_options": ["None of the above."]
  },
  {
    "question": "Java's garbage collection is when all references to an object are gone, the memory used by the object is automatically reclaimed. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following creates a Object from the Animal class listed below?",
    "correct_options": ["Animal dog=new Animal(50,30);"]
  },
  {
    "question": "Which segment of code represents a correct way to define a variable argument method?",
    "correct_options": ["String easyArray(String ... elems) {//code}"]
  },
  {
    "question": "Static classes can extend their parent class. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "You can use an inner static class to return an instance of its outer class container. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Why would a programmer use polymorphism rather than sticking to a standard array?",
    "correct_options": [
      "Because it is easier to add or remove objects using polymorphism even when all of the objects are of the same type."
    ]
  },
  {
    "question": "Which of the following correctly describes the use of the keyword super?",
    "correct_options": [
      "A keyword that allows subclasses to access methods, data, and constructors from their parent class."
    ]
  },
  {
    "question": "It is possible to extend a class that already exists in Java, such as the Applet class. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following are true about abstract methods?",
    "correct_options": [
      "They must be declared in an abstract class.",
      "They must be overridden in a non-abstract subclass.",
      "They cannot have a method body."
    ]
  },
  {
    "question": "It is possible to inherit from an abstract class. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following correctly defines a superclass (or parent class)?",
    "correct_options": [
      "A class that passes down its methods to more specialized classes."
    ]
  },
  {
    "question": "What is a UML?",
    "correct_options": [
      "Unified Modeling Language, a standardized language for modeling systems and structures in programming."
    ]
  },
  {
    "question": "Static classes can extend any class in their class path. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following statements about static methods is true?",
    "correct_options": [
      "They exist once per class.",
      "They can access any instance variable."
    ]
  },
  {
    "question": "A team is working on a coding project. They desire that all portions of their code should have access to the classes that they write. What access modifier should be used for each class?",
    "correct_options": ["public"]
  },
  {
    "question": "Cameron wishes to write a method that takes in two objects and returns the one with the greatest value. Is this possible?",
    "correct_options": [
      "Yes, methods can take objects in as parameters and can also return objects all within the same method."
    ]
  },
  {
    "question": "What keyword is used to inherit a superclass?",
    "correct_options": ["extends"]
  },
  {
    "question": "It is possible for a subclass to be a superclass. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "Consider the following: There is a method A that calls method B. Method B is a variable argument method. With this, which of the following are true?",
    "correct_options": [
      "When invoked, method B creates an array to store some or all of the arguments passed to it from method A."
    ]
  },
  {
    "question": "It is possible to overload a method that is not a constructor. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "Static methods can't act like \"setter\" methods. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following access modifiers doesn't work with a static variable?",
    "correct_options": ["friendly"]
  },
  {
    "question": "Abstract classes can be instantiated. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "The constructor of a class has the same name as the class. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "A constructor is used to create objects. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "All objects, in Java, are created using int. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "In Java, an instance field referenced using the this keyword generates a compilation error. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "Static methods can write to class variables. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "According to the following class declaration, runSpeed can be modified in class Cat. True or false public class Tiger extends Cat{ public int runSpeed;}",
    "correct_options": ["False"]
  },
  {
    "question": "Consider creating a class Square that extends the Rectangle class provided below. Knowing that a square always has the same width and length, which of the following best represents a constructor for the Square class?",
    "correct_options": ["None of the above."]
  },
  {
    "question": "Which of the following is a possible way to overload constructors?",
    "correct_options": [""]
  },
  {
    "question": "What is true about the Object class?",
    "correct_options": ["It is the highest superclass."]
  },
  {
    "question": "Abstract class cannot extend another abstract class. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "Which of the following are relational operators in Java?",
    "correct_options": ["<", "<=", "=", "!="]
  },
  {
    "question": "Which of the following correctly initializes an instance of Scanner, called \"in\", that reads input from the console screen?",
    "correct_options": ["Scanner in = new Scanner(System.in);"]
  },
  {
    "question": "In an if-else construct the condition to be evaluated must end with a semi-colon. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "switch statements work on all input types including, but not limited to, int, char, and String. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "Determine whether this boolean expression evaluates to true or false: !(3 < 4 && 5 > 6 || 6 <= 6 && 7 - 1 == 6)",
    "correct_options": ["True"]
  },
  {
    "question": "A counter used in a for loop cannot be initialized within the For loop header. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "What is the function of the word \"break\" in Java?",
    "correct_options": ["It exits the current loop or case statement."]
  },
  {
    "question": "What is a loop?",
    "correct_options": [
      "A set of logic that is repeatedly executed until a certain condition is met."
    ]
  },
  {
    "question": "How many times will the following loop be executed? What is the value of x after the loop has finished? What is the value of count after the loop has finished? int count = 17; int x = 1; while(count > x){ x*=3; count-=3; }",
    "correct_options": ["3; 27; 8"]
  },
  {
    "question": "Updating the input of a loop allows you to implement the code with the next element rather than repeating the code always with the same element. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "What should replace the comment \"//your answer here\" in the code below if the code is meant to take no action when i % 2 is 0 (in other words when i is even)? for(int i = 0; i < 10; i++){ if(i%2 == 0) //your answer here else k+=3; }",
    "correct_options": ["continue;"]
  },
  {
    "question": "The syntax below represents a valid initialization of a for loop counter. True or False?public class ForLoop { public static void main (String args[]) {  for (int i=10; i <20; i++)  {System.out.println(\"i: \"+i); } }}",
    "correct_options": ["True"]
  },
  {
    "question": "In a for loop the counter is not automatically incremented after each loop iteration. Code must be written to increment the counter. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "All of the following are essential to initializing a for loop, except which one?",
    "correct_options": ["Having an if statement."]
  },
  {
    "question": "When the for loop condition statement is met the construct is exited. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "This keyword is used to instruct specific code when the input for a switch statement that does not match any of the cases.",
    "correct_options": ["default"]
  },
  {
    "question": "The three logic operators in Java are:",
    "correct_options": ["&&, ||, !"]
  },
  {
    "question": "What will print if the following Java code is executed?",
    "correct_options": ["0"]
  },
  {
    "question": "Consider that a Scanner has been initialized such that: Scanner in = new Scanner(System.in); Which of the following lines of code reads in the usermes input and sets it equal to a new String called input?",
    "correct_options": ["String input = in.next();"]
  },
  {
    "question": "How would you use the ternary operator to rewrite this if statement?if (balance < 500) fee = 10;else fee = 0;",
    "correct_options": ["fee = ( balance < 500) ? 10 : 0;"]
  },
  {
    "question": "What is the output of the following code segment? int num = 7; while(num >= 0) { num -= 3; } System.out.println(num);",
    "correct_options": ["0"]
  },
  {
    "question": "A counter used in a for loop cannot be initialized within the For loop statement. True or False?",
    "correct_options": ["False"]
  },
  {
    "question": "For both the if-else construct and the for loop, it is true to say that when the condition statement is met, the construct is exited. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "Why are loops useful?",
    "correct_options": [
      "They allow for repeating code until a certain argument is met."
    ]
  },
  {
    "question": "In the code fragment below, the syntax for the for loop's initialization is correct. True or false?public class ForLoop { public static void main (String args[]) { for ((int 1=10) (i<20) (i++)) {  System.out.println (\"i: \" + i); } }}",
    "correct_options": ["False"]
  },
  {
    "question": "The following prints Yes on the screen. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "The six relational operators in Java are:",
    "correct_options": [">, <, ==, !=, <=, >="]
  },
  {
    "question": "How would you use the ternary operator to rewrite this if statement?if (gender == \"male\") System.out.print(\"Mr.\"); else System.out.print(\"Ms.\");",
    "correct_options": ["(gender == \"male\") ? \"Mr.\" : \"Ms.\" ;"]
  },
  {
    "question": "For every opening curly brace { there must be a closing curly brace} or the program will not compile without error. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following is the name of a Java primitive data type?",
    "correct_options": ["double"]
  },
  {
    "question": "Select the declaration and initialization statement that will hold the letter J.",
    "correct_options": ["char letter='J';"]
  },
  {
    "question": "Which of the following statements correctly assigns \"3 times 10 to the 4th power\" to the variable number?",
    "correct_options": ["double number=3*10e4;"]
  },
  {
    "question": "Which of the following is a legal identifier?",
    "correct_options": ["apple"]
  },
  {
    "question": "What is the output of the following lines of code? int j=6,k=8,m=2,result;result=j-k%3*m; System.out.println(result);",
    "correct_options": ["2"]
  },
  {
    "question": "Which of the following defines a driver class?",
    "correct_options": [
      "Contains a main method, a package, static methods, and classes that define objects."
    ]
  },
  {
    "question": "Which of the two diagrams below illustrate the general form of a Java program?",
    "correct_options": ["Example A"]
  },
  {
    "question": "When importing another package into a class you must import the entire package as well as the package classes that will be called. True or False?",
    "correct_options": ["False"]
  },
  {
    "question": "What is printed by the following code segment?",
    "correct_options": ["", "", "", ""]
  },
  {
    "question": "What will the following code segment output?",
    "correct_options": ["\"\""]
  },
  {
    "question": "What two values can a boolean variable have?",
    "correct_options": ["True and false"]
  },
  {
    "question": "Which of the following is not correct Java code?",
    "correct_options": ["double x=Math.pow;"]
  },
  {
    "question": "Which line of Java code properly calculates the area of a triangle using A=1/2(b)(h) where b and h are Java primitive integers?",
    "correct_options": ["double A=1/2*b*h;"]
  },
  {
    "question": "Given the code String s1 = \"abcdef\"; String s2 = \"abcdef\"; String s3 = new String(s1); Which of the following would equate to false?",
    "correct_options": ["s3 == s1"]
  },
  {
    "question": "Which of the following creates a String named string?",
    "correct_options": ["String string;"]
  },
  {
    "question": "The String methods equals and compareTo perform similar functions and differ in their return type. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "The following defines a package keyword:",
    "correct_options": [
      "Provides the compiler information that identifies outside classes used within the current class."
    ]
  },
  {
    "question": "When importing another package into a class you must import only the package classes that will be called and not the entire package. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Two variables are required to support a conversion of one unit of measure to another unit of measure. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "Four variables are required to support a conversion of one unit of measure to another unit of measure. True or False?",
    "correct_options": ["False"]
  },
  {
    "question": "Which of the following examples of Java code is not correct?",
    "correct_options": ["boolean b=1;"]
  },
  {
    "question": "Which of the following declarations are correct?",
    "correct_options": ["float loan;", "double duty;"]
  },
  {
    "question": "Which line of Java code assigns the value of 5 raised to the power of 8 to a?",
    "correct_options": ["double a=Math.pow(5,8);"]
  },
  {
    "question": "In a project, 1 of the classes must contain a main method. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "When converting gallons to liters its best to put the calculation result into a variable with a _______________ data type.",
    "correct_options": ["double"]
  },
  {
    "question": "The following code is an example of a correct initialization statement: char c=\"c\";",
    "correct_options": ["False"]
  },
  {
    "question": "A perspective is described as:",
    "correct_options": ["A combination of views and editors"]
  },
  {
    "question": "In a Java IDE, when you run a Java Application, where may the results display?",
    "correct_options": ["Console View"]
  },
  {
    "question": "The following program prints \"Equal\". True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following statements displays 12345? I. System.out.println( 123 * 100 + 45); II. System.out.println(\"123\" + 45); III. System.out.println( 12 + \"345\");",
    "correct_options": ["I and II only."]
  },
  {
    "question": "What is the output of the following lines of code? int j=7,k=5,m=8,result;  result=j-k%3*m;  System.out.println(result);",
    "correct_options": ["-9"]
  },
  {
    "question": "Match each of the following literals ('x', 10, 10.2, 100L, \"hello\") with its respective data type.",
    "correct_options": ["char, int, double, long, String"]
  },
  {
    "question": "Which of the following is not a legal name for a variable?",
    "correct_options": ["2bad"]
  },
  {
    "question": "What are Java's primitive types?",
    "correct_options": [
      "boolean, byte, char, double, float, int, long, and short"
    ]
  },
  {
    "question": "What will the method methodA print to the screen?",
    "correct_options": ["18"]
  },
  {
    "question": "A combination of views and editors are referred to as _______________.",
    "correct_options": ["A perspective"]
  },
  {
    "question": "A workspace can have one or more stored projects. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "The following program prints \"Not Equal\":\n\n \n\n True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "The following code is an example of creating a String reference:  String s; True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "A variable is a place in memory where data of a specific type can be stored for later retrieval and use by your program",
    "correct_options": ["True"]
  },
  {
    "question": "Defining the scenario, and the Alice animation to represent the scenario, is the first step to programming your animation. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In Alice, what are the forms of a scenario?",
    "correct_options": [
      "A task to perform.",
      "A problem to solve.",
      "A section of code to write.",
      "A person to help.",
      "A system to start."
    ]
  },
  {
    "question": "Which of the following does not describe variables?",
    "correct_options": ["Arranged in rows and columns."]
  },
  {
    "question": "To save a class to the myClasses directory you do so at the ________ level.",
    "correct_options": ["Class"]
  },
  {
    "question": "In Alice, when is the sceneActivationListener executed?",
    "correct_options": ["At the beginning of the animation"]
  },
  {
    "question": "The Procedures tab and the Functions tab are the two tabs available in the Alice methods panel. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In Alice, what does the resize handle style do?",
    "correct_options": [
      "Change size of the object and stretch it along the x, y, and z axes"
    ]
  },
  {
    "question": "Which option copies a programming instruction to the clipboard?",
    "correct_options": ["Copy to Clipboard"]
  },
  {
    "question": "In the Greenfoot IDE, any new methods you create are written in the class's source code. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In reference to Greenfoot, if the following method was defined in a superclass, public void turnAtEdge(){ ... } all subclasses of the superclass will inherit the method.True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In Greenfoot, you must first create an instance before you create a class. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "From your Greenfoot lessons, a scenario is a game or simulation implemented in Greenfoot. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In the Greenfoot IDE, what symbols indicate that the variable is an array?",
    "correct_options": ["Square brackets [ ]"]
  },
  {
    "question": "From your Greenfoot lessons, what types of values cannot be stored in a local variable?",
    "correct_options": ["method", "Objects", "World name", "Class name"]
  },
  {
    "question": "In Greenfoot, which method is used to end a game?",
    "correct_options": ["Greenfoot.stop( );"]
  },
  {
    "question": "In Greenfoot, which method is used to add a new instance to a scenario when the world is initialized?",
    "correct_options": ["addObject"]
  },
  {
    "question": "What does the following Greenfoot programming statement tell the class to do? if (Greenfoot.getRandomNumber(100) < 6) { turn(18); }",
    "correct_options": [
      "If a random number is returned that is less than 6, turn 18 degrees."
    ]
  },
  {
    "question": "When a Greenfoot code segment is executed in an if-statement, each line of code is executed in sequential order. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "The list below displays components of the Greenfoot source code editor except one. Which one should be removed?",
    "correct_options": ["Instance creator"]
  },
  {
    "question": "From your Greenfoot lessons, where do you review a class's inherited methods?",
    "correct_options": ["Inspector"]
  },
  {
    "question": "In Greenfoot, which of the following options are not possible when associating an image file with an instance?",
    "correct_options": ["Add a video"]
  },
  {
    "question": "Use your Greenfoot knowledge: Abstraction occurs in many different ways in programming. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "From your Greenfoot lessons, which of the following are examples of actions that can be achieved using the while loop?",
    "correct_options": ["All of the above."]
  },
  {
    "question": "In Greenfoot, arrays are a way to hold and access multiple variables, and assign different values to new instances each time the while loop executes and produces a new instance. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "From your Greenfoot lessons, an instance inherits all of the characteristics of the class, and those characteristics cannot be changed. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "In the Greenfoot IDE, which type of variable allows instances to store information?",
    "correct_options": ["Instance variable"]
  },
  {
    "question": "In Alice, different programming is not required for different objects, because all objects move the same way. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "An example of an expression is:",
    "correct_options": ["\"I feel happy.\""]
  },
  {
    "question": "From your Alice lessons, what does the Count control statement do?",
    "correct_options": ["Executes statements a specific number of times."]
  },
  {
    "question": "In which Alice class is the addDefaultModelManipulation procedure located?",
    "correct_options": ["Object class"]
  },
  {
    "question": "Main is an example of what in the following code?  public static void main (String[] args) { System.out.println{\"Hello World!\"); }",
    "correct_options": ["A method"]
  },
  {
    "question": "In Alice, how would you get the length of a fish object?",
    "correct_options": ["getLength"]
  },
  {
    "question": "A conditional loop is a loop that will continue forever. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "An event is any action initiated by the user that is designed to influence the programmes execution during play.",
    "correct_options": ["True"]
  },
  {
    "question": "When viewing the Java Code on the side in Alice, you can change the Java code directly instead of the Alice code. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In Alice, which of the following are benefits of separating out motions into their own procedures?",
    "correct_options": ["It simplifies code and makes it easier to read."]
  },
  {
    "question": "Which of the following is an incorrectly written programming statement?",
    "correct_options": ["move():"]
  },
  {
    "question": "In Greenfoot to get the users name you could use:",
    "correct_options": ["Greenfoot.ask(\"Input Name: \");"]
  },
  {
    "question": "You cannot record unique sounds in Greenfoot. You can only use the sounds that are stored in the Greenfoot library. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In the Greenfoot IDE, which of the following is not a property of an instance?",
    "correct_options": ["Scenario name"]
  },
  {
    "question": "In Greenfoot, a variable can be saved and accessed later, even if the instance no longer exists. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In Greenfoot, instances inherit the characteristics of the subclass they belong to, but not the superclass. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "In Greenfoot, which of the following methods display an object's orientation?",
    "correct_options": ["void turn()"]
  },
  {
    "question": "In Greenfoot, which of the following methods return the world that the instance lives in?",
    "correct_options": ["World getWorld()"]
  },
  {
    "question": "From your Greenfoot lessons, classes can only use the methods they have inherited. They cannot use methods from other classes. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "The first step to executing an if-else statement is to:____________.",
    "correct_options": ["Evaluate the condition"]
  },
  {
    "question": "In the Greenfoot IDE, what does the AND operator (&&) do?",
    "correct_options": [
      "Compares two boolean values, and returns a boolean value which is true if and only if both of its operands are true."
    ]
  },
  {
    "question": "In a Greenfoot loop constructor, which component is a counter that controls how many times the statement is executed?",
    "correct_options": ["Loop variable"]
  },
  {
    "question": "From your Greenfoot lessons, which of the following is not a step to creating a new subclass?",
    "correct_options": ["Program the class to move forward."]
  },
  {
    "question": "Which keyword is used to add an actor to a Greenfoot world?",
    "correct_options": ["addObject"]
  },
  {
    "question": "From your Alice lessons, which programming instruction represents the following movement: A person moves forward the distance to the table, minus the depth of the person.",
    "correct_options": [
      "this.Person move Forward this.Person getDistanceTo this.Table - this.Person getDepth"
    ]
  },
  {
    "question": "In Alice, the use of conditional control structures allows what two types of loops?",
    "correct_options": ["Conditional"]
  },
  {
    "question": "In Greenfoot, the move method expects what type of information in its parameters?",
    "correct_options": ["Integer of steps to move forward"]
  },
  {
    "question": "In Greenfoot, which method would you use to obtain input from the user?",
    "correct_options": ["ask()"]
  },
  {
    "question": "In Java what is casting?",
    "correct_options": [
      "When you take an Object of one particular type and turn it into another Object type."
    ]
  },
  {
    "question": "In Greenfoot, only 10 methods can be written for each class in the Code editor. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "An if-statement requires which type of information returned from the condition?",
    "correct_options": ["True or false"]
  },
  {
    "question": "What does the following programming statement mean?  image1 = new GreenfootImage(\"duke12.png\");",
    "correct_options": [
      "The image file, duke12.png, is assigned to the variable image1."
    ]
  },
  {
    "question": "Where can we review the available classes and methods in Greenfoot, including the stop method?",
    "correct_options": ["Greenfoot Application Programmers' Interface (API)"]
  },
  {
    "question": "In Greenfoot, what is the purpose of the variable type?",
    "correct_options": ["Defines what kind of data to store in the variable."]
  },
  {
    "question": "From your Greenfoot lessons, when do infinite loops occur?",
    "correct_options": ["When the end to the act method isn't established."]
  },
  {
    "question": "From your Greenfoot lessons, to save space in the act method, you can write an entirely new method below it, called a _____________.",
    "correct_options": ["Defined method"]
  },
  {
    "question": "In a Greenfoot if-else statement, if the condition is true, the if-statement is executed, and then the else-statement is executed. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "Use you Greenfoot knowledge: What range of numbers does the following method return? Greenfoot.getRandomNumber(30)",
    "correct_options": ["A random number between 0 and 29."]
  },
  {
    "question": "In Alice it is not possible to transfer a class from one animation to another. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "An argument is a value that the procedure uses to complete its task. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Only acting objects have one-shot procedures. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "From your Alice lessons, functional decomposition is the process of taking a complex problem or process and growing it into larger parts that are easier to manage. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "What does a visual storyboard help the reader understand?",
    "correct_options": ["The actions that will take place."]
  },
  {
    "question": "In Alice, procedural abstraction is the concept of making code easier to understand and reuse. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Before you can begin to develop the animation storyboard, what must be defined?",
    "correct_options": ["The scenario"]
  },
  {
    "question": "If you need to repeat a group of Java statements many times, which Java construct should you use?",
    "correct_options": ["while loop"]
  },
  {
    "question": "You want a block of code to be executed only once if certain conditions are met. What type of Java construct would you use?",
    "correct_options": ["if"]
  },
  {
    "question": "When something is broken or doesn't work as intended in a software program, it is referred to as a _________?",
    "correct_options": ["Bug"]
  },
  {
    "question": "A typical application uses various values and these values continuously change while the program is running. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following is not a valid primitive type in Java?",
    "correct_options": ["String"]
  },
  {
    "question": "Alice uses built-in math operators. They are:",
    "correct_options": ["All of the above"]
  },
  {
    "question": "From your Alice lessons, the IF control structure can process one true and one false response. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In Greenfoot, a defined variable is a variable that is defined in an instance. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In Greenfoot, the == operator is used to test if two values are equal. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "When a program is tested once and it works then testing is complete.",
    "correct_options": ["False"]
  },
  {
    "question": "From your Greenfoot lessons, Which of the following statements is most correct?",
    "correct_options": [
      "My program is complete when it runs and I've tested the code."
    ]
  },
  {
    "question": "Which of the following comparison symbols represents equals?",
    "correct_options": ["= ="]
  },
  {
    "question": "From your Greenfoot lessons, what can methods belong to?",
    "correct_options": ["All of the above"]
  },
  {
    "question": "In Greenfoot, which class has methods that allow you to get the status of the mouse?",
    "correct_options": ["Greenfoot"]
  },
  {
    "question": "Which of the following comparison operators represents \"greater than or equal\"?",
    "correct_options": [">="]
  },
  {
    "question": "From your Greenfoot lessons, in an if-statement, the programming statements written in curly brackets are executed simultaneously. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "Which class holds the method that ends a Greenfoot game?",
    "correct_options": ["Greenfoot"]
  },
  {
    "question": "We can use the Actor constructor to automatically create Actor instances when the Greenfoot world is initialized. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "Which Greenfoot control operator is used to test if two values are equal?",
    "correct_options": ["== operator"]
  },
  {
    "question": "In Greenfoot, a way to have all subclasses of a superclass inherit a method is by adding the method to the superclass. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "Which of the following are examples of default superclasses that are present in a new Greenfoot scenario?",
    "correct_options": ["Actor", "World"]
  },
  {
    "question": "An object is an instance of a class. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In Greenfoot, the sound file must be saved in the scenario and written in the source code for it to play. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following Greenfoot logic operators represents \"not\"?",
    "correct_options": ["!"]
  },
  {
    "question": "In the following Greenfoot array, what statement would you write to access the \"a\" key?  Keynames = {\"a\", \"b\", \"c\", \"d\"};",
    "correct_options": ["keynames[\"a\"]"]
  },
  {
    "question": "From your Greenfoot lessons, which of the following logic operators represents \"and\"?",
    "correct_options": ["&&"]
  },
  {
    "question": "When you import a class from another file you have to import the entire class. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "What do moving objects provide to your scene?",
    "correct_options": ["The action"]
  },
  {
    "question": "In Alice, we can avoid object collision using what?",
    "correct_options": ["Using object detection."]
  },
  {
    "question": "The say procedure in Alice plays an audio file. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "From your Alice lessons, which of the following is a tool to show the logic of an animation?",
    "correct_options": ["Flowchart"]
  },
  {
    "question": "Procedural abstraction may need to be implemented if an object in Alice needs to perform an action, but there isn't an inherited procedure that accomplishes that action. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following WHILE control structures commands the fish to move forward repeatedly 0.5 meters at a time, but stop if it collides with the shark?",
    "correct_options": ["None of the above"]
  },
  {
    "question": "From your Alice lessons, the \"Checklist for Animation Completion\" does not ask questions about the scenario and storyboards, because these are not valid parts of the animation creation process. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "A variable is a named location inside the computer's memory; once there, the information can be retrieved and changed. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "What do lines 9 and 11 do in the following code?",
    "correct_options": ["Examine a file and scan the next line."]
  },
  {
    "question": "Main is an example of what in the following code?  public static void main (String[] args) {  System.out.println{\"Hello World!\"); }",
    "correct_options": ["A method"]
  },
  {
    "question": "In Alice, which of the following arguments could be replaced with a random number?",
    "correct_options": ["Distance"]
  },
  {
    "question": "In Alice, which function is used to move an object directly to the center point of another object?",
    "correct_options": ["getDistance"]
  },
  {
    "question": "In Alice, the setVehicle procedure will associate one object to another. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "One type of object property is an object's position in the scene. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In the Greenfoot IDE, an instance's position is on the x and y coordinates. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "What does the following Greenfoot programming statement do? turn(18);",
    "correct_options": ["Turn the object 18 degrees."]
  },
  {
    "question": "In Greenfoot modifying an actor's constructor to accept an initial speed is a form of abstraction?",
    "correct_options": ["True"]
  },
  {
    "question": "Constructors are called automatically when a new instance of a class is created? True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "From your Greenfoot lessons, what is the parameter of the following constructor that creates a new image, and designates it to the Actor class?  setImage (new GreenfootImage(\"Bee01.png\"));",
    "correct_options": ["GreenfootImage"]
  },
  {
    "question": "Use your Greenfoot knowledge to answer the question. One reason to write a defined method in a class is to make it easier to read. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "A collision in Greenfoot is when two actors make contact?",
    "correct_options": ["True"]
  },
  {
    "question": "In Greenfoot, a semicolon is not necessary at the end of a method that uses dot notation. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "From your Greenfoot lessons, which of the following comparison operators represents \"greater than\"?",
    "correct_options": [">"]
  },
  {
    "question": "From your Greenfoot lessons, which axes define an object's position in a world?",
    "correct_options": ["x", "y"]
  },
  {
    "question": "Which Alice execution task corresponds with the following storyboard statement? <br>Cat rolls to the left.",
    "correct_options": ["Cat roll Left 1"]
  },
  {
    "question": "The list below describes variables. All are correct except which one?",
    "correct_options": ["Arranged in rows and columns."]
  },
  {
    "question": "What is the output produced by the following code?",
    "correct_options": ["j is 10 k is 5"]
  },
  {
    "question": "The move procedure in Alice moves an object in how many different possible directions?",
    "correct_options": ["6"]
  },
  {
    "question": "An animation gives the scenario a purpose. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "A flowchart is a useful way to illustrate how your Alice animation's characters will look. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "In Alice, which of the following is the most likely situation where procedural abstraction could be used?",
    "correct_options": ["One fish needs to swim forward 1 meter."]
  },
  {
    "question": "Consider the following: You want to use the BufferedReader and InputStreamReader classes to get user input from the command line. Which one of the following import statements must you use?",
    "correct_options": ["import java.io.*;"]
  },
  {
    "question": "Which of the following is not an example of the logic of an IF control structure?",
    "correct_options": ["Play the video three times."]
  },
  {
    "question": "Creating multiple versions of your Alice project saves time. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "An Alice event is considered what?",
    "correct_options": ["A keystroke or mouse click."]
  },
  {
    "question": "In Alice, what tab would you choose to start a new animation with a pre-populated world?",
    "correct_options": ["Starters"]
  },
  {
    "question": "Identify an example of an Alice expression.",
    "correct_options": ["\"Hello World.\""]
  },
  {
    "question": "Which of the following are ways to open an existing Alice project file after launching Alice?",
    "correct_options": [
      "Double-click on the project file name in the folder it is stored in on your computer.",
      "Select the project from the My Projects tab."
    ]
  },
  {
    "question": "From your Alice lessons, a textual storyboard provides a detailed, ordered list of the actions each object performs in each scene of the animation. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following is not an Alice variable value type?",
    "correct_options": ["Function"]
  },
  {
    "question": "Which is an example of the Boolean variable type?",
    "correct_options": ["True or False"]
  },
  {
    "question": "A loop can be infinite (continue forever) or conditional (stops upon a condition). True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In Alice, the procedures' arguments allow the programmer to adjust the object, motion, distance amount, and time duration. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In Alice, which control statement is used to invoke simultaneous movement?",
    "correct_options": ["Do Together"]
  },
  {
    "question": "In Alice, a computer program requires functions to tell it how to perform the procedure. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "From your Alice lessons, built-in functions provide precise property details for the following areas:",
    "correct_options": ["Proximity, size, spatial relation, and point of view."]
  },
  {
    "question": "In Greenfoot, you will never have to cast as we only ever use 2 classes - World and Actor.",
    "correct_options": ["False"]
  },
  {
    "question": "From your Greenfoot lessons, how do you know the program does not contain syntax errors?",
    "correct_options": ["Compile the code."]
  },
  {
    "question": "A class variable is also known as a ____________.",
    "correct_options": ["Field"]
  },
  {
    "question": "An if-else statement executes its first code block if a condition is true, and its second code block if a condition is false, but not both. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In Greenfoot, which keyword calls the World superclass?",
    "correct_options": ["super"]
  },
  {
    "question": "Which of the following is the default control statement in myFirstMethod?",
    "correct_options": ["Do In Order"]
  },
  {
    "question": "In Alice, a walking motion for a bipedal object can be achieved without the Do Together control statement. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "Which of the following actions would require a control statement to control animation timing?",
    "correct_options": ["A biped object walking."]
  },
  {
    "question": "Which one of the following event listener types is not available at the top-level of the addEvent drop down list in Alice?",
    "correct_options": ["Mouse"]
  },
  {
    "question": "From your Alice lessons, which programming instruction represents the following movement: A cat moves forward double (or twice) the distance to the tree.",
    "correct_options": [
      "this.Cat move Forward this.Cat getDistanceTo this.tree * 2.0"
    ]
  },
  {
    "question": "In Java, a function is a method that returns a value. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following statements about methods is false?",
    "correct_options": [
      "Classes must be defined directly within a method definition."
    ]
  },
  {
    "question": "Which of the following is an example of nesting in an Alice program?",
    "correct_options": [
      "Five Do Together statements are nested inside of a Do In Order statement."
    ]
  },
  {
    "question": "When presenting your Alice animation, it is not important to give the audience a reason to listen to the presentation. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "Saved Alice projects can be opened and edited. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In Java, which symbol is used to assign one value to another?",
    "correct_options": ["="]
  },
  {
    "question": "Which of the following would a clown fish object in Alice inherit from its class?",
    "correct_options": ["All of the above"]
  },
  {
    "question": "From your Alice lessons, what does inheritance mean?",
    "correct_options": [
      "Each subclass inherits the methods and properties of its superclass."
    ]
  },
  {
    "question": "A scenario gives the Alice animation a purpose. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "What type of parameter does the keyDown method expect?",
    "correct_options": ["The name of the key to press on the keyboard."]
  },
  {
    "question": "From your Greenfoot lessons, which of the following methods return the current rotation of the object?",
    "correct_options": ["int getRotation()"]
  },
  {
    "question": "Which of the following features of Greenfoot will locate syntax errors in your program?",
    "correct_options": ["Compilation"]
  },
  {
    "question": "How would the following sentence be written in Greenfoot source code? If Bee is turning, and the keyboard key \"d\" is down...",
    "correct_options": ["if (!isTurning && Greenfoot.isKeyDown(\"d\") )"]
  },
  {
    "question": "In Greenfoot, string concatenation reduces the number of redundant characters or phrases you need to type into each array. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "If an end to a while loop is not established, what happens?",
    "correct_options": ["The code executes and does not stop."]
  },
  {
    "question": "In Greenfoot, what happens if the end to a while loop isn't established?",
    "correct_options": ["The code will keep executing and will never stop."]
  },
  {
    "question": "What type of Greenfoot method would be used to turn an object?",
    "correct_options": ["turn();"]
  },
  {
    "question": "From your Greenfoot lessons, when a method needs additional data to perform a task, this data comes from parameters. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In the following Greenfoot method signature, which is the method name? void turnLeft()",
    "correct_options": ["turnLeft"]
  },
  {
    "question": "In Greenfoot, the class holds the general attributes of an instance, such as the methods it inherits. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In Greenfoot, a subclass is a specialization of a superclass. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In Greenfoot, you can use comparison operators to compare a variable to a random number. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In object oriented programming, programmers analyze a problem and create objects to solve the problem. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "From your Greenfoot lessons, if the condition in an if-statement is true, the first code segment is executed. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In Greenfoot, the Run button repeatedly executes all of the programming statements in the class's act method in sequential order until the pause button is clicked. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In Greenfoot, which of the following are execution controls?",
    "correct_options": ["Act", "Run", "Turn", "Speed", "Move"]
  },
  {
    "question": "Which keyword indicates that Greenfoot needs to create a new object?",
    "correct_options": ["new"]
  },
  {
    "question": "From your Greenfoot lessons, to view the methods that a class inherits, open the code editor and select documentation. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "In Greenfoot, after a subclass is created and compiled, you cannot edit the subclass's source code. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "Using the Greenfoot IDE, only five instances can be added to a scenario. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "The list below provides actions you can perform in the Greenfoot code editor except one. Which one should be removed?",
    "correct_options": [
      "Write source code to tell the class how to act in the scenario."
    ]
  },
  {
    "question": "In Greenfoot, what happens to an instance when the Act button is clicked in the environment?",
    "correct_options": [
      "The instance executes all of the programming statements in their class's act method repeatedly until the scenario is stopped."
    ]
  },
  {
    "question": "The Greenfoot method getRandomNumber is used to create predictable behaviour in your scenario",
    "correct_options": ["False"]
  },
  {
    "question": "Read the following method signature. Using your Greenfoot experience, what does this method do? public static int getRandomNumber (int limit)",
    "correct_options": [
      "Returns a random number between zero and the parameter limit."
    ]
  },
  {
    "question": "In Greenfoot, the properties of an instance can be modified in the documentation. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In Greenfoot, the turn method expects what type of information in its parameters?",
    "correct_options": ["Degrees to turn"]
  },
  {
    "question": "Which of the following Greenfoot methods returns a random number between 0, up to and including 10,000?",
    "correct_options": ["Greenfoot.getRandomNumber(10,000)"]
  },
  {
    "question": "In Alice, there is no way of seeing the code as Java code. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Each parameter is listed with its name first, then its data type. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "If you want one message to display if a user is below the age of 18 and a different message to display if the user is 18 or older, what type of construct would you use?",
    "correct_options": ["if"]
  },
  {
    "question": "In Alice, which of the following programming statements moves the cat backward, half the distance to the bird?",
    "correct_options": [
      "this.Cat move backward {this.Cat getDistanceTo this.Bird / 2}"
    ]
  },
  {
    "question": "What can be used as a guideline to ensure your Alice animation fulfills animation principles?",
    "correct_options": ["An animation checklist"]
  },
  {
    "question": "The Alice IF control structure requires the false statement to be populated. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "When creating an event based on a keypress which event handler would you use?",
    "correct_options": ["Keyboard"]
  },
  {
    "question": "Results of arithmetic operations cannot be stored in a variable. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following programming instructions commands the fish to continuously move forward a random speed between 0.5 and 1.0 meters, minus 0.25 meters, until it collides with the shark?",
    "correct_options": ["", "", "", ""]
  },
  {
    "question": "Which of the following does not describe methods?",
    "correct_options": ["Is associated with an instance variable."]
  },
  {
    "question": "The list below contains method descriptions. All are correct except which one?",
    "correct_options": ["Is associated with an instance variable."]
  },
  {
    "question": "When presenting your Alice animation, ensure that your presentation is thoroughly tested and complete. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "If the value already exists in the variable it is overwritten by the assignment operator (=). True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In Alice, where are arithmetic operators available?",
    "correct_options": ["Amount argument"]
  },
  {
    "question": "In Alice, when using a while loop you can only execute a single line of code within it. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "If a value has been assigned to (is stored in) a variable, that value will be overwritten when another value is assigned to the variable using the assignment \"=\" operator. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "From your Alice lessons, at what point in the animation process do you confirm the items on the \"Checklist for Animation Completion\"?",
    "correct_options": ["After adding each procedure to the Code editor."]
  },
  {
    "question": "In Alice, as part of the recording process you can demonstrate the events that are programmed within your animation. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "What do lines 7, 10 and 13 do in the following code?",
    "correct_options": ["Examine a file and scan the next line."]
  },
  {
    "question": "In Alice, we use the WHILE control statement to implement the conditional loop. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "The Alice animation should be tested throughout development, not just at the end of the animation's development. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Java programs can be simple programs that run from the command line, or they can have complex graphical user interfaces. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Define the value of the variable LapCount based on the following math calculation: LapCount + 10 = 15",
    "correct_options": ["5"]
  },
  {
    "question": "Examine the following code. What are the variables?",
    "correct_options": ["args", "n", "t", "i"]
  },
  {
    "question": "In Alice, functions ask questions about an object. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "To add a procedure to myFirstMethod, right-click on the procedure you wish to add and select the Add button. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "What is the purpose of a function in Alice?",
    "correct_options": ["To compute and answer a question about an object."]
  },
  {
    "question": "Debugging and testing are the process of running the animation one time and adjusting the control statements, procedures, and arguments.",
    "correct_options": ["False"]
  },
  {
    "question": "How do you create a programming instruction in Alice?",
    "correct_options": [
      "Click and drag the desired programming instruction into the Procedures tab."
    ]
  },
  {
    "question": "From your Alice lessons, inheritance means that the superclass inherits its traits from the subclass. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "In Alice, declaring a new procedure to shorten code and make it easier to read is a procedural abstraction technique. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Manually manipulating an Alice object with your cursor is a way to precisely position an object. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Debugging is the process of finding bugs in a software program. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following is not an example of a one-shot procedure?",
    "correct_options": ["Turn"]
  },
  {
    "question": "To access the Alice Code editor from the Scene editor, which button do you click?",
    "correct_options": ["Code Editor"]
  },
  {
    "question": "In Alice, the while control statement executes a set of procedures a specific number of times. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "From your Alice lessons, random numbers are numbers generated by the user with a pattern in their sequence. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "From your Alice lessons, which programming instruction represents the following movement: A turtle moves forward half the distance to the flower.",
    "correct_options": [
      "this.Turtle move Forward this.Turtle getDistanceTo this.Flower / 2.0"
    ]
  },
  {
    "question": "In Alice, functions are dragged into the control statement, not the procedure. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "After objects are positioned in the scene, it is wise to save multiple versions of the project, giving each version the same name. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "In Alice, you can use a function to get the current color of the object. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "In Alice, the computer specifies the low and high range values for the range of numbers from which to pull a randomized number. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "From your Alice lessons, what is a one-shot procedural method?",
    "correct_options": [
      "A procedure that is invoked when the Run button is clicked."
    ]
  },
  {
    "question": "In an Alice program, which code is executed when the Run button is clicked?",
    "correct_options": ["The code entered in myFirstMethod in the Code editor."]
  },
  {
    "question": "The comments you enter in Alice should describe the sequence of actions that take place in the code segment. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which Alice control statement executes a set of procedures simultaneously?",
    "correct_options": ["Do together"]
  },
  {
    "question": "Which Alice execution task corresponds with the following storyboard statement? <br><br>Cat turns to face mouse.",
    "correct_options": ["this.cat turnToFace this.mouse"]
  },
  {
    "question": "Copying programming instructions saves time when programming your Alice project. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In Alice, objects inherit the characteristics of their:",
    "correct_options": ["Class"]
  },
  {
    "question": "In Alice, where can you view the list of functions available for an object?",
    "correct_options": ["Functions tab in the methods panel."]
  },
  {
    "question": "In Alice, there is no way of reordering the function list in the function tab. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "The Alice Scene editor contains tools to rotate the camera view. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "Which of the following is a reason why you might disable programming statements in your Alice code?",
    "correct_options": ["To help isolate portions of code during testing."]
  },
  {
    "question": "Rings will appear around a sub-part indicating how you can reposition it. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In Alice, when a new procedure is declared, all subclasses of the superclass will inherit the procedure. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "It is important to save often while debugging your program. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Functions answer questions about an object, such as its height, width, depth, and even distance to another object. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In Alice, you examine code where a bird moves its wings forward and backward while moving forward simultaneously across the scene. You notice that this set of procedures is repeated in the Code editor ten times to achieve this motion. How could procedural abstraction be used to make the code simpler and easier to read?",
    "correct_options": [
      "Declare a separate \"fly\" procedure for the body moving forward and wings moving up and down."
    ]
  },
  {
    "question": "From your Alice lessons, which of the following are types of storyboards?",
    "correct_options": ["Visual"]
  },
  {
    "question": "All objects in Alice have three-dimensional coordinates on which axes?",
    "correct_options": ["All of the above"]
  },
  {
    "question": "From your Alice lessons, where on an object do an object's axes intersect?",
    "correct_options": ["At the object's center point"]
  },
  {
    "question": "In Alice, each class has a set of pre-defined procedures and functions. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "The delay procedure in Alice halts an object's motion before the next motion begins. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "In Alice, once an instance is added to the scene, it cannot be deleted. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which Alice tool is used to demonstrate the process flow of an animation?",
    "correct_options": ["Flowchart"]
  },
  {
    "question": "In Alice, new procedures are declared in the Scene editor. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "In Alice, what function would you use to get a whole number from the user?",
    "correct_options": ["getIntegerFromUser"]
  },
  {
    "question": "An example of an expression is:",
    "correct_options": ["3*3=9"]
  },
  {
    "question": "In Alice, we can avoid object collision using what?",
    "correct_options": ["Using object detection."]
  },
  {
    "question": "In Alice, the use of conditional control structures allows what two types of loops?",
    "correct_options": ["infinite"]
  },
  {
    "question": "A conditional loop is a loop that will continue forever. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "To save a class to the myClasses directory, you do so at the ________ level.",
    "correct_options": ["Class"]
  },
  {
    "question": "When you import a class from another file you have to import the entire class. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "What is the result of the following code?",
    "correct_options": ["x > y : false x < y : true"]
  },
  {
    "question": "Which of the following does not describe variables?",
    "correct_options": ["Arranged in rows and columns."]
  },
  {
    "question": "The condition in a WHILE loop is a boolean expression. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In Java, a function is a method that returns a value. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "In Alice, there is no way of seeing the code as Java code. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "A variable is a place in memory where data of a specific type can be stored for later retrieval and use by your program",
    "correct_options": ["True"]
  },
  {
    "question": "From your Alice lessons, animations should be tested by the programmer before they are considered complete. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "From your Alice lessons, the \"Checklist for Animation Completion\" does not ask questions about the scenario and storyboards, because these are not valid parts of the animation creation process. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "What should you refer to for the animation's design specifications as you program your Alice animation?",
    "correct_options": ["Storyboard"]
  },
  {
    "question": "From your Alice lessons, complete the following sentence: When coded, an event triggers a ___________.",
    "correct_options": ["Procedure"]
  },
  {
    "question": "In Alice, when is the sceneActivationListener executed?",
    "correct_options": ["At the beginning of the animation"]
  },
  {
    "question": "What can be used as a guideline to ensure your Alice animation fulfills animation principles?",
    "correct_options": ["An animation checklist"]
  },
  {
    "question": "When presenting your Alice animation, ensure that your presentation is thoroughly tested and complete. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "From your Alice lessons, if you examined a science process that had many steps, which of the following is a way that you could apply functional decomposition to this process?",
    "correct_options": [
      "1. Present the problem as an animation. 2. Further refine and define the tasks needed for each high level step. 3. Identify the high level steps for the science concept."
    ]
  },
  {
    "question": "The list below describes variables. All are correct except which one?",
    "correct_options": ["Arranged in rows and columns."]
  },
  {
    "question": "A typical application uses various values and these values continuously change while the program is running. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Identify an example of an Alice expression.",
    "correct_options": ["12 + 15 = 27"]
  },
  {
    "question": "Which of the following WHILE control structures commands the fish to move forward repeatedly 0.5 meters at a time, but stop if it collides with the shark?",
    "correct_options": [""]
  },
  {
    "question": "From your Alice lessons, variables are fixed and cannot be changed. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "Which of the following is not an Alice variable value type?",
    "correct_options": ["Function"]
  },
  {
    "question": "Which of the following statements about methods is false?",
    "correct_options": [
      "Classes must be defined directly within a method definition."
    ]
  },
  {
    "question": "If you want one message to display if a user is below the age of 18 and a different message to display if the user is 18 or older, what type of construct would you use?",
    "correct_options": ["if"]
  },
  {
    "question": "Which is an example of the Boolean variable type?",
    "correct_options": ["True or False"]
  },
  {
    "question": "What do lines 7, 10 and 13 do in the following code?",
    "correct_options": [
      "Print \"A\", \"B\" and the value of num3 on the screen."
    ]
  },
  {
    "question": "What do lines 9 and 11 do in the following code?",
    "correct_options": ["Examine a file and scan the next line."]
  },
  {
    "question": "Results of arithmetic operations cannot be stored in a variable. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "Examine the following code. What are the variables?",
    "correct_options": ["t", "args", "n", "i"]
  },
  {
    "question": "Alice uses built-in math operators; they are:",
    "correct_options": ["All of the above"]
  },
  {
    "question": "In Alice, which of the following programming statements moves the cat forward the distance to the bird?",
    "correct_options": [
      "this.Cat move forward {this.Bird getDistanceTo this.Cat / 2}"
    ]
  },
  {
    "question": "The Alice IF control structure requires the false statement to be populated. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "A loop can be infinite (continue forever) or conditional (stops upon a condition). True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In Alice, as part of the recording process you can demonstrate the events that are programmed within your animation. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following are examples of elements you would test in your Alice animation?",
    "correct_options": [
      "All of the procedures display in alphabetical order in the Procedures tab."
    ]
  },
  {
    "question": "In Alice, what tab would you choose to start a new animation with a pre-populated world?",
    "correct_options": ["Starters"]
  },
  {
    "question": "From your Greenfoot lessons, what can methods belong to?",
    "correct_options": ["Classes"]
  },
  {
    "question": "Which of the following comparison operators represents \"greater than or equal\"?",
    "correct_options": [">="]
  },
  {
    "question": "Which keyword indicates that Greenfoot needs to create a new object?",
    "correct_options": ["new"]
  },
  {
    "question": "Which of the following Greenfoot methods returns a random number between 0, up to and including 10,000?",
    "correct_options": ["Greenfoot.getRandomNumber(10,000)"]
  },
  {
    "question": "When designing a game in Greenfoot, it helps to define the actions that will take place in a textual storyboard. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "From your Greenfoot lessons, where do you review a class's inherited methods?",
    "correct_options": ["Documentation"]
  },
  {
    "question": "The list below provides actions you can perform in the Greenfoot code editor except one. Which one should be removed?",
    "correct_options": ["Write and edit comments."]
  },
  {
    "question": "From your Greenfoot lessons, when a method needs additional data to perform a task, this data comes from parameters. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In the Greenfoot IDE, which of the following is not a property of an instance?",
    "correct_options": ["Scenario name"]
  },
  {
    "question": "From your Greenfoot lessons, to view the methods that a class inherits, open the code editor and select documentation. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "In the Greenfoot IDE, which type of variable allows instances to store information?",
    "correct_options": ["Instance variable"]
  },
  {
    "question": "Which of the following Java syntax is used to correctly create a Bee subclass?",
    "correct_options": ["public class Bee extends World"]
  },
  {
    "question": "From your Greenfoot lessons, which of the following is not a step to creating a new subclass?",
    "correct_options": ["Program the class to move forward."]
  },
  {
    "question": "A subclass has what kind of relationship to a superclass?",
    "correct_options": ["\"is-a\""]
  },
  {
    "question": "In Greenfoot, what happens to an instance when the Act button is clicked in the environment?",
    "correct_options": [
      "The instance executes all of the programming statements in their class's act method once."
    ]
  },
  {
    "question": "From your Greenfoot lessons, which axes define an object's position in a world?",
    "correct_options": ["x", "y"]
  },
  {
    "question": "In Greenfoot, you can use comparison operators to compare a variable to a random number. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In Greenfoot, the origin of the world coordinate system (0,0) starts in the center of the world. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "From your Greenfoot lessons, which of the following comparison operators represents \"greater than\"?",
    "correct_options": [">"]
  },
  {
    "question": "What does an instance of the World class do?",
    "correct_options": ["Provide the background scenery for the scenario."]
  },
  {
    "question": "In Greenfoot, you must first create an instance before you create a class. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "In Greenfoot, a subclass is created by right-clicking on a superclass. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "In Greenfoot, the instance has a source code editor. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "In Greenfoot, the turn method expects what type of information in its parameters?",
    "correct_options": ["Degrees to turn"]
  },
  {
    "question": "In Greenfoot, the properties of an instance can be modified in the documentation. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "In the Greenfoot IDE, which of the following are components of a parameter?",
    "correct_options": ["Parameter type", "Parameter name"]
  },
  {
    "question": "From your Greenfoot lessons, what are the ways that you can view a class's methods?",
    "correct_options": ["In the class's documentation"]
  },
  {
    "question": "In Greenfoot, a method with what kind of return type is used to learn more about an object's orientation?",
    "correct_options": ["non-void return type"]
  },
  {
    "question": "What is the output of the following code segment? int num = 7; while(num >= 0) { num -= 3; } System.out.println(num);",
    "correct_options": ["-2"]
  },
  {
    "question": "Which of the following correctly initializes a for loop that executes 5 times?",
    "correct_options": ["for(int i = 0; i < 5; i++)"]
  },
  {
    "question": "For both the if-else construct and the for loop, it is true to say that when the condition statement is met, the construct is exited. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "A counter used in a for loop cannot be initialized within the For loop header. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "Which of the following are types of loops in Java?",
    "correct_options": ["while", "do-while", "for"]
  },
  {
    "question": "In a for loop, the counter is automatically incremented after each loop iteration. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "Identify which situation could be an example of a while loop.",
    "correct_options": [
      "Taking coins out of a pile one at a time and adding their value to the total until there are no more coins in the pile to add."
    ]
  },
  {
    "question": "The three logic operators in Java are:",
    "correct_options": ["&&, ||, !"]
  },
  {
    "question": "The following prints Yes on the screen. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "This keyword is used to instruct specific code when the input for a switch statement that does not match any of the cases.",
    "correct_options": ["default"]
  },
  {
    "question": "How would you use the ternary operator to rewrite this if statement? if (skillLevel > 5) numberOfEnemies = 10; else numberOfEnemies = 5;",
    "correct_options": ["numberOfEnemies = (skillLevel > 5) ? 10 : 5;"]
  },
  {
    "question": "What will print if the following Java code is executed?",
    "correct_options": ["0"]
  },
  {
    "question": "Consider that a Scanner has been initialized such that: Scanner in = new Scanner(System.in); Which of the following lines of code reads in the usermes input and sets it equal to a new String called input?",
    "correct_options": ["String input = in.next();"]
  },
  {
    "question": "Which of the following could be a reason to use a switch statement in a Java program?",
    "correct_options": [
      "Because it allows the program to run certain segments of code and neglect to run others based on the input given."
    ]
  },
  {
    "question": "How would you use the ternary operator to rewrite this if statement?if (gender == \"male\") System.out.print(\"Mr.\"); else System.out.print(\"Ms.\");",
    "correct_options": [
      "System.out.print( (gender == \"male\") ? \"Mr.\" : \"Ms.\" );"
    ]
  },
  {
    "question": "In Alice, which control statement is used to invoke simultaneous movement?",
    "correct_options": ["Do Together"]
  },
  {
    "question": "In Alice, which procedure is used to assign one object as the vehicle of another?",
    "correct_options": ["setObjectVehicle"]
  },
  {
    "question": "In Alice, a walking motion for a bipedal object can be achieved without the Do Together control statement. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "As the Alice programmer, you render the animation on your own. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "In Alice it is not possible to transfer a class from one animation to another. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "When creating an event based on a keypress which event handler would you use?",
    "correct_options": ["Keyboard"]
  },
  {
    "question": "Each parameter is listed with its name first, then its data type. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "Java programs can be simple programs that run from the command line, or they can have complex graphical user interfaces. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Alice 3 will periodically remind you to save your project. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "What tool can be used to diagram an IF conditional execution statement?",
    "correct_options": ["Conditional flow diagram"]
  },
  {
    "question": "Procedural abstraction may need to be implemented if an object in Alice needs to perform an action, but there isn't an inherited procedure that accomplishes that action. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "From your Alice lessons, a flowchart could be created in a software program, or documented in a journal. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "A textual storyboard helps the reader understand the actions that will take place during the animation. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following are ways to open an existing Alice project file after launching Alice?",
    "correct_options": [
      "Double-click on the project file name in the folder it is stored in on your computer."
    ]
  },
  {
    "question": "In Alice, which of the following programming statements moves the butterfly forward, double the distance to the tree?",
    "correct_options": [
      "this.Butterfly move forward {this.Butterfly getDistanceTo this.Tree * 2}"
    ]
  },
  {
    "question": "Which of the following is not a valid primitive type in Java?",
    "correct_options": ["String"]
  },
  {
    "question": "To access the Alice Code editor from the Scene editor, which button do you click?",
    "correct_options": ["Code Editor"]
  },
  {
    "question": "Define the value of the variable LapCount based on the following math calculation: LapCount + 10 = 15",
    "correct_options": ["5"]
  },
  {
    "question": "From your Alice lessons, random numbers are numbers generated by the user with a pattern in their sequence. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "In Alice, where you would you get access to the specific joints of an object that are not available through the object drop down menu?",
    "correct_options": ["code editor"]
  },
  {
    "question": "In Greenfoot, you can only interact with the scenario using a keyboard.",
    "correct_options": ["False"]
  },
  {
    "question": "Which method is used to play sound in your Greenfoot game?",
    "correct_options": ["playSound method"]
  },
  {
    "question": "From your Greenfoot lessons, in an if-statement, the programming statements written in curly brackets are executed simultaneously. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "In Greenfoot, which of the following methods display an object's orientation?",
    "correct_options": ["int getRotation()"]
  },
  {
    "question": "In Greenfoot, a local variable is declared at the beginning of a class. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "In Greenfoot, arrays are a way to hold and access multiple variables, and assign different values to new instances each time the while loop executes and produces a new instance. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "In Greenfoot, which of the following statements could prevent an infinite loop from occurring?",
    "correct_options": ["i = i + 1"]
  },
  {
    "question": "From your Greenfoot lessons, when do infinite loops occur?",
    "correct_options": ["When the end to the code isn't established."]
  },
  {
    "question": "In Greenfoot a collision is when 2 actors touch?",
    "correct_options": ["True"]
  },
  {
    "question": "Which actor method is used to detect a simple collision?",
    "correct_options": ["isTouching()"]
  },
  {
    "question": "The first step to executing an if-else statement is to:____________.",
    "correct_options": ["Evaluate the condition"]
  },
  {
    "question": "Use you Greenfoot knowledge: What range of numbers does the following method return? Greenfoot.getRandomNumber(30)",
    "correct_options": ["A random number between 0 and 29."]
  },
  {
    "question": "In a Greenfoot if-else statement, if the condition is true, the if-statement is executed, and then the else-statement is executed. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "The list below displays characteristics of a Greenfoot world constructor, except for one. Which one should be removed?",
    "correct_options": ["Has a void return type."]
  },
  {
    "question": "Which of the following type of audience should you ask to play your Greenfoot game during the testing phase?",
    "correct_options": ["Testing"]
  },
  {
    "question": "Which of the following features of Greenfoot will locate syntax errors in your program?",
    "correct_options": ["Compilation"]
  },
  {
    "question": "An instance variable can be saved and accessed later, even if the instance no longer exists. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "Using the Greenfoot IDE, only five instances can be added to a scenario. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "From your Greenfoot lessons, instances do not have any memory. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "Which Greenfoot control operator is used to test if two values are equal?",
    "correct_options": ["== operator"]
  },
  {
    "question": "In Greenfoot, we typically use the act method in the class to automatically create the Actor instances when the world is initialized. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "In Greenfoot, which method body correctly adds an instance of the World to a scenario, with size x = 300 y = 300 and a resolution of 2 pixels per cell?",
    "correct_options": ["super(300,300,2);"]
  },
  {
    "question": "Use your Greenfoot knowledge: If an Actor class Fly has a variable defined to store the current speed, which of the following statements would successfully add a Fly and define the current speed as 2?",
    "correct_options": ["addObject (new Fly(2), 150, 150);"]
  },
  {
    "question": "Where should the constructor for a superclass be called?",
    "correct_options": ["The first line of the constructor in the subclass."]
  },
  {
    "question": "Which of the following is the proper way to set the public variable length of the super class equal to 5 from inside the subclass?",
    "correct_options": ["super.length = 5"]
  },
  {
    "question": "Which of the following correctly describes an \"is-a\" relationship?",
    "correct_options": [
      "A programming philosophy that promotes simpler, more efficient coding by using existing code for new applications."
    ]
  },
  {
    "question": "You can create static classes as independent classes. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Static variables can't use which of the following modifiers?",
    "correct_options": ["friendly"]
  },
  {
    "question": "Static classes can't return instances of the parent class when the parent class uses a private constructor. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following could be a reason to return an object?",
    "correct_options": [
      "The method makes changes to the object and you wish to continue to use the updated object outside of the method."
    ]
  },
  {
    "question": "You are assigned to write a method that compares two objects of type Career. One requirement of your assignment is to have your method compare the \"greatestPossibleSalary\" instance data of Career objects. The \"greatestPossibleSalary\" field is data type int. What would be the best return type from your compare method?",
    "correct_options": [
      "Career, because if it returns the highest paying Career object it will be able to use the same method later to compare other aspects of Career objects."
    ]
  },
  {
    "question": "How is it possible for overloading to work?",
    "correct_options": [
      "Java Virtual Machine searches until it finds a constructor name and argument type match."
    ]
  },
  {
    "question": "Which of the following is a goal of the object model?",
    "correct_options": [
      "Providing modular code that can be reused by other programs or classes."
    ]
  },
  {
    "question": "If Sandal extends Shoe, it is possible to declare an object such that Sandal s = new Shoe();",
    "correct_options": ["False"]
  },
  {
    "question": "It is possible to override methods such as equals() and toString() in a subclass of Object to fit the needs of the objects of the subclass. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following is true?",
    "correct_options": [
      "A class always has a constructor (possibly automatically supplied by the java compiler)."
    ]
  },
  {
    "question": "What operator do you use to call an object's constructor method and create a new object?",
    "correct_options": ["new"]
  },
  {
    "question": "A class can have multiple constructors. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following creates a method that compiles with no errors in the class?",
    "correct_options": ["None of the above."]
  },
  {
    "question": "Java's garbage collection is when all references to an object are gone, the memory used by the object is automatically reclaimed. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following creates a Object from the Animal class listed below?",
    "correct_options": ["Animal dog=new Animal();"]
  },
  {
    "question": "Which segment of code represents a correct way to define a variable argument method?",
    "correct_options": ["String easyArray(String ... elems) {//code}"]
  },
  {
    "question": "Static classes can extend their parent class. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "You can use an inner static class to return an instance of its outer class container. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "Identify the step (s) in creating a Triangle Applet that displays two triangles.",
    "correct_options": [
      "Override the paint method to include the triangles.",
      "Draw the 2nd triangle using the inherited fillPolygon method.",
      "Run and compile your code."
    ]
  },
  {
    "question": "Why would a programmer use polymorphism rather than sticking to a standard array?",
    "correct_options": [
      "Because it is easier to add or remove objects using polymorphism even when all of the objects are of the same type."
    ]
  },
  {
    "question": "Which of the following correctly describes the use of the keyword super?",
    "correct_options": [
      "A keyword that allows subclasses to access methods, data, and constructors from their parent class."
    ]
  },
  {
    "question": "It is possible to extend a class that already exists in Java, such as the Applet class. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which is the most accurate description of the code reuse philosophy?",
    "correct_options": [
      "A programming philosophy that promotes simpler, more efficient coding by using existing code for new applications."
    ]
  },
  {
    "question": "An argument is a value that the procedure uses to complete its task. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Only acting objects have one-shot procedures. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "In Alice, a computer program requires functions to tell it how to perform the procedure. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "In Alice, the procedures' arguments allow the programmer to adjust the object, motion, distance amount, and time duration. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "Which of the following elements of the Alice animation should be tested before the animation is considered complete?",
    "correct_options": ["All of the above."]
  },
  {
    "question": "From your Alice lessons, functional decomposition is the process of taking a complex problem or process and growing it into larger parts that are easier to manage. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "What does a visual storyboard help the reader understand?",
    "correct_options": ["The actions that will take place."]
  },
  {
    "question": "In Alice, procedural abstraction is the concept of making code easier to understand and reuse. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Before you can begin to develop the animation storyboard, what must be defined?",
    "correct_options": ["The scenario"]
  },
  {
    "question": "If you need to repeat a group of Java statements many times, which Java construct should you use?",
    "correct_options": ["while loop"]
  },
  {
    "question": "You want a block of code to be executed only once if certain conditions are met. What type of Java construct would you use?",
    "correct_options": ["if"]
  },
  {
    "question": "When something is broken or doesn't work as intended in a software program, it is referred to as a _________?",
    "correct_options": ["Bug"]
  },
  {
    "question": "From your Alice lessons, which programming instruction represents the following movement: A cat moves forward double (or twice) the distance to the tree.",
    "correct_options": [
      "this.Cat move Forward this.Cat getDistanceTo this.tree * 2.0"
    ]
  },
  {
    "question": "Alice uses built-in math operators. They are:",
    "correct_options": ["All of the above"]
  },
  {
    "question": "From your Alice lessons, which control statement executes instructions simultaneously?",
    "correct_options": ["Do together"]
  },
  {
    "question": "From your Alice lessons, the IF control structure can process one true and one false response. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In Greenfoot, a defined variable is a variable that is defined in an instance. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "In Greenfoot, the == operator is used to test if two values are equal. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "When a program is tested once and it works then testing is complete.",
    "correct_options": ["False"]
  },
  {
    "question": "From your Greenfoot lessons, Which of the following statements is most correct?",
    "correct_options": [
      "My program is complete when it runs and I've tested the code."
    ]
  },
  {
    "question": "Which of the following comparison symbols represents equals?",
    "correct_options": ["= ="]
  },
  {
    "question": "In Greenfoot, which class has methods that allow you to get the status of the mouse?",
    "correct_options": ["Greenfoot"]
  },
  {
    "question": "In Greenfoot what command would you use to detect if a mouse has been clicked on an actor?",
    "correct_options": ["Greenfoot.mouseClicked(this)"]
  },
  {
    "question": "Use your Greenfoot knowledge: Abstraction occurs in many different ways in programming. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "From your Greenfoot lessons, which of the following are examples of actions that can be achieved using the while loop?",
    "correct_options": ["All of the above"]
  },
  {
    "question": "Which of the following is not a component of a while loop?",
    "correct_options": ["if statement"]
  },
  {
    "question": "In Greenfoot to create a new instance of a class, you right-click on the class, then select which of the following commands in the class menu?",
    "correct_options": ["new Duke()"]
  },
  {
    "question": "From your Greenfoot lessons, an instance inherits all of the characteristics of the class, and those characteristics cannot be changed. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "From your Greenfoot lessons, which of the following methods return the current rotation of the object?",
    "correct_options": ["int getRotation()"]
  },
  {
    "question": "In Greenfoot, what happens if the condition is false in an if-statement?",
    "correct_options": ["The programming statements are not executed."]
  },
  {
    "question": "What does the following Greenfoot programming statement do? turn(18);",
    "correct_options": ["Turn the object 18 degrees."]
  },
  {
    "question": "From the Greenfoot IDE, where are inherited methods located?",
    "correct_options": ["In the documentation"]
  },
  {
    "question": "A collision in Greenfoot is when two actors make contact?",
    "correct_options": ["True"]
  },
  {
    "question": "Defined methods are methods that are only created by the Greenfoot development team?",
    "correct_options": ["False"]
  },
  {
    "question": "In Alice, when a new procedure is declared, all subclasses of the superclass will inherit the procedure. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "From your Alice lessons, which of the following are types of storyboards?",
    "correct_options": ["Visual"]
  },
  {
    "question": "The comments you enter in Alice should describe the sequence of actions that take place in the code segment. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "What is the purpose of a function in Alice?",
    "correct_options": ["To compute and answer a question about an object."]
  },
  {
    "question": "The Procedures tab and the Functions tab are the two tabs available in the Alice methods panel. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "In Alice, which function is used to move an object directly to the center point of another object?",
    "correct_options": ["getObject"]
  },
  {
    "question": "When is an instance created in Alice?",
    "correct_options": ["After the class icon is dragged into the scene."]
  },
  {
    "question": "In Alice, when two objects are synchronized and move together, this means that one object is:",
    "correct_options": ["An instance of another"]
  },
  {
    "question": "In Alice, which of the following is not a control statement?",
    "correct_options": ["Move"]
  },
  {
    "question": "When you edit an object's properties in the Scene editor, the changes do not take effect until the Run button is clicked. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "One type of object property is an object's position in the scene. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "From your Alice lessons, what does the Count control statement do?",
    "correct_options": ["Executes statements a specific number of times."]
  },
  {
    "question": "In Alice, how would you get the length of a fish object?",
    "correct_options": ["getLength"]
  },
  {
    "question": "In Alice, functions ask questions about an object. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "After each execution of your Alice animation, what element or elements could be adjusted in your code?",
    "correct_options": ["All of the above"]
  },
  {
    "question": "Debugging and testing is the process of running the animation one time, and adjusting the control statements, procedures, and arguments.",
    "correct_options": ["False"]
  },
  {
    "question": "Which of the following ways can you modify the code in the code editor window?",
    "correct_options": ["Drag to reorder", "Copy & paste"]
  },
  {
    "question": "From your Alice lessons, what is a one-shot procedural method?",
    "correct_options": [
      "A procedure that is invoked when the Run button is clicked."
    ]
  },
  {
    "question": "Alice objects move relative to the orientation of the person viewing the animation. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which Alice control statement executes a set of procedures simultaneously?",
    "correct_options": ["Do together"]
  },
  {
    "question": "A complete Alice instruction includes which of the following components?",
    "correct_options": ["Procedure"]
  },
  {
    "question": "After objects are positioned in the scene, it is wise to save multiple versions of the project, giving each version the same name. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "Breaking down a problem or process into smaller parts makes it easier to manage. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In Alice, which of the following situations could benefit from declaring a new procedure?",
    "correct_options": [
      "A single motion, such as walking, takes up a lot of room in myFirstMethod."
    ]
  },
  {
    "question": "The first step to using a top-down approach to programming is to create a table to align the storyboard steps to the programming instructions. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "From your Alice lessons, which programming instruction represents the following movement: A person moves forward the distance to the table, minus the depth of the person.",
    "correct_options": [
      "this.Person move Forward this.Person getDistanceTo this.Table - this.Person getDepth"
    ]
  },
  {
    "question": "Defining the scenario, and the Alice animation to represent the scenario, is the first step to programming your animation. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following would a clown fish object in Alice inherit from its class?",
    "correct_options": ["All of the above"]
  },
  {
    "question": "In Alice, what are the forms of a scenario?",
    "correct_options": [
      "A task to perform.",
      "A problem to solve.",
      "A system to start."
    ]
  },
  {
    "question": "In Alice, what does the resize handle style do?",
    "correct_options": [
      "Change size of the object and stretch it along the x, y, and z axes"
    ]
  },
  {
    "question": "From your Alice lessons, a textual storyboard provides a detailed, ordered list of the actions each object performs in each scene of the animation. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which option copies a programming instruction to the clipboard?",
    "correct_options": ["Copy to Clipboard"]
  },
  {
    "question": "In Alice, Do In Order and Do Together:",
    "correct_options": ["Are control statements"]
  },
  {
    "question": "In the Greenfoot IDE, any new methods you create are written in the class's source code. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In reference to Greenfoot, if the following method was defined in a superclass, public void turnAtEdge(){ ... } all subclasses of the superclass will inherit the method.True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "From your Greenfoot lessons, how do you know the program does not contain syntax errors?",
    "correct_options": ["Compile the code."]
  },
  {
    "question": "From your Greenfoot lessons, a problem statement defines the purpose for your game. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "From your Greenfoot lessons, a scenario is a game or simulation implemented in Greenfoot. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In the Greenfoot IDE, what symbols indicate that the variable is an array?",
    "correct_options": ["Square brackets [ ]"]
  },
  {
    "question": "In the following Greenfoot array, what statement would you write to access the \"a\" key? Keynames = {\"a\", \"b\", \"c\", \"d\"};",
    "correct_options": ["keynames[\"a\"]"]
  },
  {
    "question": "From your Greenfoot lessons, which of the following logic operators represents \"and\"?",
    "correct_options": ["&&"]
  },
  {
    "question": "From your Greenfoot lessons, what types of values cannot be stored in a local variable?",
    "correct_options": ["method", "Objects", "World name", "Class name"]
  },
  {
    "question": "In Java what is casting?",
    "correct_options": [
      "Casting is when we want to tell the java compiler that a class we are accessing is really another type of class"
    ]
  },
  {
    "question": "In Greenfoot, which method is used to end a game?",
    "correct_options": ["Greenfoot.stop( );"]
  },
  {
    "question": "Using the Greenfoot IDE, when is a constructor automatically executed?",
    "correct_options": ["When a new instance of the class is created."]
  },
  {
    "question": "In Greenfoot, which method is used to add a new instance to a scenario when the world is initialized?",
    "correct_options": ["addObject"]
  },
  {
    "question": "In Greenfoot, which method would you use to obtain input from the user?",
    "correct_options": ["ask()"]
  },
  {
    "question": "In Greenfoot you can interact with the scenario using a mouse.",
    "correct_options": ["True"]
  },
  {
    "question": "From your Greenfoot lessons, dot notation allows you to use a method from a different class, if the class you are programming does not possess the method. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "What does the following Greenfoot programming statement tell the class to do? if (Greenfoot.getRandomNumber(100) < 6) { turn(18); }",
    "correct_options": [
      "If a random number is returned that is less than 6, turn 18 degrees."
    ]
  },
  {
    "question": "When a Greenfoot code segment is executed in an if-statement, each line of code is executed in sequential order. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "The list below displays components of the Greenfoot source code editor except one. Which one should be removed?",
    "correct_options": ["Instance creator"]
  },
  {
    "question": "A class variable is also known as a ____________.",
    "correct_options": ["Field"]
  },
  {
    "question": "In Greenfoot, a variable can be saved and accessed later, even if the instance no longer exists. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "In Greenfoot, which of the following options are not possible when associating an image file with an instance?",
    "correct_options": ["Add a video"]
  },
  {
    "question": "A workspace is:",
    "correct_options": ["All of the above."]
  },
  {
    "question": "In a Java IDE, when you run a Java Application, where may the results display?",
    "correct_options": ["Console View"]
  },
  {
    "question": "When converting gallons to liters its best to put the calculation result into a variable with a _______________ data type.",
    "correct_options": ["double"]
  },
  {
    "question": "In a project, 1 of the classes must contain a main method. True or False?",
    "correct_options": ["True"]
  },
  {
    "question": "Write a declaration statement that will hold a number like 2.541.",
    "correct_options": ["double number;"]
  },
  {
    "question": "Which of the following is the name of a Java primitive data type?",
    "correct_options": ["int"]
  },
  {
    "question": "Which of the following statements displays 12345? I. System.out.println( 123 * 100 + 45); II. System.out.println(\"123\" + 45); III. System.out.println( 12 + \"345\");",
    "correct_options": ["I and II only."]
  },
  {
    "question": "The String methods equals and compareTo perform the exact same function. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "Given the code: String s = new String(\"abc\"); Which of the following statements will change the length of s to the largest length?",
    "correct_options": ["s.replace(\"a\", \"aa\")"]
  },
  {
    "question": "The String methods equals and compareTo perform similar functions and differ in their return type. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "What will the following code segment output?  String s=\"\";  System.out.println(s);",
    "correct_options": ["\"\""]
  },
  {
    "question": "The following program prints \"Equal\". True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "When importing another package into a class you must import only the package classes that will be called and not the entire package. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the two diagrams below illustrate the general form of a Java program?",
    "correct_options": ["Example B"]
  },
  {
    "question": "Which of the following is true about a do-while loop?",
    "correct_options": [
      "It is a modified while loop that allows the program to run through the loop once before testing the boolean condition."
    ]
  },
  {
    "question": "How many times will the following loop be executed? What is the value of x after the loop has finished? What is the value of count after the loop has finished? int count = 17; int x = 1; while(count > x){ x*=3; count-=3; }",
    "correct_options": ["3; 27; 8"]
  },
  {
    "question": "How would you use the ternary operator to rewrite this if statement?  if (gender == \"female\") System.out.print(\"Ms.\"); else System.out.print(\"Mr.\");",
    "correct_options": [
      "System.out.print( (gender == \"female\") ? \"Ms.\" : \"Mr.\" );"
    ]
  },
  {
    "question": "Which of the two diagrams below illustrate the correct syntax for variables used in an if-else statement?",
    "correct_options": ["Example A"]
  },
  {
    "question": "What will be the content of array variable table after executing the following code?",
    "correct_options": ["1 0 01 1 01 1 1"]
  },
  {
    "question": "Which of the following statements is a valid array declaration?",
    "correct_options": ["double[] marks;"]
  },
  {
    "question": "The following segment of code initializes a 2 dimensional array of references. True or false?  String[][] array={{\"a\", \"b\", \"C\"},{\"a\", \"b\", \"c\"}};",
    "correct_options": ["True"]
  },
  {
    "question": "The following segment of code initializes a 2 dimensional array of primitive data types. True or false? double[][] a=new double[4][5];",
    "correct_options": ["True"]
  },
  {
    "question": "Which of the following defines an Exception?",
    "correct_options": [
      "A problem that can be corrected or handled by your code."
    ]
  },
  {
    "question": "Suppose you misspell a method name when you call it in your program. Which of the following explains why this gives you an exception?",
    "correct_options": [
      "Because the interpreter does not recognize this method since it was never initialized, the correct spelling of the method was initialized."
    ]
  },
  {
    "question": "What does it mean to catch an exception?",
    "correct_options": ["It means to handle it."]
  },
  {
    "question": "What exception message indicates that a variable may have been mispelled somewhere in the program?",
    "correct_options": ["variableName cannot be resolved to a variable"]
  },
  {
    "question": "It is possible to inherit from an abstract class. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "What is true about the Object class?",
    "correct_options": ["It is the highest superclass."]
  },
  {
    "question": "If we override the toString() method with the code below, what would be the result of printing?",
    "correct_options": [
      "It would print the array one element at a time. The console screen would display: 0 18 215 64 11 42"
    ]
  },
  {
    "question": "Which of the following is the correct way to code a method with a return type an object Automobile?",
    "correct_options": [
      "Automobile upgrade(Automobile carA){  carA.setTurbo(\"yes\");  return carA;}"
    ]
  },
  {
    "question": "Which of the following is the definition of a constructor?",
    "correct_options": [
      "A special method that is used to assign initial values to instance variables in a class."
    ]
  },
  {
    "question": "A team is working on a coding project. They desire that all portions of their code should have access to the classes that they write. What access modifier should be used for each class?",
    "correct_options": ["public"]
  },
  {
    "question": "Which segment of code represents a correct way to call a variable argument method counter that takes in integers as its variable argument parameter?",
    "correct_options": ["counter(1, 5, 8, 17, 11000005);"]
  },
  {
    "question": "The basic unit of encapsulation in Java is the:",
    "correct_options": ["class"]
  },
  {
    "question": "The following statement compiles and executes. What do you know for certain? tree.grows(numFeet);",
    "correct_options": ["tree must be a method."]
  },
  {
    "question": "Which of the following creates an object from the Car class listed below?",
    "correct_options": ["Car c = new Car(3000, \"Toyota\");"]
  },
  {
    "question": "A class can only have one constructor. True or false?",
    "correct_options": ["False"]
  },
  {
    "question": "The following code creates an object of type Horse: Whale a=new Whale();",
    "correct_options": ["False"]
  },
  {
    "question": "Why is it not possible to extend more than one class at a time in an inheritance hierarchy chain?",
    "correct_options": ["To prevent confusion for the programmer."]
  },
  {
    "question": "Which of the following is the correct way to call an overridden method needOil() of a super class Robot in a subclass SqueakyRobot?",
    "correct_options": ["super.needOil();"]
  },
  {
    "question": "What is the Java Applet?",
    "correct_options": [
      "A web-based Java program that is embedded into a web browser."
    ]
  },
  {
    "question": "Static methods can't act like \"setter\" methods. True or false?",
    "correct_options": ["True"]
  },
  {
    "question": "Static methods can read instance variables. True or false?",
    "correct_options": ["False"]
  }
]
